[
    {
        "id": "ART-1000",
        "dataset_source": "devrev-dev0",
        "title": "Why You Should Be Using CNAME Abstractions",
        "content": "Here\u2019s the full list of posts for this series:\n\n\n  Part 1: DNS Primer\n  Part 2: CNAME Abstractions <\u2013 You are here\n  Part 3: How We Use CNAME Abstractions\n\n\nWh\n\nWhen multiple things resolve to a single endpoint, using a DNS CNAME abstraction will simplify your configuration.\n\nFor example, say I have three websites:\n\n\n  foo.mycompany.com\n  bar.mycompany.com\n  bas.mycompany.com\n\n\nAnd these all need to resolve back to the same AWS ELB endpoint (e.g., elb-blah.amazonaws.com).\n\nI have two options here:\n\n\n  Create 3 CNAME records and map each to elb.blah.amazonaws.com\n\n\n\n  foo.mycompany.com \u2013> elb.blah.amazonaws.com\n  bar.mycompany.com \u2013> elb.blah.amazonaws.com\n  bas.mycompany.com \u2013> elb.blah.amazonaws.com\n\n\nOR\n\n\n  Create an abstraction CNAME, and map the records to that\n\n\n\n  gw.mycompany.com \u2013> elb.blah.amazonaws.com\n  foo.mycompany.com \u2013> gw.mycompany.com\n  bar.mycompany.com \u2013> gw.mycompany.com\n  bas.mycompany.com \u2013> gw.mycompany.com\n\n\nNow why would I want to do this? I essentially created four records instead of 3\u2026 Preparation.\n\nDNS records can change and evolve constantly. Say, for example, that you moved from AWS to Google Cloud (e.g., glb-blah.cloud.google.com); you\u2019d need to update all three records:\n\n\n  foo.mycompany.com \u2013> glb-blah.cloud.google.com\n  bar.mycompany.com \u2013> glb-blah.cloud.google.com\n  bas.mycompany.com \u2013> glb-blah.cloud.google.com\n\n\nHowever, if you used CNAME abstraction, you would only need to update the record for gw and point to the new GCP endpoint:\n\n\n  gw.mycompany.com \u2013> glb-blah.cloud.google.com\n\n\nBut what if They don\u2019t all point to the same endpoints now? Simple, just create another CNAME abstraction and update foo,bar,bas to point to the necessary endpoints.\n\n\n  foo.mycompany.com \u2013> glb-blah.cloud.google.com\n  bar.mycompany.com \u2013> glb-blah.cloud.google.com\n  bas.mycompany.com \u2013> glb-blah.cloud.google.com\n\n\nShould I always abstract things? Not all the time. Here are the considerations I evaluate whenever I\u2019m looking at this:\n\n\n  Will > 1 thing ever point to this?\n  Is the possibility that this will change non-zero?\n\n\nIn most cases, things are never permanent, so in most cases I use URL abstractions to simplify my life down the line.\n"
    },
    {
        "id": "ART-1001",
        "dataset_source": "devrev-dev0",
        "title": "DevRev PLuG Session Replay",
        "content": "With most things in life, the more context you have, the more informed you are and the better the decisions you can make.\n\nAs a support engineer we are constantly bombarded with customers reaching out for help. Now, what if we could see what the user was doing prior to contacting support? As a developer seeing if the customer\u2019s problem is a defect, seeing the steps they took can be enlightening.\n\nIn comes PLuG Session Replay\u2026 Just wanna see it? Click HERE\n\nWith DevRev PLuG Session Replay we provide the ability to record a users session and automatically attach it to a conversation when its started. This allows those providing support to the customer to see exactly what the customer was doing, and any potential errors, before they contacted support.\n\nThis allows them to have context, empathy, any ideally provide much better support without needing to ask the traditional boring questions of \u201cwhat were you doing when this happened?\u201d\n\nSee it in action\n\n\n  \n\n\nAt-a-glance\n\nThe PLuG Session Replay feature provides the ability to:\n\n\n  Natively record user sessions anywhere where PLuG is installed\n  Automatically attaches session recordings to conversation upon creation\n  Provides full privacy and data masking\n  Replay user sessions, view events and errors\n\n\nHow it works\n\nThis feature can be leveraged anywhere where the PLuG widget is installed. Meaning, if you deploy the DevRev PLuG widget on your website for chat support, you have the ability to natively record user sessions.\n\nFor example, we have the PLuG widget deployed on this site, our marketing site and others. Through the nature of this widget being on our sites, we can take advantage of this feature and track user sessions when new conversations are started.\n\n\n"
    },
    {
        "id": "ART-1002",
        "dataset_source": "devrev-dev0",
        "title": "Tickets, Issues; When to Use Each",
        "content": "As discussed in Busting silos, the WHY of DevRev, the DevRev platform converges the operations and knowledge of objects used to build, operate, support and grow products, companies, and people.\n\n\n\n\n\nGiven this converged nature, it\u2019s important to understand when to use what types of work.\n\nTypes of Work\n\nIf you break down the types of objects used in build and support systems, you will commonly see the following object types:\n\n\n  Items to track engineering/backend work \u2192 Issues\n  Items to track customer requests/problems \u2192 Tickets\n\n\nGiven the converged nature of the DevRev platform, we have both Tickets, and Issues, so when do you use what? The answer is \u201cit depends\u201d on what your role is on the part you\u2019re creating the work item on. In general, issues should be restricted to those individuals that either own or contribute to a part. Tickets should be used for all customer/consumer (internal or external) items.\n\nThe following figure shows a decision tree that will help you identify what work type you should be using (this is not global but part specific):\n\n\n\nFor example, if I work on part foo, I can create issues on it. However, if I am a consumer of part bar I would create tickets which would then be triaged and potentially escalated into an issue by that team.\n\nWhy\n\n\n  Noise and context switching kill productivity\n\n\nHistorically, a huge pain point has been that any systems being used for engineering work are commonly abused by sales, marketing and support teams. For example, a sales rep may create an issue for a developer for a customer request. In the case of support, you\u2019ll commonly see a ton of duplicate issues when only one was really necessary. This leads to a lot of noise for developers, and devalues the notion of an \u201cissue\u201d. By keeping a clear line between tickets and issues, we ensure the following:\n\n\n  issues hold value\n  reduces noise as only valid issues are created/tracked\n  unifies the triage process for escalations between tickets and issues\n\n\nTL;DR\n\n\n  If you work on a part, you create issues\n  If you are a consumer/customer of a part, you create tickets\n\n"
    },
    {
        "id": "ART-1003",
        "dataset_source": "devrev-dev0",
        "title": "Understanding a Support Lead's Pain Points and KPIs",
        "content": "A support team leader is responsible for overseeing the operations and performance of a customer support team. They play a crucial role in ensuring that customers receive timely, accurate, and empathetic assistance, which contributes to customer satisfaction and loyalty. One of the core job functions is to ensure their team is operating as efficiently as possible to provide the best customer support. In times of need, they are the people who will step-in and help coordinate/bring clarity.\n\n\n\nWorkload management & efficiency\n\nAs a leader, it is imperative that your team is aptly staffed and enabled to handle the barrage of incoming requests. If you\u2019re understaffed, you may introduce delays in assisting customers (try calling your internet provider, and you\u2019ll see an example of this). One of the keys here is also making sure your staff can be as efficient and productive as possible. For example, how many mundane tasks/busy work does the team need to do? Are there adequate deflection abilities? Automations? The more efficient the team can be, the more productive it can be. Traditionally people focus more on adding more resources; however, making the process more efficient is equally as important.\n\nAnother key here is ensuring your team is enabled with the tools, knowledge, and \u201csupport\u201d they need to excel in their roles. What tools are you using? Is it efficient? Do you have KBs? Do you have knowledge transfer session (KT) with teams as new features go out?\n\nHow to resolve them:\n\n\n  Leverage intelligent deflection and AI offloads\n    \n      For example, don\u2019t waste time making a human gather context, AI can now very accurately gather context and/or suggest articles.\n    \n  \n  Leverage load in terms of routing\n    \n      Normally routing is statically done or done in a round-robin manner, however, that doesn\u2019t work when cases may be differing in complexity.\n      By using a system that can account for active case load and \u201cbandwidth\u201d you can more adequately spread the load.\n    \n  \n  Automate as much as you can\n    \n      Traditionally updates and notifications are manual which places the burdon on the person working on the item.\n      This is inefficient and doesn\u2019t scale\n      Instead, leverage a system that can proactively, and automatically, send notifications to the customer\n    \n  \n\n\nKPIs to track:\n\n\n  Agent Utilization Rate\n  Ticket Backlog\n  First Response Time\n  Average Resolution Time\n\n\nPerformance measurement\n\nHow do you measure how productive your team is? Customer satisfaction? Are things improving or getting worse?\n\nThis is where setting appropriate KPIs and targets for the team and tracking progress is essential. This will help you determine how things are progressing and identify areas for improvement. For example, say your first response time increased by n% over the past week; what caused this? Too many requests coming in/understaffed? Process problems? Visibility concerns?\n\nBy tracking these KPIs you can ensure you have the objective information you need to help optimize the process.\n\nNOTE: all KPIs are not created equally, ensure you\u2019re focusing on the right things. (I have a section below covering some of the KPIs with example calculations.)\n\nHow to resolve them:\n\n\n  Ensure data sanity/quality\n    \n      Metrics/KPIs are only as good as the data which is being used to calculate them.\n      Gaps in data or invalid data will skew the results and also make them hard to trust.\n      Ensure the data is valid and that any gaps are plugged.\n    \n  \n  Buy, or build, a system that provides tracking\n    \n      Some systems may provide these things by default making life simple.\n      However, as long as you can get the data you can track and calculate on your own.\n    \n  \n  Automate\n    \n      Do NOT calculate these things manually\n      Make sure there is automation to keep these numbers up to date and don\u2019t rely on a human to calculate\n      Manual/human-based calculations will always be out of date and error prone.\n    \n  \n\n\nKPIs to track:\n\n\n  First Response Time\n  Average Resolution Time\n  Customer Satisfaction Score\n  Net Promoter Score\n  Escalation Rate\n\n\nCustomer satisfaction (CSAT)\n\nTechnically this should be at the top of the list as this is all that matters for your customers: keeping them happy. However, it isn\u2019t always that easy, you need to ensure support interactions are handled professionally; and customers receive prompt, accurate, and empathetic assistance. Why is this commonly a pain point? This commonly is the core item that support teams on measured on, and it is a measure of the whole system.\n\nFor example, if your staff isn\u2019t enabled and can\u2019t assist customers, that could impact CSAT. Likewise, if your tools don\u2019t allow you to respond aptly or route things incorrectly, that could impact CSAT. Given that CSAT is an amalgamation of all of these factors, it can commonly be one of the primary pain points. However, this can also be a great indicator of how the system is operating.\n\nHow to resolve them:\n\n\n  Provide good support\n    \n      This is a no-brainer, but is much more difficult than you think.\n      Customers want to get to a resolution ASAP and brevity is key.\n      How to provide good support?\n        \n          Have trained staff\n          Use deflections to help provide self-support\n          Provide proactive notifications\n          Respond quick\n          Don\u2019t \u201cleave them hanging\u201d\n        \n      \n    \n  \n  Automate tracking/surveys\n    \n      You need to be able to track the customer\u2019s satisfaction after a resolution.\n      Do this immediately after to ensure the responses are accurate.\n      Failure to do this immediately will drop off responses and for those responses, they will be inaccurate as it may not be \u201ctop of mind\u201d\n    \n  \n\n\nKPIs to track:\n\n\n  Customer Satisfaction Score\n  Net Promoter Score\n  First Contact Resolution Rate\n\n\nEscalation management\n\nNo matter how trained your team is, they won\u2019t be able to fix everything. In those cases (escalations), you must ensure things don\u2019t get lost in the void. Part of this is ensuring you have visibility helping foster communication between internal teams. If you see an increase in escalations, that could point to a lack of enablement for the team.\n\nKPIs to track:\n\n\n  Escalation Rate\n  Time to Escalation Resolution\n\n\nStaff retention and development\n\nAs much as you must support your customers, it\u2019s also imperative to attract, retain, and develop top talent. How can you help enable them? Are you helping them grow? If the staff gets burnt out or lacks development, it\u2019s a poor situation for everyone. The staff may be unhappy, which may impact their service provided to customers. If that is hurt, that may impact your CSAT.\n\nKPIs to track:\n\n\n  Employee Retention Rate\n  Employee Satisfaction Score\n  Training Hours per Employee\n\n\nInterdepartmental communication\n\nCommunication (or lack thereof) between departments/functions is a common frustration given that support is commonly at the vertex coordinating across external and internal resources. This is partly due to lack of visibility/access (e.g., different functions may use different tools which the other doesn\u2019t have access to) and also the problems that come with this.\n\nFor example, say a customer has a problem, the sales rep wants to be updated, if they can\u2019t resolve the issue they may escalate to engineering. Now support becomes the conduit of information between these various functions. Given older models where each function (sales, support, engineering) have their own system, this process commonly has to be solved through other channels.\n\nKPIs to track: - Cross-functional Collaboration Score - Interdepartmental Issue Resolution Time\n\nBudget and resource constraints\n\nBudget is budget, and just like the business focuses on ROI (hopefully), the support team is a cost center that can be turned into a profit center (with some work). Now, focusing on the budget piece, any cost center will always be under budget scrutiny unless you can demonstrate tangible impact or value. Some support tools can be very costly and they are normally in addition to other tools. Keeping these seat costs down can have a significant impact on the BU\u2019s P&L. One of the keys here is showing the value delivered to customers and/or the potential influence of deals (or even cross/upsell directly).\n\nKPIs to track:\n\n\n  Support Cost per Ticket\n  Support Team Budget Utilization\n\n\nKPI - Definitions\n\nFirst Response Time (FRT)\n\n\n  Definition\n    \n      The average time it takes for a support engineer to respond to a customer\u2019s initial inquiry.\n    \n  \n  Calculation\n    \n      (Sum of response times for all first responses) / (Total number of first responses)\n    \n  \n\n\nSELECT AVG(TIMESTAMPDIFF(MINUTE, t.created_at, r.created_at)) AS FirstResponseTime\nFROM tickets t\nJOIN responses r ON t.id = r.ticket_id\nWHERE r.is_first_response = 1\nAND EXTRACT(@period FROM t.created_at) = EXTRACT(@period FROM CURRENT_DATE);\n-- NOTE: Replace @period with 'DAY', 'WEEK', 'MONTH', or 'QUARTER'.\n\n\nAverage Resolution Time (ART)\n\n\n  Definition\n    \n      The average time it takes to resolve a customer issue from the moment it\u2019s reported.\n    \n  \n  Calculation\n    \n      (Sum of resolution times for all resolved tickets) / (Total number of resolved tickets)\n    \n  \n\n\nSELECT AVG(TIMESTAMPDIFF(MINUTE, t.created_at, t.resolved_at)) AS AverageResolutionTime\nFROM tickets t\nWHERE t.status = 'resolved'\nAND EXTRACT(@period FROM t.created_at) = EXTRACT(@period FROM CURRENT_DATE);\n-- NOTE: Replace @period with 'DAY', 'WEEK', 'MONTH', or 'QUARTER'.\n\n\nCustomer Satisfaction Score (CSAT)\n\n\n  Definition\n    \n      A metric that gauges customer satisfaction with the support provided, typically collected through surveys.\n    \n  \n  Calculation\n    \n      (Number of satisfied responses) / (Total number of responses) * 100\n    \n  \n\n\nSELECT (COUNT(cs.id) * 100) / (SELECT COUNT(*) FROM customer_surveys WHERE EXTRACT(@period FROM created_at) = EXTRACT(@period FROM CURRENT_DATE)) AS CustomerSatisfactionScore\nFROM customer_surveys cs\nWHERE cs.satisfaction = 'satisfied'\nAND EXTRACT(@period FROM cs.created_at) = EXTRACT(@period FROM CURRENT_DATE);\n-- NOTE: Replace @period with 'DAY', 'WEEK', 'MONTH', or 'QUARTER'.\n\n\nNet Promoter Score (NPS)\n\n\n  Definition\n    \n      A measure of customers\u2019 likelihood to recommend the company\u2019s product or service based on their support experience.\n    \n  \n  Calculation\n    \n      (Percentage of Promoters - Percentage of Detractors) * 100\n    \n  \n\n\nSELECT\n  ((COUNT(CASE WHEN nps.score >= 9 THEN 1 END) * 100 / COUNT(nps.id)) -\n  (COUNT(CASE WHEN nps.score <= 6 THEN 1 END) * 100 / COUNT(nps.id))) AS NetPromoterScore\nFROM net_promoter_surveys nps\nWHERE EXTRACT(@period FROM nps.created_at) = EXTRACT(@period FROM CURRENT_DATE);\n-- NOTE: Replace @period with 'DAY', 'WEEK', 'MONTH', or 'QUARTER'.\n\n\nTicket Backlog\n\n\n  Definition\n    \n      The number of unresolved support tickets at any given time, which can indicate workload and efficiency issues.\n    \n  \n  Calculation\n    \n      (Total number of open tickets) - (Total number of tickets closed during a specific period)\n    \n  \n\n\nSELECT (COUNT(*) - (SELECT COUNT(*) FROM tickets WHERE status = 'closed' AND EXTRACT(@period FROM created_at) = EXTRACT(@period FROM CURRENT_DATE))) AS TicketBacklog\nFROM tickets\nWHERE status != 'closed'\nAND EXTRACT(@period FROM created_at) = EXTRACT(@period FROM CURRENT_DATE);\n-- NOTE: Replace @period with 'DAY', 'WEEK', 'MONTH', or 'QUARTER'.\n\n\nEscalation Rate\n\n\n  Definition\n    \n      The percentage of support tickets that require escalation to higher-level support or other departments.\n    \n  \n  Calculation\n    \n      (Total number of escalated tickets) / (Total number of tickets) * 100\n    \n  \n\n\nSELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM tickets WHERE EXTRACT(@period FROM created_at) = EXTRACT(@period FROM CURRENT_DATE)) AS EscalationRate\nFROM tickets\nWHERE is_escalated = 1\nAND EXTRACT(@period FROM created_at) = EXTRACT(@period FROM CURRENT_DATE);\n-- NOTE: Replace @period with 'DAY', 'WEEK', 'MONTH', or 'QUARTER'.\n\n\nAgent Utilization Rate\n\n\n  Definition\n    \n      The percentage of an engineer\u2019s working hours spent on handling customer support tickets, which helps measure workload balance and resource allocation.\n    \n  \n  Calculation\n    \n      (Total hours spent on support tasks) / (Total working hours) * 100\n    \n  \n\n\nSELECT (SUM(TIMESTAMPDIFF(MINUTE, t.start_time, t.end_time)) * 100) / (COUNT(DISTINCT t.engineer_id) * 8 * 60) AS AgentUtilizationRate\nFROM ticket_work_times\n\n"
    },
    {
        "id": "ART-1004",
        "dataset_source": "devrev-dev0",
        "title": "Understanding a Support Engineer's Pain Points and KPIs",
        "content": "A support engineer is a skilled technical professional who provides frontline assistance to customers experiencing issues or having questions related to a company\u2019s products or services. Their primary goal is to resolve customer concerns efficiently and effectively while maintaining a high level of customer satisfaction. Support engineers often work in high-pressure environments, dealing with a diverse range of technical complexities and customer interactions.\n\n\n\nTechnical complexity\n\nThe product the engineer is supporting can vary in complexity from trivial to daunting. For software companies, who release new features/updates frequently, this can be a very difficult thing to stay ahead of. Unless there is a good knowledge transfer (KT) structure in place, the engineer may always be lacking the knowledge they need to perform optimially.\n\nAnother complexity is that each customer\u2019s environment may be different, further adding to the complexity of troubleshooting.\n\nKPIs to track:\n\n\n  First Contact Resolution Rate\n  Knowledge Base Contributions\n\n\nHigh-pressure environment\n\nDealing with people are angry or frustrated isn\u2019t easy, even for the calmest person. In their role, they are the primary person triaging requets from customers and status updates from others in the organization; this can make this a very complex and tense role.\n\nAdditionally, most support organizations are very speed focused, so there is pressure to deliver good results quickly.\n\nKPIs to track:\n\n\n  Individual First Response Time\n  Individual Average Resolution Time\n  Ticket Volume\n\n\nRepetitive tasks\n\nAll customers are different, but not all problems or process steps are. One of the most frustrating things in this position is dealing with the repetitive grunt work (I refer to this as \u201cwork suck\u201d) and the potential monotony of tasks. HINT: automation and/or intelligent systems are key here!\n\nTo make these resources most productive, it is important to leverage automation to handle some of these lower-level activities; then, by the time it reaches the engineer, they are dealing with more complex pieces of the puzzle. Examples of this are KB deflection, Q&A flows (gather context), and system offloads (AI is great here).\n\nA great example is the monotony and frequency of \u201cWhat\u2019s the status of this?\u201d inquiries. If people have access to the system, and the system is automatically tracking changes, you can eradicate this scenario.\n\nKPIs to track:\n\n\n  Tasks per ticket\n  Automation/deflection Rate\n  Task Variety Score\n\n\nKPI Definitions\n\nIndividual First Response Time (FRT)\n\n\n  Definition\n    \n      The average time it takes for a specific support engineer to respond to a customer\u2019s initial inquiry.\n    \n  \n  Calculation\n    \n      (Sum of response times for all first responses by the engineer) / (Total number of first responses by the engineer)\n    \n  \n\n\nSELECT engineer_id, AVG(TIMESTAMPDIFF(MINUTE, t.created_at, r.created_at)) AS IndividualFirstResponseTime\nFROM tickets t\nJOIN responses r ON t.id = r.ticket_id\nWHERE r.is_first_response = 1\nAND EXTRACT(@period FROM t.created_at) = EXTRACT(@period FROM CURRENT_DATE)\nGROUP BY engineer_id;\n-- NOTE: Replace @period with 'DAY', 'WEEK', 'MONTH', or 'QUARTER'.\n\n\nIndividual Average Resolution Time (ART)\n\n\n  Definition\n    \n      The average time it takes for a specific support engineer to resolve a customer issue from the moment it\u2019s reported.\n    \n  \n  Calculation\n    \n      (Sum of resolution times for all resolved tickets by the engineer) / (Total number of resolved tickets by the engineer)\n    \n  \n\n\nSELECT engineer_id, AVG(TIMESTAMPDIFF(MINUTE, t.created_at, t.resolved_at)) AS IndividualAverageResolutionTime\nFROM tickets t\nWHERE t.status = 'resolved'\nAND EXTRACT(@period FROM t.created_at) = EXTRACT(@period FROM CURRENT_DATE)\nGROUP BY engineer_id;\n-- NOTE: Replace @period with 'DAY', 'WEEK', 'MONTH', or 'QUARTER'.\n\n\nIndividual Ticket Volume\n\n\n  Definition\n    \n      The number of support tickets handled by a specific engineer, which can help identify workload distribution and skill set alignment.\n    \n  \n  Calculation\n    \n      Total number of tickets handled by the engineer during a specific period\n    \n  \n\n\nSELECT engineer_id, COUNT(*) AS TicketVolume\nFROM tickets\nWHERE EXTRACT(@period FROM created_at) = EXTRACT(@period FROM CURRENT_DATE)\nGROUP BY engineer_id;\n-- NOTE: Replace @period with 'DAY', 'WEEK', 'MONTH', or 'QUARTER'.\n\n\nIndividual Customer Satisfaction (CSAT) Score\n\n\n  Definition\n    \n      A metric that gauges customer satisfaction with the support provided by a specific engineer, typically collected through surveys.\n    \n  \n  Calculation\n    \n      (Number of satisfied responses for the engineer) / (Total number of responses for the engineer) * 100\n    \n  \n\n\nSELECT engineer_id, (COUNT(cs.id) * 100) / (SELECT COUNT(*) FROM customer_surveys WHERE engineer_id = cs.engineer_id AND EXTRACT(@period FROM created_at) = EXTRACT(@period FROM CURRENT_DATE)) AS IndividualCustomerSatisfactionScore\nFROM customer_surveys cs\nWHERE cs.satisfaction = 'satisfied'\nAND EXTRACT(@period FROM cs.created_at) = EXTRACT(@period FROM CURRENT_DATE)\nGROUP BY engineer_id;\n-- NOTE: Replace @period with 'DAY', 'WEEK', 'MONTH', or 'QUARTER'.\n\n\nKnowledge Base Contributions\n\n\n  Definition\n    \n      The number of articles or updates a support engineer contributes to the company\u2019s internal or external knowledge base, which can indicate their commitment to knowledge sharing and continuous improvement.\n    \n  \n  Calculation\n    \n      Total number of articles or updates contributed by the engineer during a specific period\n    \n  \n\n\nFirst Contact Resolution (FCR) Rate\n\n\n  Definition\n    \n      The percentage of support tickets resolved by a support engineer during the first interaction with the customer, which can indicate the engineer\u2019s efficiency and problem-solving abilities.\n    \n  \n  Calculation\n    \n      (Total number of tickets resolved on first contact by the engineer) / (Total number of tickets handled by the engineer) * 100\n    \n  \n\n\nTraining Hours per Employee\n\n\n  Definition\n    \n      The average number of training hours completed by a support engineer, which can indicate their commitment to professional development and staying up-to-date with product knowledge.\n    \n  \n  Calculation\n    \n      (Total training hours completed by the engineer) / (Total number of engineers)\n    \n  \n\n\nAutomation Rate\n\n\n  Definition\n    \n      The percentage of repetitive tasks that have been automated, reducing the workload on support engineers and increasing efficiency.\n    \n  \n  Calculation\n    \n      (Total number of automated tasks) / (Total number of repetitive tasks) * 100\n    \n  \n\n\nTask Variety Score\n\n\n  Definition\n    \n      A measure of the diversity of tasks handled by a support engineer, which can indicate the level of monotony or variety in their daily work.\n    \n  \n  Calculation\n    \n      (Total number of different tasks performed by the engineer) / (Total number of tasks performed by the engineer)\n    \n  \n\n\nEmployee Satisfaction Score\n\n\n  Definition\n    \n      A metric that gauges the overall satisfaction of a support engineer with their job, work environment, and career opportunities, typically collected through surveys.\n    \n  \n  Calculation\n    \n      (Number of satisfied responses from the engineer) / (Total number of responses from the engineer) * 100\n    \n  \n\n\nWork-Life Balance Score\n\n\n  Definition\n    \n      A measure of a support engineer\u2019s satisfaction with their work-life balance, taking into account factors such as working hours, shift work, and on-call duties.\n    \n  \n  Calculation:\n    \n      (Number of satisfied responses regarding work-life balance) / (Total number of responses regarding work-life balance) * 100\n    \n  \n\n\n\n\nEmployee Retention Rate\n\n\n  Definition\n    \n      The percentage of support engineers who remain employed with the company during a specific period, which can indicate job satisfaction and employee loyalty.\n    \n  \n  Calculation:\n    \n      (Number of support engineers retained) / (Total number of support engineers at the beginning of the period) * 100\n    \n  \n\n"
    },
    {
        "id": "ART-1005",
        "dataset_source": "devrev-dev0",
        "title": "Choosing the Right Systems For Your Startup",
        "content": "When starting your business, you need some core systems; choosing the correct ones can set you up for success. We started from scratch when we started DevRev, which was a very empowering moment as it\u2019s genuinely a \u201cgreen-field\u201d moment with unlimited flexibility (and long-term consequences).\n\nThis post will cover some of our chosen systems and the considerations that led us to those conclusions.\n\nWhere To Focus\n\nThe core systems come down to the type of business you are in; however, for a SaaS company, the following systems were necessary to get us started:\n\n\n  Core\n    \n      HRIS\n      Identity/IdP\n      Payroll\n      Accounting\n      Git/SCM\n      Work management\n    \n  \n  Collaboration\n    \n      Mail\n      Messaging\n      Conferencing\n    \n  \n  Hosting\n    \n      Website\n      DNS/Domains\n    \n  \n\n\nI didn\u2019t include any infrastructure hosting services we leveraged, as those came later and deserve their own post!\n\nWhat We Choose And Why\n\nAt 3+ years in, we are running the same stack we chose initially, and it\u2019s been working flawlessly.\n\nHere\u2019s what we chose:\n\n\n  Core\n    \n      HRIS \u2192 BambooHR\n      Identity/IdP \u2192 Okta\n      Banking \u2192 Brex\n      Payroll \u2192 Gusto\n      Accounting \u2192 Xero\n      Git/SCM \u2192 GitHub\n      Work management \u2192 DevRev (obv.)\n    \n  \n  Collaboration\n    \n      Mail \u2192 Gsuite\n      Messaging \u2192 Slack\n      Conferencing \u2192 Zoom/Gsuite\n    \n  \n  Hosting\n    \n      Website \u2192 Vercel\n      DNS/Domains \u2192 GoDaddy (pre me) then Route 53\n    \n  \n\n\nThe following figure shows a high-level overview of these systems and some flows between them:\n\n\n\nWhen configuring this 3+ years ago, we set it up so that everything flows from BambooHR to Okta to all other systems. This means BambooHR is the primary system of record for employees and drives Okta, which in turn drives all other applications. This has worked beautifully and has truly been something we have \u201cset it and forget it.\u201d\n\nHRIS \u2192 BambooHR\n\nWhat is it?\nAn HRIS (human resources information system) is a system that keeps track of all of your employee records and information. It contains vital information like employee IDs, start dates, job history, and many other metrics.\n\nWhat should you look for?\n\n\n  Integration with your preferred IdP\n  APIs for extensibility\n  Required compliance and regulations (this will vary by your business)\n  Payroll integration (nice to have)\n\n\nWhat did we choose?\nBambooHR\n\nWhy did we choose this?\nThis one was pretty simple as we were way to small for Workday and the pricing was way too high. BambooHR was priced per user, pricing was good, and they had an integration with our IdP (Okta) which was likely the most essential factor.\n\nDid we actually need an HRIS as a startup? Yes, once you hiring more than founders. At Nutanix, there was no HRIS when I joined, and years after being employed, HR reached out to me to get a copy of my offer letter (yikes).\n\nConclusion: Once you start hiring non-founders, get an HRIS.\n\nWhat would we have done differently?\nNothing, been impressed with this so far.\n\nIdentity/IdP \u2192 Okta\n\nWhat is it?\nAn identity or IdP service is something used for handling authentication. Traditionally these were primarily Active Directory, Redius, or LDAP, however, these have been modernized with Azure AD (well \u201cmodernized\u201d) and Okta.\n\nWhat should you look for?\n\n\n  Integrations with our HRIS\n  Integrations with planned apps\n  SAML/OIDC support (all IdP should support this)\n  Scalability\n  SLAs/Uptime\n  Compliance\n  Support\n\n\nWhat did we choose?\nOkta\n\nWhy did we choose this?\nHaving worked with Active Directory in some semblance for the past 20+ years, I was very familiar with its functionality and problems. We needed something that was flexible, scalable, and wasn\u2019t built using 20+ year old constructs (Azure AD is still AD).\n\nWhat did we need?\n\n\n  Automated integration with our HRIS for user provisioning during onboarding\n  Ability to federate auth to a variety of different services across vendors\n  Something I could set and forget\n\n\nWe set up BambooHR to be our profile master for Okta, meaning it was the authoritative source of truth for user information; this was a thing of beauty. In 3+ years I haven\u2019t really had to touch this at all.\n\nWhen a user\u2019s start date is approaching, we have a pre-start buffer we use to pull the employee into Okta (this also works for job changes). Within 5 days of starting, the user is provisioned into Okta and all of their other accounts are provisioned. The email set in BambooHR is used to specify the login to Okta and the primary email the GSuite integration provisions. They get an email to their personal email to configure their Okta account, and voila they have access to all systems they need (well mostly all of them).\n\nConclusion: Choose an IdP in tandem with your HRIS.\n\nWhat would we have done differently?\nNothing, been impressed with this so far.\n\nBanking \u2192 Brex\n\nWhat is it?\nKeeping your money safe is crucial for all businesses. This became even more apparent with the failures of SVB and First Republic banks this year. A bank does just what you think, it keeps your money for the business and can be an important part of lending as well.\n\nWhat should you look for?\n\n\n  Insurance limits\n  How leveraged they are (this is key as a bank run can kill the bank)\n  APIs\n  Integrations with other tools (e.g., payroll, expense, etc.)\n  Reporting and visibility\n\n\nWhat did we choose?\nBrex\n\nWhy did we choose this?\nThis was a little bit of a bet given that Brex is a fully virtual bank (e.g., no retail locations); however, it has worked out quite well so far. Provisioning cards is simple, reporting is great, and it has APIs we\u2019ve integrated with.\n\nWhat would we have done differently?\nNothing, been impressed with this so far; however, this one was a little surprising.\n\nMail \u2192 Google Workspace (Gsuite)\n\nWhat is it?\nEmail and collaboration.\n\nWhat should you look for?\n\n\n  SCIM provisioning via IdP\n  Pricing and model\n\n\nWhat did we choose?\nGoogle Workspace (Gsuite)\n\nWhy did we choose this?\nAs mentioned in the IdP section above, I\u2019ve worked a lot with Exchange, Sharepoint, and other Microsoft products and I like the simplicity of the Google Workspace solution. Does it have all of the features of Microsoft 360? No, but it gives us enough of what we need and integrates beautifully with Okta. If we had gone Azure AD on the IdP front, that obviously would have impacted this choice.\n\nWhat would we have done differently?\nNothing, been impressed with this so far.\n\nSource Control \u2192 GitHub\n\nWhat is it?\nSource control (typically Git), is a system used to lifecycle and store source code and other data.\n\nWhat should you look for?\n\n\n  IdP integration for authentication\n  Groups synchronization\n  CI/CD integrations\n  Usability\n  Data protections\n  Compliance\n\n\nWhat did we choose?\nGithub\n\nWhy did we choose this?\nFor hosted Git solutions there\u2019s really two core options: GitHub and GitLab, GitHub being the largest by a far cry even though GitLab has some cool features.\n\nWith Github we could integrate natively into Okta for SSO and SCIM based user provisioning. As users are onboarded into Okta, and based upon their department (e.g. Engineering), it will automatically invite the users to our organization in GitHub.\n\nWe then have IdP synchronization for groups which repo access is mapped to. So as users changes groups, their privileges and visibility can change without us having to re-configure anything on the GitHub side.\n\nWhat would we have done differently?\nNothing, been impressed with this so far.\n\nWork Management \u2192 DevRev\n\nWhat is it?\nWork management (e.g., JIRA, Trello, Linear, DevRev, etc.), is a system used to track and plan work items. This is primarily important for engineering teams early as as you need to roadmap and plan execution across engineers.\n\nWhat should you look for?\n\n\n  IdP integration for authentication\n  Groups synchronization\n  Customization\n  Simplicity\n\n\nWhat did we choose?\nDevRev\n\nWhy did we choose this?\nOne of the core pillars of the DevRev platform is work so we worked to build what we would eventually use. Previously, we had used JIRA for 10+ years at our previous companies, and while we could have used that when building DevRev, we decided to not as it would force us to build fast so we could start leveraging.\n\nWe currently run 100% of our build, operate, support and grow on our platform. This is key as we need to \u201cfeel the pain\u201d to ensure we build something truly amazing.\n\nWhat would we have done differently?\nNothing, we are building the tool we are using.\n"
    },
    {
        "id": "ART-1008",
        "dataset_source": "devrev-dev0",
        "title": "Why (and how) you Need to Embrace <s>Selling</s> Solutions, not Products",
        "content": "\nI see the following problem frequently:\n\n\n  \u201cPeople try to sell people products\u201d\n\n\nSelling solutions instead of products is a shift in mindset that focuses on addressing customers\u2019 problems or needs rather than just promoting or selling a product\u2019s features. By embracing this approach, businesses can build long-lasting relationships, foster customer loyalty, and increase sales by being able to target solutions to problems.\n\nIf you don\u2019t care about the approaches and want to get straight to the WHY and HOW click HERE\n\nApproaches\n\nThere are many ways to sell, but in this case, let\u2019s focus on two of the most common approaches: product-based selling and solution-based selling. So we can contrast, let\u2019s use an example company that sells Customer Relationship Management (CRM) software.\n\nProduct-Based Selling \n\n\nIn a product-based selling approach, the salesperson would focus on the features and specifications of the CRM software. They might talk about its user-friendly interface, the number of integrations it offers, or the advanced reporting capabilities. The salesperson would primarily emphasize the features of the CRM without necessarily connecting them to the specific problems or needs the customer is facing.\n\nFor B2C and smaller items, impulsive behavior can be exploited and may work here. However, for larger purchases (e.g., B2B), this approach is far less effective (if it is I\u2019m concerned about who\u2019s making buying decisions).\n\nProblems with this approach:\n\n\n  The features mentioned may not be applicable and/or relatable to the customer -> mismatch\n  Even with applicability, the features mentioned may not address current pain points and/or problems for the customer\n  The customer may not feel \u201cheard\u201d\n  Lacks any empathy for the customer, intended or not\n\n\nSolution-Based Selling \n\n\nIn a solution-based selling approach, the salesperson would start by asking the customer questions to understand their pain points and the challenges they face with their current CRM system or lack thereof. They might discover that the customer is struggling with manual data entry, has difficulty tracking leads through the sales funnel, or experiences low user adoption due to a complex system.\n\nBased on this understanding, the salesperson would then present the CRM software as a solution to these challenges, demonstrating how it can automate data entry, provide real-time visibility into the sales pipeline, and offer a more user-friendly interface that encourages adoption. The focus would be on addressing the customer\u2019s needs and helping them achieve their desired outcomes.\n\nWhat happens if they won\u2019t answer questions?\n\nPropose some common pain points other customers have stated and see if they apply. This will help you narrow down their pain points and get them talking.\n\nWhy Focus On Solutions\n\n\n  People buy solutions, not products.\n\n\nThink about it this way\u2026\n\nDo you buy a new driver because of a feature like a 60x carbon twist face or because it\u2019ll help you hit bombs and the fairways more? You buy it to hit bombs.\n\n\n\nDo you buy a self-driving vehicle because it has 48 sensors and a neural network or because it makes commuting more manageable and safer? Do you buy DevRev because it has cool AI or because it can make your life easier and eliminate noise?\n\nThe theme is evident in these examples: people buy solutions, not products.\n\nHow to Get Started\n\nResearch and understand your target audience\n\nLearn about your target customers, their industries, and the everyday challenges they face. Know their specific pain points and how your offerings can address them. These may vary by persona, industry, company size, and other demographics. The more you understand who you\u2019re speaking with, the better you can understand their potential pain points and how to solve them. However, as much as you think you know, always ask questions to confirm.\n\nAsk the right questions\n\nDevelop a set of open-ended questions that encourage customers to share their challenges, objectives, and priorities. Practice active listening, taking note of customers\u2019 concerns, and showing empathy. In some cases, they may not be open to answering questions. In that case, use your knowledge of the audience (point 1) and ask if they face any of the mentioned challenges.\n\nDevelop a problem-solving mindset\n\nFocus on identifying and understanding the customer\u2019s needs, problems, and desired outcomes rather than simply promoting the features of your products or services. Be prepared to tailor your offerings to each customer\u2019s unique situation. You won\u2019t be able to help them in all scenarios, and that\u2019s OK; just be honest about where you can and can\u2019t help fix their problems. By being honest you can gain credibility and open up potential opportunities in the future.\n\nClearly articulate the value proposition\n\nConnect your product or service to the customer\u2019s needs and pain points, demonstrating how your solution can help them achieve their goals or overcome their challenges. Use specific examples and highlight the benefits, both short-term and long-term.\n\nIf the customer is having problems hitting bombs, don\u2019t lead with something like a 60x carbon twist face, but rather that you can help them hit bombs (the what) with proprietary technology like a 60x carbon twist face (the how).\n\nRemember, match the solution to a pain point (the what) and reinforce with the how.\n\nBuild trust\n\nEstablish credibility and trust by demonstrating industry knowledge, offering personalized advice, and sharing relevant experiences or case studies. Be honest about the capabilities of your product or service and avoid overselling. In almost all cases, being upfront about limitations will garner respect and establish long-term trust. Saying no to some items is also okay and in some cases will help gain additional credibility.\n\nBe consultative\n\nPosition yourself as a problem solver or trusted advisor rather than just a salesperson. Offer insights, recommendations, and support that go beyond your product or service, such as industry best practices, tips for implementation, or resources for ongoing education.\n\nFollow up and maintain relationships\n\nAfter the sale, continue to engage with your customers, offering support and guidance as needed. Check-in periodically to ensure their needs are being met and identify opportunities for up-selling or cross-selling. Products don\u2019t always last, but relationships do.\n\nTL;DR\n\n\n  Ask your customer questions\n  Figure out what pain points they have\n  Provide solutions to them\n  Don\u2019t focus on the product first!\n\n"
    },
    {
        "id": "ART-1013",
        "dataset_source": "devrev-dev0",
        "title": "How to Avoid Common Pitfalls With Growth Metrics",
        "content": "\nIn my current and past experiences, I\u2019ve seen a ton of data and how people look at \u201cwhat is good\u201d and the common pitfalls people make. As much as people like \u201cgood looking\u201d numbers, it\u2019s important to make sure you\u2019re making decisions on the right data.\n\nIn most scenarios, they all fall ill due to the following problems:\n\n\n  1. They focus on the wrong metrics\n\n  2. They have bad data (or no data)\n\n  3. They don\u2019t analyze at varying timelines (including trends/seasonality)\n\n  4. They don\u2019t break-down engagement\n\n\nExample 1: Poor Focus\n\nA perfect example of this (won\u2019t disclose where this came from), I saw a post with the comment, \u201ctraffic is moving upward\u201d:\n\n\n\nIf we plot this data a little bit differently, it is clear there is a problem:\n\n\n\nNow, if you look at the top line quantity numbers they look great, however, if you look at the engagement rates they look horrible. What does this mean? The cohorts you\u2019re targeting are the wrong ones, or your \u201coffers\u201d aren\u2019t appealing to them. Meaning that you\u2019re broadcasting your site to a great populous, however, the content or site isn\u2019t appealing to them and hence they aren\u2019t engaging. A good way to think of a website, is every piece that is actionable is like an ad or offer, what you present to the viewer needs to be appealing to get them to \u201cbite.\u201d\n\nFrom May to November the number of sessions went from 5,199 to 90,136 which is a growth rate of 16.3x! However, if you look at the growth rate of engaged sessions they went from 3,518 to 13,614 for the same period, or a growth rate of 2.86x. The difference between 16.3x and 2.86x is very large and needs to be addressed.\n\nAnytime you expand outreach you\u2019re likely going to see a decrease in conversion rates, as you\u2019re moving from a very targeted crowd who is the ideal candidate to potentially expanding to some who may or may not be interested, however this should not be\n\nThe key here is tracking the changes in these conversion rates and adjusting them. If conversion rates drop significantly, your targeting, offers or approach is flawed. If they don\u2019t change significantly, keep it up.\n\nThis also applies to many things outside of digital traffic, including things like lead to opportunities, etc.\n\nIn general, top line quantity metrics don\u2019t mean sh!t if your conversion or engagement rates drop!\n\nExample 2: Bad Data\n\nI\u2019ve been working with Google Analytics for a decent amount of time and am always cautious about data quality. In this scenario, we will highlight the importance of a few core points:\n\n\n  Look at different periods\n  Look for anomalies\n  Always question data sanity\n\n\n\n  Anytime you see anomalies, ALWAYS, figure out WHY. You can see GA4 also highlighted these anomalies (the circles on the plot).\n\n\nIf we look at the 90 day view we can see a huge 2 week spike in users:\n\n\n\nI dug deeper into this data and noticed that other sites besides the marketing site (e.g., the app) were sending data to this property. Essentially, someone had re-used the GTM code for the marketing website (including tags) and placed it in our app. \n\nIf we filter out the incorrect sites, we can see the real data which doesn\u2019t look as good:\n\n\n\nAt first glance people during the spike would be like \u201cthis is great\u201d, but the devil is in the details. If you didn\u2019t drill into the data and the bad data continued to proliferate, you could actually be getting worse when you think you\u2019re doing amazing.\n\nI\u2019ll repeat, anytime you see an anomaly, always drill down and figure out why. This will not only be a good indicator of a good campaign or social which should be doubled down on, but will also ensure you\u2019re looking at clean data.\n\nExample 3: Not looking at different time periods\n\nIf we look at the following graph, upon first glance things look pretty good; engagement is increasing:\n\n\n\nHowever, if we compare this 7 day chart to the 28 day chart, it doesn\u2019t look as good, or does it?\n\n\n\nIf we zoom out to the 90 day, it is clear that we are not trending the right way, or is it?\n\n\n\nA common problem is people don\u2019t look at how things are trending at different levels of granularity. A daily increase is great, however, if the quarterly is still trending down, there\u2019s a problem that needs to get fixed.\n\nA good way to help identify these things without requiring chart analysis, is using metrics that calculate rolling comparisons [Day, Week, Month, Quarter, Year]. This will help highlight when things are moving the wrong way.\n\nNOTE: There is also a cyclical nature to some items which may impact trends.\n\nExample 4: The need to slice and dice engagement\n\nSocial engagement is all the buzz nowadays with social media and can be a very beneficial medium when done right. When we look at the commonly used metrics for measuring social performance, we commonly see the following:\n\n\n  impressions\n  click-through rate (CTR)\n  reaction rate\n  share rate\n  comment rate\n  and many others\u2026\n\n\nThese are very valuable metrics to measure how your content (essentially an ad or offer) is responded to. However, commonly people become ingrained in an \u201cecho chamber\u201d where \u201cfriendlies\u201d aka employees, partners, family members or supporters are the primary people engaging on the content. While customer engagement is key, one of the core focuses is to attract new prospects.\n\n\n  Again, dive into the data and filter\n\n\nTo ensure you\u2019re looking at non-biased data, it\u2019s important to sift through the data and break it down into cohorts to see what the real engagement is with your target segments. It\u2019s also very important to see what social platforms work for different segments as well as post types (e.g., a fluffy marketing post on Reddit would get destroyed).\n\nFor example, whenever I post a post like this on a social platform like LinkedIn, it will get some reactions, shares and comments. For this one, the engagement was great with 384 reactions, 27 comments, and 7 reposts.\n\n\n\nHowever, of the 384 reactions, 42 were from DevRev employees, so as far as reactions that matter, less than 342 were relevant to my target audience. Still great engagement, but don\u2019t be fooled by hero numbers, always sift through the data!\n\nIf we look at another post that was more targeted at DevRev prospects, we can see the following:\n\n\n\nObviously it was a much smaller target so engagement wasn\u2019t close to the previous example. However, of the 22 reactions, 5 of those were from DevRev employees and the majority of the remaining we\u2019re actually targets but rather \u201cfriendlies\u201d.\n\nIn short, the engagement in that post was really bad. However, if I didn\u2019t filter through the engagement I would have thought things are great. I commonly see some posts with \u201cgreat engagment\u201d, however, upon review it was clear that all of the engagement from friendlies, that isn\u2019t good!\n\nWhat can impact engagement?\n\nObviously a lot of things can impact engagement, timing, channel, luck, images, keywords, etc. It\u2019s important to run tests and then analyze the results and see what channels, times, keywords, graphics and styles attract the correct segments. NOTE: these will vary by region and industry. For example, I find great engagement on LinkedIn when I post when APAC is still awake, when I post later in the day I see a huge drop off as most engagement comes not from the US but rather APAC.\n\nStay Tuned\n\nI\u2019ll follow this post up with another focusing on key metrics to track! Stay tuned.\n"
    },
    {
        "id": "ART-1014",
        "dataset_source": "devrev-dev0",
        "title": "Company",
        "content": "\n    \n\n        \n            \n              The Book of DevRev\n            \n\n            \n              This is an open-source project to help consolidate the knowledge of those `building`, `operating`, `supporting` and `growing` companies, products and services.\n            \n          \n\n        \n\n            \n              \n                  \n                    Core\n                  \n                  \n\n  \n    \n      \n        Home\n      \n    \n      \n        Parts\n      \n    \n      \n        Blog\n      \n    \n      \n        Team\n      \n    \n  \n\n\n                \n            \n\n            \n              \n                \n                  Other\n                \n                \n\n  \n    \n      \n        About\n      \n    \n  \n\n\n                \n            \n\n            \n        \n          \n      \n    \n    \n    \n        Contact Us\n        \n\n\n  \n  \n  \n  \n    Address:\n      DevRev, 610 Brazos St. Suite 200, Austin, Texas 78738 (View Map) \n    \n  \n\n      \n    \n\n  "
    },
    {
        "id": "ART-1018",
        "dataset_source": "devrev-dev0",
        "title": "Search",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nOperators Fields\nSearch.\n\nSearch works across all the DevRev apps to provide you with smooth navigation and access to issues, tickets, articles, customers, and more. Using search queries and commands helps you filter and give you more accurate search results.\n\nTo initiate the search you can do Cmd + K on Mac or Ctrl + K on Windows or click Search. on top of the left navbar.\n\nA search query consists of the following syntax:\n1 [operator]* [field]* [term/phrase]*\n\nThe above query specifies the following:\n\nFiltering\nFull-text search terms/phrases\n\nFiltering is denoted by the query's [operator]* [field]* , which represents a logical AND of all operators (if specified). This is used to reduce the list of possible objects that can be returned in search results.\n\nFull-text search terms/phrases are denoted by [term/phrase]* and are used to do full-text searches on object text fields.\n\nExample: state: open, closed (field value)\n\nOperators.\n\nOperators are used to filter the search results. The following table shows the syntax of each operator along with examples.\n\n-\n\nSyntax Description Examples in: <body/title> Aids in searching within the body of the ticket/issue/enhancement or title. in: title crm in: title \"crm exp\" in: title crm exp in:body \"bot issues\" type: <object type> Enables users to filter by object type. Supported object types include: issue, enhancement, ticket, revu (for searching contacts), question_answer, conversation, article, devu (for searching dev contacts), account, feature, runnable. type:issue type:enhancement in:title CRM type:revu type:enhancement, opportunity type:issue, enhancement in:title crm Acts as an exclusion in search results. \"-\" can be used for the same purpose. type:issue - crm type:issue in:title - crm state Filters results based on the stage: open, closed, or in_progress. state:open state:closed state:in_progress severity Filters out tickets with the desired severity level. Supports: blocker, high, medium, low. severity:high type:ticket -severity:low (filters all tickets excluding the ones with low severity)\n\nFields.\n\nFields can be used along with operators to filter the search results further. The following table shows types of fields, syntax and it's examples.\n\n<field_name>:<v>\n\nTypes of field Syntax Examples Fields <field_name>:true (or :1) <field_name>:false (or :0) isCustomer: True Submitted: 0 Numeric fields <field_name>:<v>, <field_name>:<<v>, <field_name>:><v> <field_name>:v1..v2 <field_name>:<=<v> <field_name>:>=<v> revenue: < 100 revenue: 500..2000 discount>=0.25 tickets=< 5 String fields Name: alice Name: Alice,bob,eve Date fields <field_name>:<v> <field_name>:<=<v> <field_name>:v1..v2 <field_name>:><v> <field_name>:>=<v> <field_name>:<<v> target_release_date< 2020-10 target_release_date< 2020 Array fields <field_name>:<v> Here <v> is a CSV list of values where a match occurs if the array field contains an element having any of the values in the list. tags: performance (string array) magic_dates_c: 1970-01-01,2006-01-02 (date array) Modified_date: 2024-01-02..2024-01-05 (fetches records that were modified between 2024-01-02 and 2024-01-05) created_date: 2023 (fetches records that were created in 2023)\n\nPrevious Glossary Next People insights\nOn this page\n\nOperators Fields\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1024",
        "dataset_source": "devrev-dev0",
        "title": "DevRev for Jira app",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nInstallation Updating the app Configuration Features Usage\nDevRev for Jira app.\n\nThe DevRev for Jira app enables a 2-way sync and migration process. Jira users can now access and interact with DevRev tickets linked to their assigned Jira issues, view internal and public comments, and resolve issues collaboratively. Additionally, efficiently communicate updates to all linked ticket owners in case of widespread issues. Interact with DevRev and Jira Airdrop directly from Jira.\n\nDevRev for Jira app works only when Jira Airdrop is installed in your organization. Refer to Jira Airdrop for more information.\n\nInstallation.\n\nAny organization's administrator can install the DevRev for Jira app from the Atlassian Marketplace within their Atlassian site, enabling it for all users across the organization.\n\nUpdating the app.\n\nMinor updates are applied automatically without updating or reinstalling the app.\nFor major updates, administrators must manually update the app by navigating to Apps. > Manage apps. > DevRev for Jira.. DevRev will notify administrators of major updates.\n\nConfiguration.\n\nTo configure the app go to Apps. > Manage Apps. > DevRev for Jira..\n\nGo to the DevRev app and retrieve the platform access token by clicking Settings. > Account. > New token..\nCopy both the token and its corresponding token name. Paste them into the appropriate input fields within the app configuration.\nEnable the desired features by toggling them on. Only enabled features will be visible to all users within your Atlassian organization.\nFeatures.\n\nThe side panel on the Jira issue displays DevRev tickets linked to the Jira issue and their counterparts in DevRev.\nIf there are multiple tickets linked to the issue, look at the details of each ticket by selecting a ticket with the dropdown field provided.\nClick on the Create New Ticket. button to create a ticket in DevRev by filling necessary attributes. You can turn this feature off in the app configuration if you want.\nTo view comments on the tickets linked to the discussions that support teams had with customers or internally on DevRev, head over to the DevRev activity tab which is present in the same line as the Comments. tab of Jira.\nTo send comments from the Jira issue to the DevRev ticket, select the ticket from the dropdown, type in the comment, and send. Current limitation: The username of the user whose PAT was used to install the app will be used to send the comments to DevRev. This feature of sending comments from the Jira issue to linked DevRev tickets can be disabled. Click on the Broadcast to ticket. button if you want to send the same comment to all tickets linked to the issue. The broadcast ability can also be turned off from the app configuration.\n\nUsage.\n\nClick on Link Tickets. to search for DevRev tickets to link to the issue from Jira itself. You can disable this feature in the app configuration.\nSelect a ticket from the dropdown to refer to useful details like a customer who raised the ticket, product part, severity, and stage of the ticket with a link to which directly opens in DevRev.\nGo to the DevRev activity tab and select the ticket from the dropdown whose comments you need to read. There is a comment visibility filter to look at specific types of comments (for example, internal vs external comments).\n\nThis is not related to the comments on Jira issues syncing with comments on DevRev issues via Airdrop 2-way sync.\n\nPrevious Jira Airdrop Next Linear Airdrop\nOn this page\n\nInstallation Updating the app Configuration Features Usage\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1027",
        "dataset_source": "devrev-dev0",
        "title": "Descope's Journey to a Single Consolidated Inbox with DevRev",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading Descope drives its PLG motion using a single consolidated inbox\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2F3a58f14df63744b39fddce457b95bf106f7d85ed-2880x1234.png%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2F3a58f14df63744b39fddce457b95bf106f7d85ed-2880x1234.png%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2F3a58f14df63744b39fddce457b95bf106f7d85ed-2880x1234.png%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2F3a58f14df63744b39fddce457b95bf106f7d85ed-2880x1234.png%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2F3a58f14df63744b39fddce457b95bf106f7d85ed-2880x1234.png%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2F3a58f14df63744b39fddce457b95bf106f7d85ed-2880x1234.png%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2F3a58f14df63744b39fddce457b95bf106f7d85ed-2880x1234.png%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2F3a58f14df63744b39fddce457b95bf106f7d85ed-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2F3a58f14df63744b39fddce457b95bf106f7d85ed-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / descope Descope drives its PLG motion using a single consolidated inbox\nDescope drives its PLG motion using DevRev to funnel customer queries from multiple channels into a single consolidated inbox\n\n6 min read\n\nLast Updated 02.13.2024\n\nCompany Descope\nEmployees 11-50\nFounded April 2022\nHeadquarters California\nIndustry Software development\nThe Company.\n\nDescope is an identity management platform that helps developers build secure frictionless authentication and user journeys for any application. The company was founded in April 2022 by a team of cybersecurity experts and is based in Los Altos, CA.\n\nCo-founder of Descope, Gilad Shriki, brings over ten years of experience in the cybersecurity industry and has a keen focus on customer success and innovation. The idea for Descope was inspired by the success of the founding team's previous company, Demisto.\n\nDescope\u2019s mission is to provide app developers with modern, hassle-free user authentication workflows, offering secure passwordless methods such as social logins, SAML SSO, OTP, magic links, and biometrics to abstract away implementation details and risk management. By taking care of auth, Descope helps developers spend more time on core app initiatives.\n\nThe Challenge.\n\nThe recent spate of data breaches and cyber-attacks have underscored the importance of robust authentication, and Descope is committed to enhancing security for all users by providing the best service for their customers at scale.\n\nAnd the team knew what it would take to build a product-led company, \u201cThere will be customers that are on our free forever tier, which is awesome. I cannot justify a two hundred-person team to support that scale...We need to look at the digital journey and digitization of the customer journey.\u201d Descope wanted to engage their customers in context: in-app, in forums, email, Slack, etc. They knew that sending their users to a separate ticketing portal wasn\u2019t going to cut it. The immediacy of the interaction was important.\n\nWith nearly a decade of experience running Customer Success teams, Shriki is keenly aware of the unique challenges teams will face in the upcoming decade.\n\nAs the world evolves, you\u2019ll see more customer success products like DevRev that automate the journey and provide customer insights and less that require a CSM to call customers and type notes. There are too many products like this and too few products that automate that process.\u201d\n\nGilad Shriki\n\nCo-founder, Descope\n\nHe knew that providing quick and accurate live support is only half the battle. They also need to automate customer journeys in a reliable way.\n\nThe Solution.\n\nDescope anticipated challenges in providing top-notch service at scale and that\u2019s where DevRev came in. \u201cIn some ways, I think creating a self-service product is even harder than hiring an enterprise sales team,\u201d says Shriki, \u201cbut the reward is much better because now, we can see people joining the product in a self-service manner and actually deploying it without talking to us. DevRev shines in these situations because we don\u2019t need to provision anything, customers can open tickets if they\u2019re on our console and have a question, they hit us in DevRev and we answer right there.\u201d\n\nThanks to DevRev's extensible, API-first platform, Descope has enabled seamless self-service, all while automating its customer success efforts. By tapping into DevRev's platform, Descope has been able to connect to third-party products and tools, as well as implement powerful automation and digital assistance. Shriki is sure that the future of customer success will rely less on human input and more on automation and scalability - and thanks to DevRev, Descope is ahead of the curve.\n\nBut the benefits don't stop there. DevRev's platform has allowed Descope to streamline their self-service process by managing support requests from different channels in a single, easy-to-use inbox. This makes it a breeze for their customers to engage with Descope's product, get answers quickly, and provide product feedback. And with DevRev's ability to connect everything, Descope is able to stay connected to their users even when those users aren't actively using their product.\n\nThe ability of DevRev to connect everything, so users can actually send me an email and it will hit my single pane of glass Inbox, that\u2019s immense, that\u2019s important. I see one view of all the conversations I\u2019ve had with them. That\u2019s the key for me.\u201d\n\nGilad Shriki\n\nCo-founder, Descope\n\nAll in all, DevRev has been the key to helping Descope design a truly self-service product and provide top-notch support to its users.\n\nDescope is just getting started and aims to become the best authentication journey platform out there in part by pushing automation and digital assistance. According to Shriki, \u201cThis is where DevRev comes to life...One of the things that we want to do next with DevRev is to configure our widget, so that DevRev replies automatically to users when they ask questions, and we can serve them knowledge-base articles, or even documentation links.\"\n\nDescope also plans to use DevRev for journey orchestration. \"We can know where the customer is because DevRev is in our console and it knows what customers are doing and pop up different notifications and assistance to them. I think you can see the thread here: digital and scale. For me, this is the number one priority for our service motion today: make sure that the product provides self-service and guidance at the scale that we need to support a PLG motion.\u201d\n\nTop Features.\n\nPLuG, in-app customer center\nTeam inbox for customer conversations\nTickets triage and management\nMulti-channel support with Slack, Email, and PLuG\nTicket clustering and attribution to product\nAutomatic updates\nConvergence automation\nCustomized automatic responses\nCustomer record management\nKnowledge base deflection\nMetrics and reporting\nMetric and insights\n\nThe Benefits.\n\nAPI-first platform enabled PLG and self-service, and automated customer success\nThe ability to connect everything made it easier for Descope's team to manage support requests from different channels in a single pane of glass.\nThe extensible platform has been instrumental in enabling Descope's product-led growth.\nStreamlined the self-service motion for Descope's users, enabling them to open tickets and receive support without needing a lot of provisioning mechanisms. Helped Descope provide the best service at scale and maintain user authentication in a secure and frictionless fashion.\nEnabled Descope to design a truly self-service product and provide users with immediate and seamless support.\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1028",
        "dataset_source": "devrev-dev0",
        "title": "Uniphore's Customer Support Transformation With DevRev",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading Uniphore builds a proactive support culture with DevRev\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2F8530a09fe813cea69e937640ce54356ad5fcbe96-2880x1234.png%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2F8530a09fe813cea69e937640ce54356ad5fcbe96-2880x1234.png%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2F8530a09fe813cea69e937640ce54356ad5fcbe96-2880x1234.png%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2F8530a09fe813cea69e937640ce54356ad5fcbe96-2880x1234.png%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2F8530a09fe813cea69e937640ce54356ad5fcbe96-2880x1234.png%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2F8530a09fe813cea69e937640ce54356ad5fcbe96-2880x1234.png%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2F8530a09fe813cea69e937640ce54356ad5fcbe96-2880x1234.png%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2F8530a09fe813cea69e937640ce54356ad5fcbe96-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2F8530a09fe813cea69e937640ce54356ad5fcbe96-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / uniphore Uniphore builds a proactive support culture with DevRev\nUniphore uses DevRev to get to the root of customer's problems and prevent them from recurring\n\n7 min read\n\nLast Updated 03.05.2024\n\nCompany Uniphore\nEmployees 501 to 1000\nFounded Oct 2008\nHeadquarters Palo Alto, CA\nIndustry Enterprise AI\nThe Company.\n\nUniphore supports 1500 customers and clients at the world\u2019s biggest enterprises, across major industries like telecom, banking and financial services, healthcare, retail, insurance and other verticals. Uniphore's leading Enterprise AI platform supports billions and billions of customer and employee engagements across 20 countries on a weekly basis.\n\nAt Uniphore, AI isn\u2019t just a product but is at the core of the company\u2019s operations and culture. A traditional support tool that used outdated workflows, therefore, wouldn\u2019t cut it. We spoke to Abhiram Kramadhati, Director of Technical Support, and Vinod Muthukrishnan, Chief Customer Officer at Uniphore to understand how the company uses DevRev to deliver action-oriented customer support.\n\nThe Challenge.\n\nBuilding a culture of support.\n\nRight from the start, Abhiram and Vinod were certain that customer support at Uniphore wasn\u2019t going to be about granular ticket metrics, but about building a larger customer-centric culture. Driven by two of the key cultural pillars of the organization, \u2018One Big Team\u2019 and 'Customer First', the company asked itself how support teams could become more deeply connected to product teams and be integral in delivering product improvement insights based on engagements with customers. Key to this change would be the tools customer support teams used each day to help solve customer issues.\n\n\u201cSupport and operations are one of the few functions where a big part of the culture is driven by the platform and tooling decisions you make,\u201d says Abhiram. \u201cAs complexity and scale of the business increase, complexity for people in the organization should not. The less time our support engineers spend on technical work, the more they can spend on taking care of our customers.\u201d\n\nTicketing vs customer support.\n\nFor the team at Uniphore, there was a clear difference between ticketing and support. As Vinod explains, a ticketing system\u2019s only purpose is to measure how many tickets come in, how many get escalated, how many get resolved, etc.\n\nTicket management is merely a system of record but we want to implement a system of action. This encourages support teams to explore why a customer issue occurred and how it can be resolved so the problem never recurs. The best outcome a founder is looking for is for a support ticket to never enter in the first place.\u201d\n\nVinod Muthukrishnan\n\nCCO, Uniphore\n\nAs a B2B tech company, many incoming customer queries require engineering and product management teams to work together. However, the previous tool the company was using did not allow for this collaboration and had a transactional approach to customer support. Uniphore needed a support tool that would allow engineering and support teams to collaborate effortlessly and solve customer tickets. The team began to look for a solution that aligned with the support team\u2019s culture of problem-solving.\n\nThe Solution.\n\nMigrating to a new way of work.\n\nWhen the team was first introduced to DevRev, it was clear that DevRev believed in the same values of customer support as Uniphore. \u201cI\u2019ve been in a lot of product conversations where the first thing you see is a demo,\u201d says Abhiram. \u201cBut what really struck me with DevRev is that they delved deep into how a company works from support to backlog.\u201d\n\nAdditionally, DevRev\u2019s Airdrop feature that allowed Uniphore to effortlessly migrate data from their former customer support tool ticked a very important box. \u201cThe world of heavy enterprise where everything needs to be done by a system integrator is over,\u201d says Vinod. \u201cTools that are easily deployed, used by my people, configured by my people and that I can democratize access to was the number one foundational requirement of any product that we evaluated.\u201d\n\nWhen Uniphore made the decision to move to DevRev, migration was a breeze. Using Airdrop, within just 6 hours, it was able to migrate:\n\n16,000 tickets\n72,000 comments\n17,000 attachments\n\nThe Results.\n\nBuilding a single environment for support.\n\nDevRev custom-built an integration with Rocketlane and set up Pager Duty alerts and incident management workflows to enable the support team to live in a single environment. \u201cWith DevRev, we have a single source of truth,\u201d explains Abhiram. \u201cAny customer update on Rocketlane immediately reflects within DevRev. We know what level of customer we are dealing with and what the SLAs for each are.\u201d\n\nWhen we onboarded our team to DevRev, they realized that it offered a completely new way of working. They don\u2019t need to use all these different tools to monitor and respond to customer tickets. They can live solely within the DevRev environment.\u201d\n\nAbhiram Kramadhati\n\nDirector of Technical Support, Uniphore\n\nOne of the major goals Uniphore had for their support function was to identify issues before the customer so they never had to reach out in the first place. The team invested in monitoring tools to raise alerts. DevRev worked with Uniphore to ensure that alerts from these tools come in as issues or tickets within the DevRev platform. Even downstream, with the Jira bidirectional sync, support can create an issue within DevRev and it automatically gets updated on Jira. This made work quicker, more predictable, and consistent for the support team.\n\nMaking support an ally to product.\n\nThe integrations between DevRev and other telemetry and development tools that Uniphore was using have helped support engineers to dive deep into customer issues.\n\nThere is a steel thread between how a customer requirement gets captured, coded into design, developed, and delivered. Once it's deployed in the real world, we get instant feedback on how it's performing, and if there are any usability issues. DevRev allows us to be able to have a 2-way seamless flow of information without loss of context. That is the holy grail.\u201d\n\nVinod Muthukrishnan\n\nCCO, Uniphore\n\nThe transparency of support data across the organization has allowed support teams to become a strong ally to engineering and product management. \u201cSupport is the only layer between the customer and the company and is the only way to understand how the product is performing in the field. With DevRev, we are able to operate in a tool-agnostic way so that data flows freely from different departments,\u201d says Abhiram.\n\nLooking ahead.\n\nThe ultimate goal that Uniphore has is for every department, from product management to engineering, to have equal visibility of the customer. \u201cWe want engineering managers and PMs to be able to plan sprints and product features around user stories that create the most impact\u201d, says Abhiram. \u201cAn engineering leader should be able to use support data to learn that a certain component in the product is not working well and then be able to invest in changing it.\u201d\n\nAs Uniphore continues to expand further, the culture of support it has created will set the foundation for its growth.\n\nI see DevRev as changing the way we work. Our engagement with DevRev has felt more like a partnership than just buying something off the shelf. Our landscape is constantly changing and we\u2019re frequently introducing new monitoring tools and pieces of information. The agility of the team in responding to these changes has been very impressive.\u201d\n\nAbhiram Kramadhati\n\nDirector of Technical Support, Uniphore\n\nTop Features.\n\nDevRev Airdrop\nJira bidirectional sync\nRocketlane integration\nSlack integration\nSalesforce integration\nKnowledge base articles\nConversation routing\n\nThe Benefits.\n\nMigration of legacy data within 6 hours (vs 6 weeks without Airdrop)\nUnified view of all customer interactions from different channels\nTransparency of support data across the organization\nAbility of support team to create Jira tickets directly within DevRev\nImproved collaboration between support, engineering, and product teams\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1029",
        "dataset_source": "devrev-dev0",
        "title": "Aditya Birla Capital optimized user experience with DevRev PLuG",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading Aditya Birla Capital optimizes user experience with DevRev\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2F4c9a9cb5ca5a8e9dfcb15435909ae987cb0487d2-2880x1234.webp%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2F4c9a9cb5ca5a8e9dfcb15435909ae987cb0487d2-2880x1234.webp%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2F4c9a9cb5ca5a8e9dfcb15435909ae987cb0487d2-2880x1234.webp%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2F4c9a9cb5ca5a8e9dfcb15435909ae987cb0487d2-2880x1234.webp%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2F4c9a9cb5ca5a8e9dfcb15435909ae987cb0487d2-2880x1234.webp%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2F4c9a9cb5ca5a8e9dfcb15435909ae987cb0487d2-2880x1234.webp%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2F4c9a9cb5ca5a8e9dfcb15435909ae987cb0487d2-2880x1234.webp%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2F4c9a9cb5ca5a8e9dfcb15435909ae987cb0487d2-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2F4c9a9cb5ca5a8e9dfcb15435909ae987cb0487d2-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / aditya-birla-capital Aditya Birla Capital optimizes user experience with DevRev\n\n5 min read\n\nLast Updated 02.13.2024\n\nCompany Aditya Birla Capital\nEmployees 10000+\nFounded 2007\nHeadquarters Mumbai, India\nIndustry Finance\nThe company.\n\nAditya Birla Capital is a leading finance company in India. Recognized as a Fortune 500 company, it oversees assets of over 4 billion USD. Having a special focus on the insurance sector, it offers customers a wide range of solutions through its mobile apps. This allows 25+ million customers to access services from an extensive network of hospitals spread across the country.\n\nThe challenge.\n\nLimited user issue insights.\n\nThe swift growth of digital technology has made it essential for finance leaders like Aditya Birla Capital to offer a mobile app that caters effectively to the needs of their users.\n\nThe app allows users to manage policy issuance, renewal, and claims processing effortlessly. However, challenges arose when users needed a better experience with the app. The support teams primarily depended on screenshots from users to diagnose issues. This method often resulted in delayed problem resolution, as screenshots might not adequately convey the exact nature of the issues.\n\nConsequently, the reliance on user-provided screenshots impeded the delivery of prompt and effective solutions.\n\nStruggle with issue identification.\n\nThe development team was having trouble figuring out which interactions caused issues like crashes, ANRs, and UI freezes on certain screens for users. It was challenging for them to identify and solve these issues that happened occasionally or under specific conditions.\n\nNavigating blind spots in the app.\n\nThe product and design teams relied solely on quantitative data or anecdotal feedback, posing a challenge in gaining a nuanced understanding of actual user interactions within its app. This limitation hindered their ability to discern user engagement patterns and identify hotspots and dead zones encountered while navigating the app interface.\n\nThe solution.\n\nSupport resolves issues independently.\n\nThe support team started using DevRev PLuG to reproduce reported issues visually. They carefully examined the user journey, focusing on the screens where errors occurred.\n\nIt also provided a timeline of user interactions leading to the bugs, enhancing their comprehensive understanding of the issues. This approach empowered the team to conduct detailed, case-by-case investigations and deliver customized solutions. Additionally, it enabled them to quickly share video replays with the development team, especially for addressing critical issues.\n\nReplicate and fix bugs faster.\n\nBy using DevRev PLuG and stack trace to replay user sessions visually, the developers had insights into the specific actions triggering issues. This method greatly assisted in accurately reproducing and diagnosing the problems.\n\nBy combining session replay with a stack trace, they enhanced their debugging efforts, as it helped pinpoint the source of bugs more precisely \u2014 whether they stemmed from user actions, app functionalities, or interactions with connected APIs. This dual approach made identifying and resolving bugs much more efficient and effective.\n\nUnderstand user interaction.\n\nDevRev PLuG helped the product and design teams understand user interactions and how to improve the UI. It highlighted areas in the app with frequent activity to indicate where users interact the most.\n\nWith this visibility, the design team evaluated the placement and effectiveness of key buttons throughout the app.\n\nThe impact.\n\nFaster bug diagnosis.\n\nWith the implementation of DevRev PLuG, both the development and support teams were able to cut down on troubleshooting time significantly. The tool's on-demand user session recordings enabled the support team to visualize the issues reported in the mobile app instantly.\n\nThis meant no more time-consuming attempts to replicate bugs based solely on user descriptions. Instead, the replays provided clear visibility into the exact user steps and device actions that led to errors, allowing the team to identify the causes of issues quickly. This efficiency in pinpointing problems reduced the time needed from days to minutes. As a result, the teams could accelerate the deployment of fixes, significantly enhancing customer satisfaction by reducing app instability and improving overall user experience.\n\n\"Insights from DevRev drove a 30% reduction in our app crashes. Our customer behavior data lives in DevRev for our Android app so we can quickly identify and take action on any roadblocks across our UI/UX. It also helps our customer support team to debug issues in real-time. All this adds up to very comprehensive improvements and new features in DevRev\"\n\nDeeksha Anand, Design Head, Aditya Birla Health.\nImproved user journeys and feature adoption.\n\nThe product and design teams now have a detailed insight into user interactions and behaviors within their mobile apps. Deeksha Anand, the Design Head, emphasized the significant impact of using heatmaps.\n\nThis tool lets the team quickly observe and understand user behavior in real-time. This powerful feature aids them in making iterative improvements to the app's interface. They can make informed decisions by analyzing how users interact with different app elements. This enabled the team to refine the design, paving for a more intuitive, user-friendly, and optimized app interface, ultimately enhancing the user experience.\n\nAdditionally, the product team effectively utilizes heatmaps to analyze user interest and usage patterns across the app's extensive range of over 50+ features. This analytical approach allows them to strategically prioritize developing and refining features that customers use more frequently.\n\nThe team can focus on the most significant impact areas by identifying which features are most popular and which might need enhancement. Consequently, this targeted approach to product development leads to improved feature adoption and an overall enhancement in the user journey.\n\nAs users find the app more aligned with their needs and preferences, this directly contributes to a better overall experience with the product.\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1030",
        "dataset_source": "devrev-dev0",
        "title": "Jar improved customer insights and increased conversion rates using DevRev",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading Jar improves customer insights and increased conversion rates using DevRev\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2F368dc196fd104148bf45982c889a6e94563615e4-2880x1234.webp%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2F368dc196fd104148bf45982c889a6e94563615e4-2880x1234.webp%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2F368dc196fd104148bf45982c889a6e94563615e4-2880x1234.webp%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2F368dc196fd104148bf45982c889a6e94563615e4-2880x1234.webp%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2F368dc196fd104148bf45982c889a6e94563615e4-2880x1234.webp%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2F368dc196fd104148bf45982c889a6e94563615e4-2880x1234.webp%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2F368dc196fd104148bf45982c889a6e94563615e4-2880x1234.webp%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2F368dc196fd104148bf45982c889a6e94563615e4-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2F368dc196fd104148bf45982c889a6e94563615e4-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / jar Jar improves customer insights and increased conversion rates using DevRev\n\n5 min read\n\nLast Updated 02.13.2024\n\nCompany Jar\nEmployees 251-500\nFounded 2021\nHeadquarters Bangalore, India\nIndustry Finance\nThe company.\n\nJar, one of India's fastest-growing fintech startups, modernizes the traditional habit of saving in physical gold by offering users an option to micro-invest in digital gold. Its custom-built mobile apps have helped more than 15 million users streamline their journey to building digital wealth.\n\nAiming to attract a million more users each year, Jar plans to expand its offerings to include a broader array of financial instruments for diversification.\n\nThe challenge.\n\nLimitations in understanding users.\n\nOne of the most significant challenges for Product Managers (PMs) today is effectively capturing and analyzing user pain points within the app. While conventional analytic tools provide exhaustive metrics, PMs are still limited in understanding the 'why' behind them. For Jar, understanding users was even more complex as most users are not tech-savvy and are often reluctant to share feedback.\n\nJar wanted faster product iterations, for which it conducted user testing and interviews. However, these manual methods were non-scalable, consuming up to 15 days to yield any actionable insights. This slow feedback loop left Jar dissatisfied, impeding its efforts to rapidly enhance its offerings.\n\nUndetectable conversion drop-offs.\n\nAnkit Dhawan, Jar's lead PM, consistently sought to optimize conversion flows. Dhawan shared how they aimed to enhance the gold subscription autopay journey. Yet his team noticed increased drop-off rates soon after rolling out the changes, defying their expectations. Moreover, while a conventional funnel analysis tool showed the percentage of users dropping off at each step, it failed to provide any actionable diagnosis.\n\nInability to reproduce users\u2019 issues.\n\nA large portion of Jar's user base comes from lower and middle-income groups who access the app on low-end devices. This made it difficult to replicate issues. While tests passed on a few devices and emulators, there was a lack of visibility into bugs leaving developers unable to diagnose the root causes.\n\nThe solution.\n\nUnderstanding at scale.\n\nJar\u2019s product team used DevRev PLuG to scale user research and analysis. Instead of spending several weeks extracting data manually, the team filters out user segments using events, user behavior, functional issues, performance, APIs, and more. This was possible because DevRev PLuG collects granular data from the app and makes it available in a few clicks.\n\nThe product team could find answers to unusual behavior such as: Why are users spending over 120 seconds on the login page? and Why do many users navigate back and forth between a few screens without completing a key journey?\n\nAs a standard practice, Jar started using DevRev PLuG after every new release for faster validation. The team quickly spotted what was wrong without waiting for user complaints. With access to contextual insights linking technical errors with struggling behavioural patterns, Jar could continuously improve user experience.\n\n\"DevRev has improved cross-team collaboration. It's easy to share issue details and work together with the development, design, and other teams.\"\n\nAnkit Dhawan, Lead Product Manager, Jar.\nDrilling down on the reasons for drop-offs.\n\nDevRev's Funnel Analytics unlocked insights beyond just drop-off percentages. By exposing technical failures causing user struggle, Jar could pinpoint the reasons behind declining conversion rates on critical journeys. For instance, when analyzing the gold subscription journey, the team identified issues related to data loading and screen rendering. Armed with this visibility, the product team could share a link with developers to replay the issue along with logs to troubleshoot and deploy fixes swiftly.\n\nReplicating user issues.\n\nDevRev PLuG auto-captures issues like crashes and UI freezes happening on real user devices. These issues can be then filtered by OS, phone model, network, app version, and so on. Many issues that couldn\u2019t have been replicated on an identical device environment or a browser-based emulator, were now possible.\n\nThe impact.\n\n\" DevRev has made hypothesis testing effortless \" Dhawan stated.\n\nSignificant time saved in research and analysis.\n\nBy validating features directly against user session data, Jar significantly reduced reliance on manual user interviews. This enabled the team to dedicate more bandwidth to interpreting insights and identifying optimization opportunities.\n\n3% Lift in conversions.\n\nThe gold autopay subscription is Jar\u2019s high-impact conversion journey. Within a few days of funnel analysis on DevRev PLuG, the team could rectify issues resulting in a lift of 3% in conversions.\n\n\"DevRev is an all-in-one suite to continuously optimize digital experience.\"\n\nAnkit Dhawan, Lead Product Manager, Jar.\nIncreased developer productivity.\n\nDevRev PLuG increased developer productivity by providing real-time insights into user struggles and by facilitating collaboration with the product team. It helped Jar uncover bugs impacting customers directly, allowing for prioritized issue resolution without additional explanation.\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1031",
        "dataset_source": "devrev-dev0",
        "title": "AR Digital Wealth cuts support TAT by 60% with faster issue solving",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading AR Digital Wealth cuts support TAT by 60% with faster issue solving\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2F44cf97a274e65923f18076fafb104a5eeebb5a9a-2880x1234.webp%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2F44cf97a274e65923f18076fafb104a5eeebb5a9a-2880x1234.webp%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2F44cf97a274e65923f18076fafb104a5eeebb5a9a-2880x1234.webp%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2F44cf97a274e65923f18076fafb104a5eeebb5a9a-2880x1234.webp%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2F44cf97a274e65923f18076fafb104a5eeebb5a9a-2880x1234.webp%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2F44cf97a274e65923f18076fafb104a5eeebb5a9a-2880x1234.webp%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2F44cf97a274e65923f18076fafb104a5eeebb5a9a-2880x1234.webp%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2F44cf97a274e65923f18076fafb104a5eeebb5a9a-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2F44cf97a274e65923f18076fafb104a5eeebb5a9a-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / anand-rathi-case-study AR Digital Wealth cuts support TAT by 60% with faster issue solving\n\n4 min read\n\nLast Updated 02.13.2024\n\nCompany Anand Rathi Digital Wealth\nEmployees 1000+\nFounded 1994\nHeadquarter Mumbai, India\nIndustry Wealth management\nThe company.\n\nAnand Rathi Digital Wealth (AR Digital Wealth) is a fintech company that leverages technology to significantly expand private wealth solutions. It offers digital solutions to High Net Worth Individuals (HNIs) through a mobile-first platform, overseeing clients with assets worth millions. The company is committed to delivering the best digital wealth services to its clients.\n\nThe challenge.\n\nUnidentifiable onboarding drop-offs.\n\nAR Digital Wealth has adopted a digital-first approach, keeping pace with the increasing inclination of investors towards online platforms. Their user-friendly mobile app is designed to enable High Net Worth Individuals (HNIs) to access and manage their investments anytime, anywhere. This approach is particularly appealing to tech-savvy customers. However, the app encountered several issues, especially in crucial areas like the onboarding process, which challenged the company's growth.\n\nKuntal Modi, the Product Manager at AR Digital Wealth, pointed out that diagnosing problems in the app's onboarding process, particularly around the login and splash screens, was challenging. The lack of detailed data made it hard to identify the reasons behind user drop-offs in these early stages of the app experience.\n\nDifficulty mapping user interactions.\n\nModi highlighted the significance of analyzing user interactions and behavior in AR Digital Wealth's app to identify essential touchpoints. Gaining this insight helps implement changes that enhance the app's experience. Initially, the team relied on manual methods such as gathering user feedback and making assumptions to map user journeys. However, this approach became more challenging to scale effectively as the app's user base expanded.\n\nInability to troubleshoot issues.\n\nThe development team revealed they were facing challenges in effectively troubleshooting issues such as crashes and Application Not Responding (ANRs) within its mobile app. To address this, they heavily relied on the feedback and screenshots sent by users. This dependency on users' inputs resulted in prolonged identification and resolution times, causing significant delays\n\nThe solution.\n\nVisual playback of issues.\n\nDevRev PLuG helps product teams by providing a video of how users interact with the apps\u2019 login and splash screens. This visual playback aids in pinpointing where users encounter issues and identifying confusing elements. These insights are then shared with the development team, allowing for quick issue resolution and minimizing drop-offs during the onboarding journey.\n\nFurthermore, the PLuG aids in comprehensively analyzing different aspects like user interactions, navigation paths, and specific actions within an application. This capability has allowed for detailed mapping and identifying areas in the mobile app that need enhancement. By understanding these aspects, valuable insights are gained, enabling strategic improvements to the mobile app's user experience.\n\nReplicate all exceptions.\n\nUsing the DevRev PLuG, the development team replicated and diagnosed issues such as crashes, ANRs, rage taps, and UI freezes accurately. This tool worked in tandem with crash logs and error logs. At the same time, the team was able to conduct in-depth analyses to identify the specific user interactions that lead to rage taps\n\nDevRev ensured that user issues were directly communicated to the product and development teams. This collaborative approach across teams significantly reduced the time required to enhance the user experience, fostering a more efficient resolution process.\n\nThe benefits.\n\nReduced turnaround time by up to 60% and increased collaboration.\n\nThe team utilized DevRev to pinpoint where users had issues during the onboarding journey. This allowed them to quickly address and resolve issues without waiting for user feedback after the error occurred, saving time in issue resolution.\n\nDevRev helped development, product, and support teams to. work together more effectively.\n\n\u201cDevRev significantly contributed to reducing issue resolution time and enhancing client app usage by replicating and addressing the reported issues faced by our clients.\u201d\n\nKuntal Modi, Product Manager, Anand Rathi Digital Wealth.\nOptimized user journeys.\n\nDevRev has transformed AR Digital Wealth's approach to user experience. By diving deep into UX analytics, the team identified and refined key navigational touchpoints. The result? A more intuitive and seamless journey for users, marked by strategically repositioned and redesigned UI elements.\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1032",
        "dataset_source": "devrev-dev0",
        "title": "Optimizing user experience: ShemarooMe's success with DevRev",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading Optimizing user experience: ShemarooMe's success with DevRev\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2F3fb5775d0e79d32cf5bedbaa1b645fa08651c062-2880x1234.webp%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2F3fb5775d0e79d32cf5bedbaa1b645fa08651c062-2880x1234.webp%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2F3fb5775d0e79d32cf5bedbaa1b645fa08651c062-2880x1234.webp%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2F3fb5775d0e79d32cf5bedbaa1b645fa08651c062-2880x1234.webp%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2F3fb5775d0e79d32cf5bedbaa1b645fa08651c062-2880x1234.webp%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2F3fb5775d0e79d32cf5bedbaa1b645fa08651c062-2880x1234.webp%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2F3fb5775d0e79d32cf5bedbaa1b645fa08651c062-2880x1234.webp%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2F3fb5775d0e79d32cf5bedbaa1b645fa08651c062-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2F3fb5775d0e79d32cf5bedbaa1b645fa08651c062-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / shemaroome Optimizing user experience: ShemarooMe's success with DevRev\n\n5 min read\n\nLast Updated 02.13.2024\n\nCompany Shemaroo Entertainment Ltd.\nEmployees 501-1000\nFounded 2019\nHeadquarters Mumbai, India\nIndustry Entertainment\nThe company.\n\nShemaroo Entertainment Ltd is an India-based media giant, boasting a legacy of over 60 years. Its award-winning Over The Top (OTT) media platform, ShemarooMe, offer users a rich collection spanning Bollywood movies, web series, and popular regional music. With its mobile apps, Shemaroo continues to deliver exceptional entertainment to millions of subscribers in India and beyond \u2014 amassing loyal fans across 150+ countries.\n\nThe challenge.\n\nOver the past 7 years, mobile content consumption has skyrocketed in India. A bulk of this boom was due to tailwinds from cheaper smartphones and 4G data. ShemarooMe could seize the opportunity to become one of the largest OTT service providers. But the OTT space has fierce competition today.\n\nEvery player in the industry works hard to boost user retention, engagement, and conversions. To see real improvements in these key growth areas, providing the best user experience is essential.\n\nUnderstanding this, ShemarooMe was well aware of changing user expectations. Their main concern was the need for more insights into how users interact with their mobile apps. This resulted in: A lack of user monitoring.\n\nShemarooMe consistently implements weekly updates, focusing on UI/UX enhancements and resolving issues. The team, however, confronts a notable challenge: establishing an effective method to monitor and assess the impact of these updates on their users. They needed help gauging whether these changes improve the user experience or inadvertently create new issues, highlighting a need for a more refined tracking process. Understanding user pain points.\n\nThe product managers recognized that there were better ways to learn about poor user experiences than waiting for negative product reviews. They sought a proactive approach to identify and address user pain points. The PMs aimed to enhance various user journeys, optimize UI/UX, efficiently troubleshoot crashes, and effectively replicate and resolve any noticeable issues before they escalate to negative feedback.\n\nThe solution.\n\nFollowing a thorough evaluation of various tools, ShemarooMe chose DevRev for its comprehensive features. DevRev met all their needs, offering issue reproduction, UX analysis, heatmaps, and funnel analysis. A key factor in their decision was DevRev's efficient, bloat-free SDK. Additionally, the excellent support from DevRev's customer success team, who have been consistently helpful, played a significant role in their choice. Setting up a continuous optimization process.\n\nAt ShemarooMe, every major update is closely monitored using DevRev PLuG, a proven effective practice in identifying and fixing numerous issues. For instance, after updating the video-playing control feature, the team noticed through PLuG that users struggled to locate the control buttons. Reacting swiftly, the team reverted to the previous control UI, incorporating only minor changes. This agile approach enables the team to deliver and uphold a high-quality user experience consistently.\n\n\u201cDevRev PLuG is like having a fully loaded toolkit for monitoring user experience. It's not just about numbers and data; it lets you see and understand how users interact and react. It's like having a window into your user's world.\u201d\n\nJoseph John, Sr. Product Manager, ShemarooMe.\nAnalyzing issues beyond metrics.\n\nDrop-offs, crashes, and logs are typical challenges, but DevRev's PLuG uniquely connects these elements to provide a comprehensive view of issues. ShemarooMe utilized this feature to reproduce user complaints for their support and development teams accurately. Additionally, their marketing team leveraged it to analyze user interactions with various screens and banners, gaining valuable insights into the effectiveness of their campaigns.\n\nThe Impact.\n\nDevRev\u2019s Session 360 and User 360 data brought deep insight into user interactions and engagement that helped ShemarooMe optimize its apps.\n\nHere are the outcomes in brief:\n\n4x Faster issue resolution.\n\nShemarooMe streamlined its issue resolution process by shifting its focus from user feedback to using session recordings. These recordings provided detailed insights into user interactions, allowing the team to identify and replicate issues precisely. This change in approach led to quicker and more accurate problem-solving, as the team could directly observe and understand the user's experience, enhancing their ability to debug and resolve issues effectively.\n\n2x Faster UI improvements.\n\nShemarooMe experienced at least a doubling in the rate of their UI updates. This improvement was due to more informed design decisions guided by clearer insights. Additionally, they established a method to accurately measure the impact of these changes, leading to more effective and data-driven UI enhancements.\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1033",
        "dataset_source": "devrev-dev0",
        "title": "Spintly & DevRev: Bridging Developers and End-Users Seamlessly",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading Spintly uses DevRev to bridge the gap between developers and end-users\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2Ff93e4c2e0060bbb60bead2936e15f157e8b6a4d5-2880x1234.png%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2Ff93e4c2e0060bbb60bead2936e15f157e8b6a4d5-2880x1234.png%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2Ff93e4c2e0060bbb60bead2936e15f157e8b6a4d5-2880x1234.png%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2Ff93e4c2e0060bbb60bead2936e15f157e8b6a4d5-2880x1234.png%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2Ff93e4c2e0060bbb60bead2936e15f157e8b6a4d5-2880x1234.png%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2Ff93e4c2e0060bbb60bead2936e15f157e8b6a4d5-2880x1234.png%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2Ff93e4c2e0060bbb60bead2936e15f157e8b6a4d5-2880x1234.png%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2Ff93e4c2e0060bbb60bead2936e15f157e8b6a4d5-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2Ff93e4c2e0060bbb60bead2936e15f157e8b6a4d5-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / spintly Spintly uses DevRev to bridge the gap between developers and end-users\nSpintly adopts a product-centric approach to accelerate customer issue resolution and bridge the gap between developers and end-users\n\n4 min read\n\nLast Updated 09.25.2023\n\nCompany Spintly\nEmployees 51-200\nFounded August 2018\nHeadquarters Milpitas, California\nIndustry Software development\nThe Company.\n\nSpintly, a California-based wireless cloud-based access control company, has gained significant traction in the industry since its establishment in August 2018. The company, led by CEO Rohin Parkar, has quickly become a major player in the market, providing an innovative platform that streamlines access control for users and office spaces, leveraging the power of smartphone devices. With a strong team of 51-100 employees and a focus on the cloud-based access control industry, Spintly has carved out a unique position, offering hassle-free and secure access control solutions to their clients.\n\nThe Challenge.\n\nSpintly encountered a significant hurdle when attempting to convey customer issues to their developers in a way that prioritized the most crucial problems. Despite experimenting with various tools, including sales CRM, ticketing software, and issue tracking systems, the company was unable to find a solution that met their needs. Utilizing multiple tools created more problems than it solved, leading to a frustrating experience for both Spintly and their customers. As Parkar explains, \"The biggest pain point was being able to convey customer problems to our developers and having them prioritize and work on those issues.\"\n\nWe had to resort to using multiple tools: a sales CRM, ticketing software, and an issue tracking system. We then had to create integrations and make them work seamlessly. We couldn't find one tool that would work for us.\u201d\n\nRohin Parkar\n\nCEO, Spintly\n\nDespite Spintly's best efforts, they were unable to find a single tool that met their needs, prompting them to search for an all-in-one solution that connected their developers to their customers. That\u2019s how DevRev came to the rescue.\n\nThe Solution.\n\nAccording to Parkar, DevRev was the solution that Spintly was searching for. Initially, Spintly used DevRev as a ticketing tool. However, they soon discovered that the system was product-centric, allowing them to define their product and its features in great detail, even at the microservices level. This level of detail made it possible for Spintly to connect tickets to various components of their product, which automatically routed the issues to the right developer without requiring manual assignment. Doing so helped Spintly keep all their customer conversations, tickets, and issues in one location, resulting in quicker issue resolution and an enhanced customer experience.\n\nSpintly leveraged DevRev's PLuG feature to take a product-centric approach to define their product in a visual manner, enabling them to integrate with their website. This allowed Spintly to present a more comprehensive and holistic view of their product, leading to an even more robust and efficient development process.\n\nDevRev has revolutionized the way we manage customer issues. With DevRev's platform, our developers can prioritize which issues to fix quickly. The faster we resolve issues, the better the customer experience becomes.\u201d\n\nRohin Parkar\n\nCEO, Spintly\n\nDevRev has provided an end-to-end system that is product-centric and enables the company to define their product in great detail. By connecting tickets to different parts of their product, Spintly can efficiently route issues to the right developer, resulting in a faster and more efficient development process.\n\nTop Features.\n\nPLuG, in-app customer center\nTeam inbox for customer conversations\nTickets triage and management\nTicket clustering and attribution to product\nAutomatic updates\nConvergence automation\nCustomized automatic responses\nReminders\nCustomer record management\nKnowledge base deflection\nMetrics and reporting\nMetric and insights\n\nThe Benefits.\n\nProduct-centric approach with the ability to define products in a visual manner and link them together.\nEmail integration for seamless ticket creation from customer emails and the ability to start a conversation through the PLuG widget on the web portal.\nDevelopers are able to quickly prioritize issues to be fixed, resulting in a better customer experience.\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1034",
        "dataset_source": "devrev-dev0",
        "title": "Spotnana uses DevRev to enhance both customer engagement and team collaboration",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading Spotnana uses DevRev to enhance both customer engagement and team collaboration\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2Fd5a9ef3088847d44dfd2c63f8615883c4de36487-2880x1234.webp%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2Fd5a9ef3088847d44dfd2c63f8615883c4de36487-2880x1234.webp%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2Fd5a9ef3088847d44dfd2c63f8615883c4de36487-2880x1234.webp%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2Fd5a9ef3088847d44dfd2c63f8615883c4de36487-2880x1234.webp%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2Fd5a9ef3088847d44dfd2c63f8615883c4de36487-2880x1234.webp%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2Fd5a9ef3088847d44dfd2c63f8615883c4de36487-2880x1234.webp%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2Fd5a9ef3088847d44dfd2c63f8615883c4de36487-2880x1234.webp%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2Fd5a9ef3088847d44dfd2c63f8615883c4de36487-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2Fd5a9ef3088847d44dfd2c63f8615883c4de36487-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / spotnana Spotnana uses DevRev to enhance both customer engagement and team collaboration\n\n6 min read\n\nLast Updated 02.13.2024\n\nCompany Spotnana\nFounded January 2020\nIndustry Travel-as-a-Service\nEmployees 251-500\nHeadquarters New York\nThe company.\n\nSpotnana, a leader in the travel industry, is on a mission to change the corporate travel industry by modernizing its infrastructure. Spotnana's Travel-as-a-Service Platform brings a fresh perspective to corporate travel, making it simpler, more affordable, and efficient.\n\nFounded by industry leaders, Shikhar and Sarosh, Spotnana has rapidly evolved from a small team of five to a thriving workforce of 250+, even amidst the challenges posed by the pandemic. This growth underscores their dedication to bringing an improved experience to corporate travelers worldwide.\n\nSpotnana operates at the intersection of technology and travel, empowering a network of agency, supplier, and technology partners to innovate and elevate the travel experience. With a strong emphasis on culture, communication, and decision-making, Spotnana has positioned itself as a beacon of innovation in the corporate travel industry. Their commitment to excellence and transformative solutions sets them apart in the world of travel.\n\nThe challenge.\n\nSpotnana faced several challenges in scaling their operations and maintaining a strong company culture as they expanded from a team of five to 200 employees during the pandemic. They recognized the importance of effective communication, culture-building, and customer-centricity to sustain their growth.\n\nWhen a feature request comes in, especially from an enterprise customer, we assess if it's specific to a single customer or has a broader appeal. The benefit is that fulfilling these requests paves the way for other large customers. For example, one of our customers has a vast user base. They're not just addressing one department, but are considering 14,000 users.\u201d\n\nAshish Chaudhary\n\nVP of Product\n\nCommunication and culture:. Transitioning from five to 200 team members virtually raised questions about communication, decision-making, and culture definition and maintenance.\n\nTool fragmentation:. Utilizing numerous tools for different functionalities (e.g., Salesforce, Freshdesk, Jira, Figma, Notion, Smartsheets, and more) led to disjointed operations.\n\nCustomer service and support:. Without a structured ticketing system, customer success managers were manually handling queries, preventing scalability and efficient customer service.\n\nData fragmentation:. Information was scattered across different platforms, hindering data analysis and decision-making\n\nGenAI, and its knowledge graph, is collapsing boundaries between tools and our departments. In this day and age of hyper-efficiency, we were staring at nine different tools, the data and AI pipeline costs on top of them, and we knew we had to make a change.\u201d\n\nShikhar Agarwal\n\nCo-founder and CTO\n\nAs they learned more about DevRev, they got excited about making a commitment to the entire platform. Improving their customer success processes was an important factor, but Spotnana wanted to use DevRev across their entire company.\n\nThe solution.\n\nShikhar, one of Spotnana's co-founders, had been following DevRev and knew about its potential to address their customer support challenges. When the customer success team at Spotnana needed a modern ticketing system, Shikhar knew where to look. Immediately, he and Cynthia Beldner, Head of Customer Support and Success at Spotnana, were sold on its design and comprehensive, unified solution.\n\nI'd need to go out and buy several different tools in order to do what DevRev is doing, and then combine them together and deal with the integrations, and the integrations are never as good as we hope they\u2019ll be.\u201d\n\nCynthia Beldner\n\nHead of Customer Support and Success\n\nDevRev offered an integrated solution that would streamline their operations and help them achieve their goals. The key features of DevRev that caught their attention included:\n\nUnified customer and product experience:. DevRev enabled Spotnana to converge product and customer experiences into one platform, merging the fragmented toolset into a streamlined solution.\n\nAI-driven customer support:. Utilizing AI-first solutions for common customer queries, Spotnana significantly reduced manual efforts in resolving repetitive questions, improving customer service and freeing up time for customer success staff.\n\nDesign excellence:. Spotnana, valuing design highly in internal and external communications, was captivated by DevRev's intuitive and aesthetically pleasing user interface, especially the 'Trails' feature that enabled them to effortlessly manage their product hierarchy and roadmap.\n\nDevRev has centralized our workflow, enabling our engineers and PMs to remain on the pulse of real-time updates. Our team loves it because it enables them to support our customers better.\u201d\n\nShikhar Agarwal\n\nCo-founder and CTO\n\nThe results.\n\nEnhanced customer support:. With AI leading the front, customer inquiries are resolved more efficiently, providing quick, consistent, and accurate responses. Plus, customers are given a clear view of ticket resolution progress and upcoming features designed to address their specific concerns.\n\nUnified data view:. Collating data from product and customer experiences in one place, Spotnana can drive more data-driven decisions.\n\nStreamlined internal communication and product management:. DevRev\u2019s features eliminated the need for multiple platforms, bringing Spotnana\u2019s operations into a unified, cohesive workflow. By uniting multiple functionalities within DevRev, it reduced their dependency on various point solutions.\n\nImproved cultural communication:. Having a single platform facilitated centralized communication and document sharing, which in turn improved culture around communication and team alignment. Leveraging AI to eliminate basic administrative work, also freed up team bandwidth to focus on more challenging initiatives.\n\nMoving forward.\n\nSpotnana expressed excitement about DevRev's product roadmap and plans to make full use of the platform's capabilities. They intend to train their team members to become power users and fully leverage the extensible nature of the product. They believe in DevRev's vision and trust the team to deliver on it.\n\nIn conclusion, Spotnana found in DevRev a solution that not only addresses their operational challenges but also supports their cultural and growth aspirations. The partnership promised to bring even more benefits as they continue to scale their business.\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1035",
        "dataset_source": "devrev-dev0",
        "title": "Goodmeetings Boosts Efficiency with DevRev's PLuG Widget",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading Goodmeetings uses PLuG to reduce ticket resolution time\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2Fc564b9682491e56170335b27367f901016003f53-2880x1234.png%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2Fc564b9682491e56170335b27367f901016003f53-2880x1234.png%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2Fc564b9682491e56170335b27367f901016003f53-2880x1234.png%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2Fc564b9682491e56170335b27367f901016003f53-2880x1234.png%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2Fc564b9682491e56170335b27367f901016003f53-2880x1234.png%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2Fc564b9682491e56170335b27367f901016003f53-2880x1234.png%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2Fc564b9682491e56170335b27367f901016003f53-2880x1234.png%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2Fc564b9682491e56170335b27367f901016003f53-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2Fc564b9682491e56170335b27367f901016003f53-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / goodmeetings Goodmeetings uses PLuG to reduce ticket resolution time\nGoodmeetings uses DevRev\u2019s PLuG widget to improve ticket resolution time and increase productivity across the organization\n\n4 min read\n\nLast Updated 10.30.2023\n\nCompany Goodmeetings\nEmployees 11 to 50\nFounded Aug 2021\nHeadquarters Bengaluru\nIndustry Software development\nThe Company.\n\nGoodmeetings is a rapidly growing India-based company founded in 2021. Its cutting-edge online video and AI-enabled platform has made significant strides in the sales intelligence industry. With its headquarters located in Bengaluru, Karnataka, India, the company has a talented team of 11-50 employees dedicated to revolutionizing remote sales.\n\nGoodmeetings provides an end-to-end platform for remote sales that empowers sales reps with actionable summaries and Slack notifications to enhance their pitching abilities in their next meeting.\n\nThe Challenge.\n\nAlok Mishra, the co-founder and CTO of Goodmeetings, discussed the pain points his team faced prior to using DevRev. They wasted a lot of time on data mismatches that occurred on a daily basis due to the use of various disconnected tools. This made the Goodmeetings team less efficient in conveying customer issues to the developers and having them prioritize and work on those issues.\n\nI\u2019ve been leading teams for almost a decade and in my previous companies too, tracking customer tickets has always been a huge pain.\u201d\n\nAlok Mishra\n\nCo-founder and CTO, Goodmeetings\n\nAccording to Mishra, despite searching extensively, they were unable to find a single tool that could effectively address their needs until they integrated DevRev.\n\nThe Solution.\n\nBefore DevRev, they used various tools such as Atlassian's JIRA, Bitbucket, and Confluence, but faced issues with data discrepancies and outdated interfaces. They also used homegrown solutions like Slack and WhatsApp for customer communication, but logging interactions manually was a challenge. With DevRev, they were able to solve these issues and bring their team closer to their customers.\n\nMishra noted that \"Before DevRev, we used to waste more time in meetings. In our organization, we use it in our weekly meetings, our customer success team uses it regularly, our sales team uses it to file bugs, and our customers use the support widget to directly have conversations with us.\"\n\nDevRev makes the whole organization feel much more in sync because the digital divide has disappeared.\u201d\n\nAlok Mishra\n\nCo-founder and CTO, Goodmeetings\n\nDevRev's features, such as the PLuG widget for live help chat and the integration with Slack threads, have been game-changers for the Goodmeetings team. They are also excited about the DevRev Marketplace and plan to continue using DevRev as they expand their platform and improve their customer service. Mishra also highlighted the benefits of DevRev, stating that customer experience has improved because of the velocity.\n\nI can't think of anything else which has changed because we are still the same people, the customer support team remains the same and now with DevRev, we are more efficient.\u201d Top Features.\n\nPLuG, in-app customer center\nTeam inbox for customer conversations\nTickets triage and management\nTicket clustering and attribution to product\nAutomatic updates\nConvergence automation\nCustomized automatic responses\nSnap-ins\nSlack integration\nMetrics and reporting\nInsights\n\nThe Benefits.\n\nAbility to push Slack threads directly into tickets using DevRev integration DevRev PLuG widget as a live help chat, replacing multiple tools\nDevRev Marketplace for snap-ins to push meeting action items and summaries into DevRev directly as ticket\nUse of generative AI in customer support for tracking and building intelligence in knowledge base\b\nImproved customer experience due to increased efficiency and velocity of the customer support team with the use of DevRev\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1036",
        "dataset_source": "devrev-dev0",
        "title": "Shipsy streamlines logistics with real-time in-app support",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading Shipsy streamlines logistics with real-time in-app support\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2Fad4ab66a45904a5c008d42f4ad512d4b904d58d5-2880x1234.png%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2Fad4ab66a45904a5c008d42f4ad512d4b904d58d5-2880x1234.png%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2Fad4ab66a45904a5c008d42f4ad512d4b904d58d5-2880x1234.png%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2Fad4ab66a45904a5c008d42f4ad512d4b904d58d5-2880x1234.png%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2Fad4ab66a45904a5c008d42f4ad512d4b904d58d5-2880x1234.png%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2Fad4ab66a45904a5c008d42f4ad512d4b904d58d5-2880x1234.png%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2Fad4ab66a45904a5c008d42f4ad512d4b904d58d5-2880x1234.png%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2Fad4ab66a45904a5c008d42f4ad512d4b904d58d5-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2Fad4ab66a45904a5c008d42f4ad512d4b904d58d5-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / shipsy Shipsy streamlines logistics with real-time in-app support\n\n5 min read\n\nLast Updated 03.06.2024\n\nCompany Shipsy\nHeadquarters Gurgaon, IN\nFounded 2015\nEmployees 201 - 500\nIndustry Logistics Platform\nThe Company.\n\nShipsy offers a suite of cutting-edge digital solutions that help businesses streamline their logistics processes and optimize their supply chain operations. By harnessing the power of data analytics, artificial intelligence, and automation, Shipsy's platform provides end-to-end visibility, real-time tracking, and efficient management of shipments, enabling companies to make informed decisions on logistics. With an unwavering commitment to customer success, Shipsy is a trusted partner for businesses navigating the world of global trade and transportation.\n\nWe process close to 5 million shipments a day on our new age AI-first logistics platform.\nDhruv Agrawal COO & Co-founder, Shipsy\n\nShipsy provided customer support primarily through email and a customer portal, which was powered by Jira Service Desk. However, they recognized the need to enhance their support capabilities by offering in-app support and real-time assistance. As a result, they began exploring alternative solutions and came across DevRev Support. We spoke to Dhruv Agrawal, Co-founder & COO of Shipsy to know why they chose DevRev.\n\nThe Challenge.\n\nA typical ticketing platform creates different silos within an organization. How do I bring support and product teams together to ensure a seamless experience for all types of users - from delivery partners to execs?\nDhruv Agrawal COO & Co-founder, Shipsy\n\nShipsy faced three main challenges with their existing customer support tool. Firstly, customer support was limited to email and a customer portal, rather than being integrated directly into their product. This hindered their ability to capture context and address user issues in real-time. The lack of direct access to real-time information from within their app resulted in disconnected data and a sub-par user experience. Additionally, Shipsy was using Jira for issue management, so it was important to find an alternative support software that could work alongside Jira without disrupting their engineering efforts.\n\nThe Solution.\n\nCustomer support on the Shipsy app is now powered by DevRev Support. Here's how we addressed their challenges and improved the customer experience for their users.\n\nBeing accessible where the users are.\n\nA lot of our user\u2019s queries today is getting handled by DevRev\u2019s AI bot. A lot of these requests don't require human intervention, saving time not just for the support team but also for the customer. It's a wonderful experience, because users don't have to wait.\nDhruv Agrawal COO & Co-founder, Shipsy\n\nShipsy users can now reach out for support directly from within the app. This is made possible through PLuG, DevRev\u2019s in-app chat widget. The GPT-powered bot in the chat widget provides instant responses to customer queries. The bot, powered by DevRev\u2019s Turing AI, deflects queries on its own and suggests relevant articles. Additionally, Shipsy users can also reach out for help on a dedicated customer support portal.\n\nCapturing real-time context.\n\nSentiment analysis and summarization has helped us in terms of understanding and prioritizing. Triaging the issues is much faster, much better. Things that need immediate attention get a quicker response.\nDhruv Agrawal COO & Co-founder, Shipsy\n\nWith DevRev Support, Shipsy's customer support teams can now analyze the sentiment of a user from their conversations. This enables support engineers to understand the underlying emotions expressed by the users in their interactions. By gauging the sentiment of the conversations, Shipsy is able to prioritize issues that need immediate attention, and address them more effectively.\n\nGiving users full visibility.\n\nNow, users raise queries, search for information, and create tickets directly within our app - without ever having to leave it. That\u2019s how we upgraded our support with DevRev.\nDhruv Agrawal COO & Co-founder, Shipsy\n\nDevRev Support automates ticket creation from user conversations within the Shipsy app. As users reach out for support through PLuG, the in-app chat widget, Turing AI analyzes the queries and automatically creates a ticket with relevant information, eliminating the need for manual ticket creation. Once a ticket is created, Shipsy users have real-time updates on the status and resolution of their issues. Users can conveniently track the progress of their tickets and receive updates directly within the Shipsy app. Users also have the option to create different subtypes of tickets on the customer portal.\n\nCoexisting with Jira.\n\nWith DevRev, we can strongly focus on support not just to reactively resolve issues but to proactively ensure product improvements even before users report a problem. The integrated views across user issues, product metrics, and cross-team context gives us unmatched visibility into indicators that can be tackled decisively instead of escalating.\nDhruv Agrawal COO & Co-founder, Shipsy\n\nSince Shipsy coordinated their engineering efforts using Jira, it was essential for DevRev to coexist alongside. Shipsy was able to migrate all their knowledge base articles, which were previously on Jira Confluence, to DevRev using the Confluence KB snap-in on DevRev. The native Jira integration on DevRev meant support teams could automatically create Jira issues for the product and engineering teams to address. The DevRev Airdrop feature ensured that any comments made by the engineering team on issues in Jira would also reflect in DevRev in real-time and vice versa. A Slack-like interface helped the support and product teams to collaborate seamlessly and solve issues faster. It also allows Shipsy\u2019s support teams to stay fully informed about the status of development and enhancement.\n\nAutomating support ops autonomously.\n\nThere are always things we would like to do or automate in our own way. The ability to build our own automations within DevRev gave us the control to optimize our workflows on our own.\nDhruv Agrawal COO & Co-founder, Shipsy\n\nSnap-ins are add-on modules on DevRev that can automate tasks based on events or pre-defined conditions. Shipsy built out several custom automations on top of DevRev on their own using Snap-ins. They automated the notifications on ageing tickets to different teams within the organization. A custom time-based trigger helped Shipsy stay ahead of any breaches in their support workflows. They also built an approval funnel on top of their ticket information so that Product Managers could segregate important projects and check if they had enough resources to begin!\n\nTop Features.\n\nDevRev not just helped implement their Support app but also guided us in improving our support processes. That\u2019s something we truly appreciate.\nDhruv Agrawal COO & Co-founder, Shipsy\n\nPLuG, in-app customer center\nGPT-powered Turing bot with Sentiment Evaluator\nKnowledge base management with Smart Import KBs\nConfluence article import snap-in\nTeam inbox for customer conversations\nAuto-ticket creation\nConverge conversations + tickets + issues on same platform\nNative DevRev - Jira integration\nSLA management\nMFZ role based authorization to create tickets\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1037",
        "dataset_source": "devrev-dev0",
        "title": "Pixee powers their commitment to a stellar developer experience with DevRev",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading Pixee powers its commitment to a stellar developer experience with DevRev\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2Fd9dfe24552da9a61a1558fbab4d3997e647fe67e-2880x1234.webp%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2Fd9dfe24552da9a61a1558fbab4d3997e647fe67e-2880x1234.webp%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2Fd9dfe24552da9a61a1558fbab4d3997e647fe67e-2880x1234.webp%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2Fd9dfe24552da9a61a1558fbab4d3997e647fe67e-2880x1234.webp%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2Fd9dfe24552da9a61a1558fbab4d3997e647fe67e-2880x1234.webp%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2Fd9dfe24552da9a61a1558fbab4d3997e647fe67e-2880x1234.webp%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2Fd9dfe24552da9a61a1558fbab4d3997e647fe67e-2880x1234.webp%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2Fd9dfe24552da9a61a1558fbab4d3997e647fe67e-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2Fd9dfe24552da9a61a1558fbab4d3997e647fe67e-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / pixee Pixee powers its commitment to a stellar developer experience with DevRev\nPixee resonated with DevRev\u2019s vision and solution to create an intertwined relationship between user feedback, support issues, and product development.\n\n6 min read\n\nLast Updated 02.13.2024\n\nCompany Pixee\nEmployees <50\nFounded Aug 2022\nHeadquarters California, USA\nIndustry Developer Tools & Cybersecurity Software Development\nThe company.\n\nPixee is an emerging software start-up at the intersection of developer tools, AI and cybersecurity, focusing on eliminating developer toil from security issues and allowing them more time to work on features. Emerging from stealth in mid-2023, they aim to reshape developers' experience with security, by providing automated code hardening and fixing issues found by 3rd party tools, thereby eliminating the manual developer effort. Seamlessly integrated with GitHub, Pixeebot is like having an automated product security engineer paired up with each developer to provide continuous enhancements.\n\nThe challenge.\n\nBridging the gap between support, product development, and customer experience.\n\nInitially, Pixee came to DevRev to solve a tractable problem. They needed to set the foundation for their customer support infrastructure, but felt that the legacy tools were too clunky for what they needed.\n\nWe needed to set the foundation for support infrastructure. Everything out there was way too clunky for what we needed. So I went with the tool that I think can grow with us.\u201d\n\nSurag Patel\n\nCo-founder and CEO, Pixee\n\nAs they learned more about DevRev, they got excited about making a commitment to the entire platform. Maximizing customer support is an important factor, but Pixee wanted to use DevRev to shape the culture of the company. For their users, who are primarily software developers, they want to provide visibility on the roadmap ahead, so they can drive the future evolution of the platform. For their team, they want to assure them that they\u2019re working on the highest impact features. This is an important pillar of Pixee\u2019s culture. They want their team to be very cognizant of what they\u2019re building, who it\u2019s for, the value it adds, and the impact it has on users. This is how they motivate their product builders while delivering an innovative solution.\n\nAt a high level, the goal is to establish an ecosystem where support, product development, and customer experience converge, ensuring that the solutions created are tailored to the demanding needs of their users. Given this customer-centric vision, the team resonated with DevRev\u2019s vision and solution to create an intertwined relationship between user feedback, support issues, and product development.\n\nThe solution.\n\nDevRev\u2019s integration.\n\nPixee employed DevRev to forge a direct link between customer support and product development, ensuring the voice of the developer is embedded directly into the product. This aligns with Pixee's approach toward maintaining an efficient team, enabling them to be responsive to customer needs without inflating their operational requirements.\n\nThings that make us more effective and more productive are really important to us. We\u2019re a nimble team and we need to be extremely efficient to achieve our aggressive goals while managing costs. For us, it comes down to what we can do from a tooling standpoint to make every individual more productive. Part of that is consolidation of tools. There are a lot of various point solutions that do bits and pieces of little things that aren\u2019t helpful because you need them to be connected together to get the full value of these elements.\u201d\n\nSurag Patel\n\nCo-founder and CEO, Pixee\n\nTop features.\n\nCustomer-centric development. : DevRev is enhancing Pixee's ability to tie support tickets directly to the development process, ensuring efficient ticket resolution and transparent customer communication.\n\nOmnichannel inbox. : DevRev\u2019s capacity to bring together diverse communication channels (internal and customer-facing) into one cohesive platform, streamlining the handling of issues and feedback. Pixee strives to build the best developer experience on the market and providing these users a world-class platform for communicating with Pixee is critical.\n\nProduct roadmapping. : Integrating customer feedback directly into product development, prioritizing features, and updates based directly on user needs and issues.\n\nAI-enhanced processes. : Utilizing AI not just to group and categorize issues, but also to remove the manual labor involved in ticket generation and updates.\n\nIntegrations and APIs. : Facilitating more complex and diverse ways for Pixee to interact with users through additional tool and data integrations.\n\nThe results.\n\nCustomer support and experience.\n\nImprovement in ticket resolution:. Faster, more direct resolution of support tickets, with developers directly involved in resolving issues.\nTransparent customer communication:. Customers are given a clear view of issue resolution progress and upcoming features designed to address their specific concerns.\nCustomer satisfaction:. By providing timely updates with direct communication from developers at Pixee, their users have a significantly improved experience.\n\nDevelopment and product evolution.\n\nEnhanced development velocity:. Faster closure times on bugs and enhancement implementations, driven by direct customer feedback and an integrated issue resolution process.\nCustomer-driven product roadmap:. A product evolution pathway intrinsically tied to the feedback and issues raised directly by the user base.\n\nTeam engagement and culture.\n\nAligned team objectives:. Developers are not just building; they\u2019re solving direct, tangible issues for users, enhancing team engagement and purpose.\nQuantitative tracking:. Implementing metrics like bug ticket closure time and enhancement closure time to ensure a measurable impact on development velocity.\n\nOperational efficiency.\n\nTool consolidation:. Uniting multiple functionalities within DevRev, reducing the dependency on various point solutions, and enhancing operational efficiency.\nAI-driven efficiency:. Leveraging AI to eliminate basic administrative work, freeing up team bandwidth to focus on key development and support areas.\n\nMoving forward.\n\nPixee continues to roll out DevRev across their teams, keenly focusing on the minute details that elevate user experience and optimize developmental processes. The feedback loop provided by DevRev is not just a tool but an integrated component of Pixee\u2019s operational and development strategy, ensuring that every line of code developed, every feature introduced, is tied to providing a richer, differentiated experience for their user base.\n\nIn a cybersecurity landscape that\u2019s continually evolving, Pixee is ensuring that the future of cybersecurity is not just innovative but also supremely developer-centric.\n\nIn Pixee's journey, DevRev is not merely a tool; it's a partner, guiding the pathway to a future where customer experience and product development are not just interconnected but are essentially one team.\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1038",
        "dataset_source": "devrev-dev0",
        "title": "Bajaj Finserv leverages DevRev to fast-track customer resolutions",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading Bajaj Finserv uses DevRev for quicker resolutions and better conversions\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2F8d860e6e5331655cc677143400dba350897bdc94-2880x1234.webp%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2F8d860e6e5331655cc677143400dba350897bdc94-2880x1234.webp%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2F8d860e6e5331655cc677143400dba350897bdc94-2880x1234.webp%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2F8d860e6e5331655cc677143400dba350897bdc94-2880x1234.webp%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2F8d860e6e5331655cc677143400dba350897bdc94-2880x1234.webp%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2F8d860e6e5331655cc677143400dba350897bdc94-2880x1234.webp%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2F8d860e6e5331655cc677143400dba350897bdc94-2880x1234.webp%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2F8d860e6e5331655cc677143400dba350897bdc94-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2F8d860e6e5331655cc677143400dba350897bdc94-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / bajaj-finserv Bajaj Finserv uses DevRev for quicker resolutions and better conversions\n\n5 min read\n\nLast Updated 02.13.2024\n\nCompany Bajaj Finserv\nEmployees 10000\nFounded 2012\nHeadquarters Pune, India\nIndustry Finance\nThe company.\n\nBajaj Finserv is a game-changer in the finance world. Its \u2018No-Cost EMI\u2019 is an innovative credit service that helps millions of consumers meet their short-term financial needs. Many such strategic initiatives have propelled the company\u2019s growth over the last decade. Today, Bajaj Finserv is a leader in the non-bank and alternative lending sector. Over 35 million individuals in India trust its apps for various services like loans, insurance, and securities.\n\nThe challenge.\n\nDigital is fast becoming the new norm for consumption in India. Cheaper devices, faster data transfers, and a prolonged pandemic have accelerated digital growth. Users now expect the best experience from mobile and web apps. But many incumbents still rely on conventional tools and outdated processes to troubleshoot technical issues.\n\nWhile Bajaj Finserv met the digital demands of its consumers, the development and support teams frequently encountered challenges in resolving app issues. A largely non-tech-savvy user base made it difficult to gather any insights on complaints. Even straightforward requests, such as asking users to share a screenshot of the problem, were met with resistance. Such obstacles restricted the team's ability to resolve the complaints effectively.\n\nMoreover, there was no way to understand how these issues affected conversion journeys. Technical problems like app crashes, UI freezes, and slow performance were disjointed from conversion rates in funnel analysis. Thus understanding drop-offs was incomplete.\n\nFor example, Know Your Customer (KYC) is a crucial part of user onboarding on Bajaj Finserv\u2019s apps and each drop-off is a monetary loss. While the team noticed a drop-off on the KYC screen, they did not understand what was going wrong looking at Firebase Analytics. The KYC screen loaded without any performance hiccups. The logs had no functional issues. Had Bajaj Finserv\u2019s team relied solely on traditional tools and methods, identifying the source of the problem would have been a significant challenge.\n\nThe solution.\n\nReplay and resolve user complaints.\n\nDevRev PLuG SDK captures data from mobile and web front-ends in real-time. This enables Bajaj Finserv teams to replay session recordings of complaining users and precisely identify pain points. Support representatives can see what went wrong without asking annoyed users for screenshots or any additional information. Developers can replay and review logs to troubleshoot issues such as JavaScript errors, browser incompatibility, unresponsiveness, and slow loading times.\n\n\"Our team wanted to understand and reproduce any technical issue without wasting time. And DevRev tells us exactly what\u2019s bothering our users.\u201d\n\nAnshul Jain, Sr. Lead Software Architect, Bajaj Finserv.\nFully informed, efficient escalations.\n\nA support representative can look at complaints and understand if it\u2019s a known issue or a new issue. The support team can also check for similar tickets and avoid duplication. When representatives encounter an unknown issue, they can escalate it to the right developer(s) with all the necessary information.\n\nUncovering the reasons behind drop-offs.\n\nUsing DevRev, Bajaj Finserv could reveal the reasons for conversion drop-offs. Anshul shared three cases where DevRev helped them identify the leaks and improve user experience:\n\n\u2192 Signup and OTP screen drop-offs were due to performance issues.\n\n\u2192 KYC form drop-offs were due to a confusing date picker UI.\n\n\u2192 Optimizing the Fixed Deposit booking journey for better conversion.\n\nThe benefits.\n\nDevRev could modernize and seamlessly integrate conversion optimization, troubleshooting, and resolution processes at Bajaj Finserv. The team moved from analyzing through disparate metrics scattered across various tools to a unified analysis.\n\nFaster resolutions.\n\nAll stakeholders now benefit from a unified information source, fostering seamless collaboration for troubleshooting and issue resolution. This streamlined approach reduces the time spent understanding what went wrong, enabling quicker correction of issues, resulting in faster response times and an improved user experience.\n\nIncreased conversions.\n\nFor Bajaj Finserv, even a fractional drop in conversion rates amounts to a large sum. DevRev not only revealed conversion leaks but also helped in optimizing the conversion journeys.\n\nA seemingly small design flaw that could have flown under the radar with conventional tools was detected and fixed quickly using DevRev.\n\n\"Users took 20+ seconds to complete the KYC. We then saw heatmaps and session replay data on DevRev to learn how the date picker functionality was confusing users while adding their date of birth. After shipping an update we could see that users took less than 7 seconds to complete the KYC\u201d\n\nAnshul Jain, Sr. Lead Software Architect, Bajaj Finserv.\nImproved user experience.\n\nBajaj Finserv now has a continuous feedback mechanism for their app\u2019s experience. With DevRev, their development and support teams have significantly reduced reliance on direct user inquiries for feedback, enabling a more proactive approach to delivering the best user experience.\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1039",
        "dataset_source": "devrev-dev0",
        "title": "100ms Enhances Customer Support with DevRev's Unified Solution",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading 100ms delivers differentiated customer support through a unified channel\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2Fb93d9fa078130eca0b495ac08b0ea37d5d4245f0-2880x1234.png%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2Fb93d9fa078130eca0b495ac08b0ea37d5d4245f0-2880x1234.png%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2Fb93d9fa078130eca0b495ac08b0ea37d5d4245f0-2880x1234.png%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2Fb93d9fa078130eca0b495ac08b0ea37d5d4245f0-2880x1234.png%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2Fb93d9fa078130eca0b495ac08b0ea37d5d4245f0-2880x1234.png%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2Fb93d9fa078130eca0b495ac08b0ea37d5d4245f0-2880x1234.png%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2Fb93d9fa078130eca0b495ac08b0ea37d5d4245f0-2880x1234.png%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2Fb93d9fa078130eca0b495ac08b0ea37d5d4245f0-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2Fb93d9fa078130eca0b495ac08b0ea37d5d4245f0-2880x1234.png%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / 100ms 100ms delivers differentiated customer support through a unified channel\n100ms uses DevRev to scale customer success, reduce costs, and deliver differentiated customer support\n\n4 min read\n\nLast Updated 09.25.2023\n\nCompany 100ms\nEmployees 51 to 100\nFounded Oct 2020\nHeadquarters Fremont, CA\nIndustry Live video\nThe Company.\n\n100ms is a live-video infrastructure and API-first company that enables developers to build and deploy enterprise-class video applications in hours, instead of months.\n\nKshitij Gupta, co-founder, and CEO, has spent more than fifteen years as a video engineer, and after building the world\u2019s largest live-streaming platform at Disney+ Hotstar, he and his colleagues set out to start 100ms.\n\nTheir mission is to bring real-life interactions to the virtual world seamlessly. The company was founded in 2020 when the world became increasingly remote-first, and the need for an infrastructure provider that enabled high-quality video experiences became undeniable.\n\nThe Challenge.\n\nProviding exceptional customer support means connecting with your customers wherever they are, in real-time. As companies scale, it becomes increasingly difficult to provide the same high standard of service to a growing number of customers \u2014 without breaking the bank. In today\u2019s crowded marketplace where it\u2019s possible to get a SaaS company up and running in less than a day, every business has more competition than ever. Making every customer interaction count is what sets companies apart.\n\n100ms has experienced tremendous growth as the demand for live video experiences continues to rise. Its growing customer base of mostly developers prefers swift, real-time communication and support, and the company quickly found itself with over 300 Slack Connect channels. It wasn\u2019t long before this became an issue. Gupta explains, \u201cThe biggest problem was interacting with our customers and really understanding the urgency of every conversation. We had over 300 Slack Connect channels for our users. The conversations could go from design discussions to finding bugs to architecture, and there was no way to delineate these conversations from ones where a customer is saying, \u2018I\u2019m having an outage right now. I need urgent help\u201d.\n\nManaging and prioritizing customer conversations and requests in Slack was a massive challenge, and the stress of missing something critical in all the noise was keeping the team up at night. They needed a solution that could help them stay on top of thousands of Slack threads in order to maintain the high standard of support their customers had grown to expect. Without the ability to track, measure, and effectively search, valuable customer feedback was lost in the clamor.\n\nThe Solution.\n\nKshitij and the team evaluated countless support platforms. Both in their product and process, 100ms is a company at the forefront. They needed a support platform and partner that matched their innovative energy and hustle.\n\nWe tried everything... literally everything: Intercom, Freshdesk, Zendesk, every software out there. The problem for new age API first companies is distinct, and none of the existing tools are built for it.\u201d\n\nKshitij Gupta\n\nCEO, 100ms\n\nWhen they discovered DevRev, it just clicked. For 100ms, customer support means developers supporting other developers and they immediately resonated with DevRev\u2019s mission. Now, the company has visibility into every customer interaction. Conversations are grouped so critical problems get resolved faster, and nothing slips through the cracks.\n\nBecause of this, Gupta says they\u2019re able to make customer support a competitive advantage for their business, \u201cEven being a deeply technical company, the biggest differentiator we have is customer support.\n\nEvery time I speak to our customers, they tell me how awesome our customer support team is. When we were just using Slack, I was concerned about scaling. Now with DevRev, we\u2019ll be able to scale and maintain the same level of support.\u201d\n\nKshitij Gupta\n\nCEO, 100ms\n\nTop Features.\n\nPLuG, in-app customer center\nMulti-channel inbox for Slack, Email, and PLuG\nBidirectional sync with Jira\nTicket clustering and attribution to product\nAutomatic updates to converge with development\nCustomized automatic responses Customer record management Knowledge base deflection Metric and insights\n\nThe Benefits.\n\nSupport is a competitive differentiation\nScale to 100s of customers with <5 support engineers\nHigh touch and personalized support Accelerated path to paid support tier\nEnhanced productivity and less context switching\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1040",
        "dataset_source": "devrev-dev0",
        "title": "DevRev enhances BigBasket's UX and design for new feature rollouts.",
        "content": "Product Platform Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Marketplace Company Resources Pricing\nLogin Book a demo\nReading DevRev enhances BigBasket's UX and design for new feature rollouts\nShare\n<img alt=\"hero\" loading=\"lazy\" decoding=\"async\" data-nimg=\"fill\" style=\"position:absolute;top:0;left:0;bottom:0;right:0;box-sizing:border-box;padding:0;border:none;margin:auto;display:block;width:0;height:0;min-width:100%;max-width:100%;min-height:100%;max-height:100%;object-fit:cover\" sizes=\"100vw\" srcSet=\"/_next/image?url=%2Fblog-imgs%2F0e1106d5ef1486de44701a7698180e7cacac4f52-2880x1234.webp%3Ffm%3Dwebp&amp;w=640&amp;q=75 640w, /_next/image?url=%2Fblog-imgs%2F0e1106d5ef1486de44701a7698180e7cacac4f52-2880x1234.webp%3Ffm%3Dwebp&amp;w=750&amp;q=75 750w, /_next/image?url=%2Fblog-imgs%2F0e1106d5ef1486de44701a7698180e7cacac4f52-2880x1234.webp%3Ffm%3Dwebp&amp;w=828&amp;q=75 828w, /_next/image?url=%2Fblog-imgs%2F0e1106d5ef1486de44701a7698180e7cacac4f52-2880x1234.webp%3Ffm%3Dwebp&amp;w=1080&amp;q=75 1080w, /_next/image?url=%2Fblog-imgs%2F0e1106d5ef1486de44701a7698180e7cacac4f52-2880x1234.webp%3Ffm%3Dwebp&amp;w=1200&amp;q=75 1200w, /_next/image?url=%2Fblog-imgs%2F0e1106d5ef1486de44701a7698180e7cacac4f52-2880x1234.webp%3Ffm%3Dwebp&amp;w=1920&amp;q=75 1920w, /_next/image?url=%2Fblog-imgs%2F0e1106d5ef1486de44701a7698180e7cacac4f52-2880x1234.webp%3Ffm%3Dwebp&amp;w=2048&amp;q=75 2048w, /_next/image?url=%2Fblog-imgs%2F0e1106d5ef1486de44701a7698180e7cacac4f52-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75 3840w\" src=\"/_next/image?url=%2Fblog-imgs%2F0e1106d5ef1486de44701a7698180e7cacac4f52-2880x1234.webp%3Ffm%3Dwebp&amp;w=3840&amp;q=75\"/>\ncase-studies / bigbasket DevRev enhances BigBasket's UX and design for new feature rollouts\n\n4 min read\n\nLast Updated 02.13.2024\n\nCompany BigBasket\nEmployees 10000+\nFounded 2011\nHeadquarters Bangalore, India\nIndustry E-commerce\nThe company.\n\nBigBasket is India\u2019s largest online grocery store. Its mobile apps offer retail solutions like subscription delivery, on-demand delivery, and vending machines. This case study focuses on BigBasket\u2019s subscription delivery app called bbdaily. Millions in India use the bbdaily app to order household needs to their doorsteps every day.\n\nThe challenge.\n\nWith a fast-growing user base and constantly updating features, BigBasket\u2019s design team was entrusted with delivering the best experiences on the bbdaily app. However, the team didn\u2019t have any tools to monitor user behavior, conduct UI/UX research, or carry out testing. Which led to the following challenges:\n\nLimited insights into behavior and research.\n\nThe mainstream app analytics tools were limited to metrics and charts, lacking any visual insights. Events did not reveal the complete picture behind the interactions. Whether it was UI/UX research or experiments on the Beta releases, the team\u2019s capacity to improve the design continuously was slow.\n\nUAT was a long and cumbersome process.\n\nUser Acceptance Testing (UAT)\u2014a core requirement at BigBasket\u2014usually took more than 5 days to complete. This was because of the limitations in reaching out to customers by email and call. Very few customers participated in UATs, affecting the sample set.\n\nMoreover, the process kept 5-7 designers blocked from doing any other tasks.\n\n\u201cThe design team spent 400-500 hours of effort gaining insights for a design change without much outcome. UAT was rudimentary and mostly inefficient.\u201d\n\nRahul Baskaran, Senior Product Designer, BigBasket.\nThe solution.\n\nDevRev PLuG's implementation revolutionized how the design team monitors user behavior, especially regarding new features and design changes. With this tool, the team now has a suite of analytical solutions at their disposal, allowing them to examine and understand the impact of critical features closely.\n\nThis enhanced capability to track and analyze user interactions enables more informed and effective design decisions, contributing to an overall better product experience.\n\nIdentifying conversion bottlenecks in Add-to-Cart journeys.\n\nThe bbdaily team used user and session analytics data to redesign the \u2018Add-to-Cart\u2019 user flows for better conversion rates. Designers could make iterative changes and monitor the interactions on heatmaps. They could drill down funnel analysis with session replays to get more clarity on the drop-offs and relevant issues.\n\nMonitoring new feature updates.\n\nBigBasket improved its services using DevRev's advanced tools, User 360 and Session 360. These tools helped them track new features and identify areas needing optimization. Notably, they upgraded the map feature, making it easier for users to add delivery addresses.\n\n\"Designing is complex, so understanding user behavior is critical for continuous improvement. We monitor everything using DevRev. It has been pivotal in our UATs, adoption of new features, and conversions.\"\n\nRahul Baskaran, Senior Product Designer, BigBasket.\n\nThe updated map feature made adding delivery addresses quick and easy, saving users time when placing orders.\n\nHelping the Dev team replicate crashes and app freezes.\n\nThe design team provided the development team with links to data on app crashes and freezes. This enabled the developers to visualize better and understand the app issues. With this comprehensive context, they could replicate and address the problems more effectively, leading to quicker and more efficient issue resolution.\n\nThe impact.\n\nBigBasket used detailed visuals and relevant information to understand their app's issues better. This approach helped the business improve quickly, leading to a better user experience.\n\n400+ Hours of UAT reduced to a few hours.\n\nBy utilizing session replays and heatmaps for User Acceptance Tests (UATs), the BigBasket team minimized the need to contact customers directly for feedback. This approach overcame the limitations of relying on a small group of customer samples. In certain instances, with DevRev's assistance, the team could even complete UATs in as little as 2 hours, significantly speeding up the process.\n\n3x Lower complaints, 100% more conversions.\n\nThe ongoing efforts of the product design team in monitoring and enhancing the app led to a notable increase in 'Add-to-Cart' conversion rates, which effectively doubled over time. This improvement also resulted in customers encountering fewer issues while using the app, leading to a substantial decrease in customer complaints.\n\nShare\nRelated articles\nView more\n3 min read Women of DevRev: Sonya Kotov's journey on empathy & design in technology\nSonya Kotov\n3.11.2024\n3 min read Women of DevRev: How Mollie Holland is stretching boundaries in a journey of curiosity and growth\nMollie Holland\n3.11.2024\n3 min read Women of DevRev: Meghna Punhani\u2019s story of self-empowerment and inspiration\nMeghna Punhani\n3.8.2024\nView more\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1042",
        "dataset_source": "devrev-dev0",
        "title": "Integrate PLuG with your Android app",
        "content": "This section describes how to integrate PLuG using DevRev SDK with your Android app.\nRequirements\n\nAndroid Studio 2022.1.1\nAndroid Gradle plugin version 7.4\nGradle version 7.6\nMinimum Android SDK 29\n\nSetup\nTo integrate the latest version of our SDK into your app, follow these steps:\n\nOpen your app's build.gradle.kts file and add the following dependencies to get the latest version of our SDK:\n\n1 dependencies {2     implementation(\"ai.devrev.sdk:core:<version>\")3 }\n\nTo access our SDK, hosted on mavenCentral, add it to your root's build.gradle.kts file.\n\n1 repositories {2     mavenCentral()3 }\nAfter completing these steps in your build.gradle.kts script, you should be able to import and use the DevRev SDK in your Android application.\nSetting up the DevRev SDK\n\nObtain credentials\nInitialization\nUser identification\nSupport button\nSample app\n\nObtain credentials\n\n\nIn DevRev, go to\u00a0Settings\u00a0>\u00a0Support\u00a0>\u00a0PLuG Tokens\u00a0through the settings icon in the top-left corner.\n\n\nUnder the App Credentials section, generate the necessary credentials for SDK usage. Remember to save both the App ID and App Secret as they are required in SDK configuration.\n\n\nAcquire the  Your Unique App ID (referred to as supportID in the code) by visiting the PLuG Settings page.\n\n\nInitialization\nAfter you've obtained the necessary credentials, proceed to configure the DevRev SDK within your app.\n\nTo configure the SDK, invoke the following method inside your Application class:\n\n1 fun DevRev.configure(2     context: Context,3     appID: String,4     secret: String,5     supportId: String6 )\n\nIf you don't have a custom Application class, create one as shown below:\n\n1 import ai.devrev.sdk.DevRev2 3 class FooApplication : Application() {4 5     override fun onCreate() {6         super.onCreate()7         DevRev.configure(8             context = this,9             appId = \"<APP_ID>\",10             secret = \"<SECRET>\",11             supportId = \"<SUPPORT_ID>\",12         )13     }14 }\n\n\nIn the onCreate method of your application, configure the DevRev SDK using the credentials obtained earlier.\n\n\nEnsure that the custom application is specified in the AndroidManifest.xml, as shown below:\n\n\n1 <application2     android:name=\".FooApplication\">3 </application>\nUser identification\nBefore initiating the chat feature, user identification is required. Mobile applications can submit various arguments to identify the user. The following example adopts a simplistic approach, providing the minimum required arguments for successful user identification:\n1 DevRev.identify(2     userIdentification = UserIdentification(userId = \"foo@example.org\")3 )\nUpon completing user identification, the chat dialog (conversations) supported by the DevRev SDK becomes accessible.\nTo open the chat dialog, the application should utilize the showSupport API, as shown below:\n1 DevRev.showSupport(context: Context)\nSupport button\nThe mobile SDK also offers a support button that can be integrated into your application. To include it on the current screen, add the following code to your XML layout:\n1 <ai.devrev.sdk..view.FloatingActionButton2     android:id=\"@+id/_fab\"3     android:layout_width=\"wrap_content\"4     android:layout_height=\"wrap_content\"5     android:layout_margin=\"24dp\"6     app:layout_constraintBottom_toBottomOf=\"parent\"7     app:layout_constraintEnd_toEndOf=\"parent\" />\nThe support button accepts default parameters like:\n1 android:src=\"@your_drawable_here\"\nor\n1 android:backgroundTint=\"@your_background_color\"\nThis allows customization according to your preferences. The button appears on your screen.\nAt this stage, you should be able to run the app and leverage all the features of the DevRev  SDK. Clicking the Support button navigates the user to the chat interface.\nSample app\nThe examples presented in this document are taken from the DevRev SDK sample app. The sample app showcases both functional and XML implementations and is included as part of the repository. It's recommended to run the sample app before integrating the  SDK into your target application.\nTroubleshooting\n\n\nIssue: Encountering problems with DevRev SDK integration.\nSolution: Verify the correct SDK dependency setup in the project. Ensure mavenCentral is accessible from the IDE, and confirm accurate detection of the selected DevRev PLuG SDK version.\n\n\nIssue: The showSupport() function or XML button is unresponsive.\nSolution: Confirm that user identification is performed before using the showSupport() function or XML button.\n\n\nIssue: Incorrect operation due to App ID and secret misconfiguration.\nSolution: Ensure correct functionality by double-checking that both App ID and secret values are accurately configured in your application or sample app."
    },
    {
        "id": "ART-1044",
        "dataset_source": "devrev-dev0",
        "title": "Automate opportunities",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nInstallation Configuration\nAutomate opportunities.\n\nAutomate opportunities snap-in helps you automate the following features on opportunities to eliminate updating the fields manually and to enhance data consistency:\n\nAuto-fills the forecast categories on the opportunities based on status updates. Enable this feature to keep the Forecast Category. field on opportunities updated in sync with their current stage, as per the stage to forecast category mapping configured in the automation.\nAuto-fills the Probability. field on opportunities based on their current stage. Enable this feature to auto-update opportunity probabilities based on the stage to probability mapping configured in the automation.\n\nInstallation.\n\nIn DevRev, go to Settings. > Snap-ins. and click Explore Marketplace. in the top-right corner.\nIn the DevRev marketplace, find Automate opportunities. and click Install..\nConfiguration.\n\nTo configure the snap-in, type /AutomateOpportunityConfig in the Discussions. tab of the snap-in.\nFill the required fields and click Submit..\nPrevious Auto parts to conversation Next Bulk ticket uploader\nOn this page\n\nInstallation Configuration\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1045",
        "dataset_source": "devrev-dev0",
        "title": "Descope identity validation",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nUser email validation Make a new connection Installing the Descope identity validation snap-in\nDescope identity validation.\n\nCreating delightful customer journeys starts with having reliable, validated user identities at every step. The Descope snap-in for DevRev provides user email validation through OTP authentication right within your PLuG widget. Authenticating users in context without any redirects provides a native experience.\n\nThis snap-in enables several use cases across teams such as:\n\nProviding clean, accurate lead data for marketing teams\nRouting qualified conversations to sales teams\nHaving consistent user identities across pre and post-signup processes\n\nEnsuring your users are who they say they are helps streamline operations, save time on frivolous conversations, and provide a secure and frictionless user experience.\n\nUser email validation.\n\nAuthenticate users with the \u201cpossession factor\u201d of their email account with one-time password (OTP) validation. Request the user for their email and have them input the OTP within the PLuG widget.\n\nMake a new connection.\n\nOpen the settings on your DevRev app and go to Integrations. > Snap-ins. > Connections..\n\nThis page shows all your existing integrations. In the top-right corner, Select + Connection..\n\nCreate and select your Descope connection.\n\nFollow the steps below to get your Descope Project ID\n\nSign Up on Descope\nGo to Settings > Projects.\nCopy the Project ID.\n\nInstalling the Descope identity validation snap-in.\n\nInstall the Descope identity validation from the DevRev marketplace.\n\nSelect the dev org to install the snap-in, confirm installation, and click Deploy snap-in..\n\nUpdate the snap-in configurations as needed.\n\nConfigure the initial message which would be shown to the user when they are asked for their email.\n\nCustomize the message that is shown to the user during OTP collection.\n\nCustomize the message that is shown to the user on successful verification of email.\n\nYou can trigger this either for all new conversations from an unverified user or when Turing is unable to deflect a conversation.\n\nTo activate the automation for every new conversation, toggle on Send on Create..\nIf you prefer the automation to only be triggered when Turing is unable to deflect a conversation, make sure you have selected the appropriate turing_undeflected tag, and toggle off Send on Create..\n\nClick Save. > Next. and deploy the snap-in.\nPrevious CSAT on ticket Next Follow-up ticket\nOn this page\n\nUser email validation Make a new connection Installing the Descope identity validation snap-in\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-1046",
        "dataset_source": "devrev-dev0",
        "title": "Instabug",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nLet's set up Instabug for you Installation\nInstabug.\n\nSeamlessly bring user feedback from Instabug into DevRev. DevRev's Instabug integration enables you to create tickets or issues automatically when an Instabug user creates a report, linking it to a specific part of your product, assigning a default owner and optional tags.\n\nFor more information, refer to the Instabug snap-in on the DevRev marketplace.\n\nLet's set up Instabug for you.\n\nInstallation.\n\nGo to the Snap-ins. section within your DevRev workspace settings.\n\nClick Explore Marketplace..\n\nSearch for Instabug. and click Install. next to the Instabug. snap-in.\n\nIn the DevRev app, configure the snap-in in Settings. > Snap-ins. > Instabug..\n\nOptionally select the default owner for Instabug work items.\n\nOptionally select the default part for Instabug work items.\n\nOptionally add default tags for Instabug work items.\n\nSelect the DevRev work item type (issue or ticket) for Instabug reports.\n\nClick Save. > Install.\n\nGo to the Instructions. tab.\n\nCopy the webhook URL found here.\n\nConnect the DevRev webhook with Instabug.\n\nGo to Instabug and login.\n\nSelect your application and environment.\n\nIn the left nav, click on Settings..\n\nClick on Integrations..\n\nFind Webhook. and click on Create..\n\nEnter the DevRev webhook URL which you copied in the previous step in the URL field.\n\nPrevious Harness Next Airdrop\nOn this page\n\nLet's set up Instabug for you Installation\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1048",
        "dataset_source": "devrev-dev0",
        "title": "Paid Customers not on Slack",
        "content": "All Paid Customers who are not on Slack.\n\nS.No\n\nAccount\n\nPOC Email ID\n\nCS\n\n1.\n\nArihant Capital\n\ndipak.rout@arihantcapital.com devendra.sharma@arihantcapital.com\n\nNoor\n\n2.\n\nSpintly\n\nkedar.p@spintly.com\n\nRamya\n\n3.\n\n63Moons\n\nCan be ignored for now as Gaurish will discuss & confirm their engagement.\n\nRamya\n\n4.\n\nPosist\n\njarryd@posist.com\n\nRamya\n\n5.\n\nMadRewards\n\nsabdalla@madrewards.com\n\nAbirami"
    },
    {
        "id": "ART-1052",
        "dataset_source": "devrev-dev0",
        "title": "Best Practices for creating a snap-in",
        "content": "Best Practices for developing a snap-in\n\nManifest.yaml\n\nVersion\n\nIs the Latest version of the manifest being used\n\nName\n\nIs the Name a clear indicator of what the Snap-in does? As a devrev user can I get a fairly accurate and nearly complete understanding of what the snap-in does?\n\nIs the Name unique?\n\nDescription\n\nDoes the description clearly explain the capabilities of the snap-in?\n\nIs the description 1-2 sentences? About 120 characters?\n\nService Account\n\nDoes this app need a service account? Does it use the concept of a Service account fairly?\n\nDoes the display name help identify that it belongs to this particular snap-in?\n\nIs the display name unique?\n\nEvent Sources\n\nAre all event sources needed to meet the requirements?\n\nIs there an unnecessary duplicate of the same types of event sources?\n\nDoes the snap-in use all the event types that it is configured to listen on?\n\nAre they duplicate event sources of the same source declared for different event types?\n\nIs the generic event source hardcoding any secret in its config template?\n\nDo the display name and description clearly explain the purpose of the event source?\n\nGlobals\n\nAre all the declared globals needed to meet the requirements?\n\nAre the name, display name and description clear in explaining what the global input is for? Is there any ambiguity that might confuse a customer?\n\nIs the type of global the best match for its purpose?\n\nAre all mandatory globals properly marked as required? Do non-mandatory globals have good defaults?\n\nDo all the optional global fields have a default value?\n\nAre there too many globals? Will it overwhelm/confuse the customer?\n\nIs there any aspect of the snap-in that can be improved by having it configurable?\n\nAre auto-tagging tags configurable?\n\nAre messages configurable?\n\nAre timeouts/delays configurable?\n\nFunction Factory\n\nAre all the functions declared in the manifest exported in the factory? Are all the functions exported in the factory declared in the manifest?\n\nAre all the functions named with a good description documenting their functionality?\n\nAre the functions too many in count and too granular in purpose?\n\nAre the functions too broad in purpose and overloaded?\n\nAutomations\n\nAre the automations named accurately?\n\nDo the automations use an event_types filter to demux events to the right functions rather than declaring duplicated event sources for each event?\n\nIs there an automation declared for every custom event that the snap-in generates?\n\nSnap Kit Actions\n\nAre snap kits that are posted in the timeline mapped to some snap_kit_actions?\n\nCommands\n\nThe function that will be executed on triggering these commands should be lightweight as these commands are synchronous and they will block the UI if the function takes a lot of processing time\n\nAre registered commands named uniquely? Are the names appropriate to what the command does? Are the descriptions helpful?\n\nPackage.json\n\nAre all the listed dependencies used and are all used dependencies listed?\n\nAre all the listed dependencies and their versions valid?\n\nAre the listed dependencies well maintained?\n\nFolder Structure\n\nDoes the root folder contain only the manifest and the code folder?\n\nTests\n\nIs there enough code coverage generated by the tests?\n\nDoes the test case name indicate what functionality of the code it tests?\n\nFunctions\n\nIs the official DevRev typescript SDK used as opposed to http-client-based API calls?\n\nIs the devrev API endpoint provided in the event payload used rather than hard-coding the endpoint?\n\nDoes the function name convey its functionality?\n\nAre 3rd party official SDKs used as opposed to http-client-based API calls?\n\nAre common implementations shared across the functions moved to a separate \u201ccommon\u201d folder?\n\nIs error handling done correctly?\n\nAre errors logged with sufficient context?\n\nAre errors propagated back to the user?\n\nAre errors propagated to the user in a user-friendly way? Is the stack just sent back to them?\n\nAPI calls\n\nIs there sufficient retrying on critical calls?\n\nDo they apply status checks on the responses before using them?\n\nAre they making unnecessary calls which will increase snap-in latency and hit API rate limits?\n\nIs the code well commented? Are pending improvements marked as TODOs?\n\nAre constants moved into a separate file?\n\nIs there consistency in naming the variables and indentation?\n\nAre the API calls in a loop handled efficiently?\n\nDoes every function have a single functionality?\n\nREADME and documentation\n\nAre the functionalities of the snap-in clearly explained to an extent where a reviewer with no previous experience understands the snap-in? If the ownership is transferred, can the new owners effectively understand the snap-in?\n\nAre known caveats listed?\n\nDoes the Snap-in contain any illustrations or video to understand its usage?\n\nThe public marketplace listing of a snap-in should have at least one banner image. You are advised to send a heads-up to the DevRev team before you are ready to file your submission for a smooth process.\n\nFind a template for the banner image  here\n\nThe public marketplace listing of a snap-in should also have a link that should redirect to the docs page for detailed information around installation and usage if any.\n\nSee a sample snap-in documentation  here\n\nSee the sample format of the public marketplace listing  here"
    },
    {
        "id": "ART-1158",
        "dataset_source": "devrev-dev0",
        "title": "Support snap-ins",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nSupport snap-ins.\n\nAdd-on modules for DevRev, called snap-ins, are available on the Marketplace.\n\nSnap-ins are of the following types:\n\nIntegrations. let you connect DevRev with existing systems such as Slack and Jira.\nAutomations. perform tasks within DevRev based on events, like responding to customer conversations and linking tickets and issues.\nAirdrop. helps you bring data from external sources to DevRev and keep them in sync.\n\nWhile numerous snap-ins are available and more are in development, you can create your own using DevRev APIs.\n\nSupport.\n\nAuto parts to conversation Calendly Salesforce Auto-reply Email Zendesk Auto-routing Google Calendar ZoomInfo Bulk ticket uploader Slack Rocketlane Convergence WhatsApp Confluence CSAT on conversation Instabug CSAT on ticket Follow-up ticket Sentiment evaluator SLA change notifier Slash commands Smart import KBs Smart sprint Work duration\n\nAutomate Integrate Airdrop\n\nPrevious Service level agreement Next Build\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1159",
        "dataset_source": "devrev-dev0",
        "title": "Work duration",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Installing the Work duration snap-in\nWork duration.\n\nWork duration offers the ability to track how much work issues and tickets took to complete, measured in time from creation to closure date.\n\nThe snap-in adds a new attribute to tickets and issues which automatically calculates the work duration for that item when it is closed (time elapsed from creation to closure). The duration can be shown in hours or days.\n\nInstalling the Work duration snap-in.\n\nInstall the Work duration from the DevRev marketplace.\nSelect whether work duration time should be displayed in hours or days.\nClick Install snap-in..\nPrevious Ticket age in engineering Next Integrate\nOn this page Installing the Work duration snap-in\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1160",
        "dataset_source": "devrev-dev0",
        "title": "Ticket age in engineering",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Installing the Ticket age in engineering snap-in\nTicket age in engineering.\n\nTicket age in engineering offers the ability to track how much time tickets spend on engineering, measured by ticket time spent on engineering stages.\n\nThe snap-in adds a new attribute to tickets which automatically calculates the time spent on engineering for that ticket. There can be multiple engineering sessions. An engineering session starts when a ticket moves from a non-engineering stage to an engineering stage and it ends when it moves from an engineering stage to a non-engineering stage. You should select which ticket stages reflect engineering work and if the time spent should be shown in hours or days.\n\nInstalling the Ticket age in engineering snap-in.\n\nInstall the Ticket age in engineering from the DevRev marketplace.\nAdd all of the stage names. that reflect that engineering work is planned or is being done for that ticket. The stages you specify are the ones that track time spent on engineering. The default values are the default DevRev engineering stages for tickets.\nSelect whether time spent on engineering should be displayed in hours or days.\nClick Install snap-in..\nPrevious Smart sprint Next Work duration\nOn this page Installing the Ticket age in engineering snap-in\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1161",
        "dataset_source": "devrev-dev0",
        "title": "Dec 08, 2023 to Jan 08, 2024",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nWhat's new What's fixed\nDec 08 to Jan 08, 2024.\n\n7 new enhancements; 12 resolved issues\n\nWhat's new.\n\nAirDrop ServiceNow Support Introducing the beta version of ServiceNow import in DevRev, enabling selective data import directly from ServiceNow.\n\n\ud83d\udc49 For more information about AirDrop ServiceNow Support , refer to the following article: ServiceNow import\n\nAirdrop Confluence Introducing Confluence import: Convert Confluence pages into DevRev articles to enrich our knowledge base. Now utilize these indexed articles in Turing to enhance customer support and feature them in PLuG or the portal as knowledge base resources.\n\n\ud83d\udc49 For more information about Airdrop Confluence , refer to the following article: Confluence import\n\nAirdrop Salesforce Service Salesforce sync can now import opportunities, including related attachments and comments.\n\n\ud83d\udc49 For more information about Airdrop Salesforce Service , refer to the following article: Salesforce import\n\nAirdrop SoR integration This enhancement enables Airdrop to create KB articles with attachments in DevRev\n\nSlack App We've made several improvements to our Slack integration including: an improved form for ticket creation, conversation management in Slack, notifications when a ticket's stage has been updated, autofilling certain fields based on context from Slack, and more.\n\n\ud83d\udc49 For more information about Slack App , refer to the following article: Slack\n\nTurnkey analytics Explore actionable insights and trends in customer experience metrics with our support analytics dashboard. Utilize filters to slice and dice the data, and leverage drill-through functionality by clicking on each widget to delve deeper into the information. The dashboard has metrics for both your tickets and conversations.\n\n\ud83d\udc49 For more information about Turnkey analytics , refer to the following article: Support analytics\n\nUser Tracking Utilize the PLuG SDK for effective tracking of user interactions. This feature enables you to transmit customized events, defining how users engage with your product or website. Analyze these events to gain insights into product usage metrics, to deploy targeted campaigns, and to equip your customer experience team with precise information about customer interactions.\n\n\ud83d\udc49 For more information about User Tracking , refer to the following article: Track events\n\nWhat's fixed.\n\nAccounts Duplicate Detection & Avoidance Our duplicate detection nudge for accounts will now only appear once per session, instead of on every page visit\n\nAirdrop Jira Comments created in DevRev are attributed to the original creator and creation time when synced to Jira, but will not be synced from Jira to DevRev after creation\n\nAirdrop Jira When using 2-way sync between DevRev and Jira, this fix ensures comments are attributed to the correct user\n\nAirdrop Reporting & Notifications We added alerts for the following Airdrop events: sync failed, sync with some failed items, and recipe mapping required\n\nAirdrop: Multi-step Recipe Mapping: Choose what data to import/sync We no longer automatically import new subtypes and new optional custom fields from external system during syncs\n\nAirdrop: Multi-step Recipe Mapping: Choose what data to import/sync This fix makes it easier to use your custom fields from Zendesk in DevRev\n\nAirdrop: Multi-step Recipe Mapping: Choose what data to import/sync This fix includes several changes that make it easier to select and manage fields when doing an import\n\nMacro Replies Updated Spanish macros.\n\nRevUser Management - Leads, Contacts and Users This feature allows you to move Contacts from one Account to another.\n\nSearch If you're using our Jira integration, this improvement gives you the ability to search issues and tickets in DevRev by their Jira ID\n\nSupport Inbox When creating a ticket from a conversation, we'll now auto populate the title and description based on the conversation\n\nUser, Org Management This enables auto membership for new Support Portal users\n\nPrevious Jan 09, 2023 to Feb 09, 2024 Next Nov 10 to Dec 07, 2023\nOn this page\n\nWhat's new What's fixed\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1162",
        "dataset_source": "devrev-dev0",
        "title": "Jan 09, 2023 to Feb 09, 2024",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nWhat's new What's fixed\nJan 09 to Feb 09, 2024.\n\n9 new enhancements; 11 resolved issues\n\nWhat's new.\n\nAirdrop Manage Recipe Introducing Multi-step Recipe Mapping!\n\nNow, DevRev users can effortlessly tailor their migration or sync processes by handpicking included/excluded types and specific fields, empowering precise control over data transitions.\n\nAuth Platform Now you can find all your connections in Settings > Integrations > Snap-ins or Import in the top-right corner. In addition, the Connections. page now has a better interface and search.\n\nCustom Field Groups Custom Field Groups\n\nWe have introduced the ability for end-users to define groups for custom fields, allowing for better rendering in the UI.\n\nNew Features. :\n\nExpand group accordion if it has a required field: Added functionality to automatically expand the group accordion if it contains a required field.\n\nWhat's improved. :\n\nWeb UI: Group names for related custom fields: Implemented the ability to assign group names to related custom fields in the web UI.\n\nEmail Integration We are pleased to announce significant improvements to DevRev's email integration capabilities.\n\nSimplified Gmail Connection:. For organizations utilizing Gmail, setting up email connections has been simplified. Link your organization's Gmail account directly within DevRev with just a few clicks, without any requirements for DNS record addition. For more information, please refer here: Creating a Gmail Connection.\n\nEmail Summarization:. Ticket descriptions generated from email integration have undergone a significant overhaul. Instead of presenting only the initial email message, we now offer a comprehensive summary of the entire email thread. This improvement facilitates faster and more effective issue diagnosis.\n\nImproved Customer Inference. : Our customer identification process has been refined, enabling us to accurately discern the original customer sender in a thread forwarded by a DevUser to support. This refinement streamlines SLA application and customer tracking, without necessitating direct customer involvement in the email thread.\n\nEnhanced Email Viewer:. We've upgraded our email viewer for better clarity and convenience. Now, easily identify senders and recipients for each message, view complete formatted emails along with inline images directly in the timeline, and access forwarded emails without using \"Show Original Email\".\n\n\ud83d\udc49 For more information about Email Integration , refer to the following articles: \u2023 Customer email notifications \u2023 Email\n\nMy Snap-Ins User level snap-ins and UI revamp: Now snap-in builders can create snap-ins that have user-level configuration. Snap-in users can now have user-level preferences after this update. The Snap-in config page also has a brand-new, intuitive, and sleek UI.\n\nPer DevOrg Stock Field Overrides Stock Overrides are here!\n\nThis feature allows customers to define specific properties on a stock field. Currently, we've extended this feature to cover three properties:\n\nDisplay name of the field\n\nOptionality of a field (only making it optional or mandatory is allowed)\n\nThese overrides will impact various views like list/filter/side-panel/customize-col/sort-by/group-by/info-tooltips/link-widgets/bulk-actions, and more. Essentially, any of the stock fields can now be marked as mandatory, the field can be hidden from UI etc.\n\nNOTE: These overrides can currently be set through API only. While we work on the UI component, you can use the same fragment set APIs to add stock overrides.\n\nSearch Search v2\n\nUI is now revamped which is cleaner and packed with more utility\n\nRecent recommended items. are now visible when set to search 'Everywhere'. without any filters.\n\nWhen more contexts. are added, they are now neatly stowed away within a dropdown.\n\nFilters. can now be accessed through UI without having to write a query.\n\nSearch commands documentation is now available to help discover operators and fields that are supported with search\n\n\ud83d\udc49 For more information about Search , refer to the following article: Search\n\nSprint mode Sprint board creation and management are more flexible and dynamic than before. Here are the key new additions:\n\nA brand new page for showing all sprint boards so that you don't have to go digging for them by visiting Trails and then Parts . It also has a quick call to action on top to create a new sprint board easily from here.\n\nSprint boards are no longer just tied to a single-part hierarchy. You can create team-based sprint boards or a board to work across part hierarchies. You can use any combination of issue filters to define the backlog which makes sprint backlog management super specific to your team's needs.\n\nThere is a settings page on the sprint board that allows you to change the backlog filters at any time post creation to keep up with your team's evolving needs to manage the work.\n\nIssues can be assigned to any sprint board from the searchable sprint drop-down on the issue side-pane and not restricted to sprint boards on a specific part anymore.\n\nIt is super beneficial to know which teams are working on a certain product part currently, so we have retained the ability to see sprint boards on a certain Part but unlike before, it is much smarter and up-to-date data by showing only those sprint boards where in active sprint, work is happening on the Part actually in terms of issues assigned\n\n\ud83d\udc49 For more information about Sprint mode , refer to the following article: Sprint mode\n\nSupport Turing Bot Interactive Search on Customer Portal and PLuG\n\nEnhancement includes generative AI search on PLuG and Portal, backed by Turing. The goal is to provide a more conversational and delightful search experience, differentiating from competitors and anticipating future trends in chat-based search.\n\nThis will reduce the pain of users going into a hierarchical structure of the KB and then spending time to find the right article. Instead, they can just use the Turing conversational search to get their answers instantly.\n\nThis can be enabled on both PLuG and Portal by going to the respective PLuG/Portal settings and enabling the \"Turing Search\" section.\n\n\ud83d\udc49 For more information about Support Turing Bot , refer to the following article: Turing bot\n\nWhat's fixed.\n\nPLuG Widget The toggle theme method allows you to dynamically modify the PLuG SDK's theme, even after initializing the PLuG widget. This functionality enables real-time adjustments to the PLuG widget's theme based on diverse themes preferred by your users.\n\nPLuG Widget The start conversation method is utilized to open the PLuG widget with the conversation creation view activated. It essentially replicates the action of clicking the Send us a message. button, launching the widget directly to the conversation initiation screen.\n\nThe method also accepts an optional input parameter, allowing you to pre-fill a message in the conversation creation screen. This provides your users with a prompt to initiate a conversation with your team.\n\nPart customization Customizing your parts for streamlining day-to-day operations has never been easier as now you can manage custom fields for parts from our Object customization UI on our Settings page. We have also added much-needed support for filtering, sorting, and grouping on custom fields for Parts so that you can use Parts in our app just the way you want.\n\nRoadmap We are thrilled to introduce several key enhancements to our Gantt-View, designed to boost your productivity while ensuring a smooth user experience:\n\nDirect Date Additions. : Now, add target dates directly via the chart, bypassing multiple interfaces and setting target dates without needing to access the side panel.\n\nMarkers for Non-Visible Nodes. : Get a snapshot of target dates for non-visible nodes courtesy of our new markers. A click takes you right to the respective enhancement.\n\nGroup-by Mode. : We've adopted the 'group by' mode from list-view to Gantt-View for efficient task categorization and management.\n\nSLA Added support for Ticket subtypes when creating SLA policies.\n\nSLA Fixed a bug where org schedule was off by one day.\n\nSLA Added ability to mark an SLA as default. If an SLA is marked as default, all customers that are not added specifically to an SLA will fall under the default SLA.\n\nSLA Fixed a bug where SLA would show completed even when no SLA was applied to a ticket.\n\nSLA Fixed a bug where next response SLA was not showing up on tickets. This is now fixed.\n\nSocial Stop notifications for all low-priority updates, including bot-triggered field updates. This is to reduce the noise from the Updates page.\n\nTimeline Now users can mention a Group on the discussions timeline and everyone who is part of the group gets notified. All the users of the group would receive this as an Important notification. This resolves the problem of finding the right person to tag or tagging everyone in a team individually.\n\nPrevious Feb 10 to Feb 29, 2024 Next Dec 08, 2023 to Jan 08, 2024\nOn this page\n\nWhat's new What's fixed\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1163",
        "dataset_source": "devrev-dev0",
        "title": "Grow snap-ins",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nGrow snap-ins.\n\nAdd-on modules for DevRev, called snap-ins, are available on the Marketplace.\n\nSnap-ins are of the following types:\n\nIntegrations. let you connect DevRev with existing systems such as Slack and Jira.\nAutomations. perform tasks within DevRev based on events, like responding to customer conversations and linking tickets and issues.\nAirdrop. helps you bring data from external sources to DevRev and keep them in sync.\n\nWhile numerous snap-ins are available and more are in development, you can create your own using DevRev APIs.\n\nGrow.\n\nAutomate opportunities Calendly Salesforce Google Calendar Hubspot ServiceNow\n\nAutomate Integrate Airdrop\n\nPrevious Grow Next Snap-ins\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1164",
        "dataset_source": "devrev-dev0",
        "title": "SLA status change Slack notifier",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nInstallation Configure the snap-in\nSLA status change Slack notifier.\n\nGet alerted on your ticket's SLAs. This snap-in sends a notification through Slack to user configured channels, tagging the ticket's owner and subscribers, when a ticket's SLA changes into the Warning or Breached stage.\n\nFor more information, refer to the SLA status change Slack notifier snap-in on the DevRev marketplace.\n\nInstallation.\n\nCreate a Slack app for your workspace in https://api.slack.com/apps.\n\nIn App features, generate bot token in OAuth & Permissions.\n\nGrant the app bot the following permissions: channel-read , groups-read , user.profile:read , users:read , users.read:email , chat-write , and userGroup-read.\n\nInvite the bot to the workspace.\n\nSave the bot access token as connection (snap-in secret) in DevRev app.\n\nInvite the bot to the channels where the messages will be sent.\n\nIn the DevRev app, setup the connection in Settings. > Snap-ins. > Connections. on top.\n\nSearch and choose an existing connection or create a new one by clicking + Connection..\nSelect Slack. from the dowpdown list.\nGive it a name and sign in with Slack. Ensure to toggle on Make public. to make the connection public for your organization.\n\nConfigure the snap-in.\n\nIn the Configuration tab, the first input field to set is the filters one. Here you can declare for which tickets to track the SLA status and to what channels should the notifications be sent. Set the ticket subtype, severity, and part; followed by the support heads you would like to tag on the message (the ticket owner gets tagged automatically) and the target Slack channel. The channel's ID can be found by going to the channel details. Refer to the placeholder value on the input to see an example of how this looks.\n\nDecide if notifications should go out even if the ticket has a target end date set. Set the toggle to the desired behavior.\n\nDecide if a ticket should pass the check if it's part is a descendant of the filter part. For example, if a ticket with part set as \"Feature 1\" should trigger a notification when the filter is set to \"Capability 1\" and this is a parent part of that feature. Set the toggle to the desired behavior.\n\nCheck the default message body and change it if you would like a different phrasing.\n\nPrevious Smart import KBs Next Slash commands\nOn this page\n\nInstallation Configure the snap-in\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1165",
        "dataset_source": "devrev-dev0",
        "title": "Nov 10 to Dec 07, 2023",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nWhat's new What's fixed\nNov 10 to Dec 07, 2023.\n\n6 new enhancements; 5 resolved issues\n\nWhat's new.\n\nAirdrop Manage Recipe When performing a new Zendesk import, stages will now be created in DevRev to match those of the Zendesk organization being imported.\n\nAirdrop Manage Recipe This enhancement eliminates stage mapping for work-type objects (tickets, issues, opportunities, etc.) when migrating if DevRev\u2019s stages don\u2019t align with the external system\u2019s. The mapping process will be replaced by simply creating new subtypes in DevRev that match the external system\u2019s stages 1:1.\n\nBitbucket Our Bitbucket connection now displays Git events in the event timeline and maps Git events to issue stages. All you have to do is provide the issue ID number in the PR or branch.\n\nCustom Fields Both iOS and Android users can now view the custom fields in the record details.\n\nRoadmap We're excited to announce our new Gantt View feature! This update is designed to provide you with a more comprehensive and dynamic perspective of your project timelines, enhancing both planning and execution efficiency.\n\nKey features and benefits:\n\nDynamic Gantt View. : Replace traditional lists with a vivid Gantt view for an all-encompassing project timeline.\n\nEfficiency Analysis. : Spot discrepancies in planned vs. actual close dates directly in the Gantt view, refining your future planning strategies.\n\nResource Optimization. : Analyze and reallocate resources effectively based on the scope and progress of enhancements.\n\nMultiple Viewing Options. : Switch between day, month, and year views for a tailored roadmap overview.\n\nCustom Roadmaps. : Create and save customized roadmaps with various filters to focus on specific project elements.\n\nSchedule Adjustments. : Dynamically modify timelines within the Gantt view to prioritize and optimize project delivery.\n\nRoadmap We are thrilled to introduce two revolutionary features in our product management suite:\n\nEnhanced Visibility on Customer Requests:. Now, directly link customer requests to specific features under development. View comprehensive details including the customers who raised these requests and the associated sales opportunities.\n\nData-Driven Prioritization:. Implement a new customer impact score for prioritization, utilizing objective data like account details, ticket severity, SLA countdown, and potential revenue from open opportunities.\n\nThese enhancements are designed to bring customer feedback to the forefront of your product development process, ensuring that every feature you develop is closely aligned with customer needs and market demands.\n\n\ud83d\udc49 For more information about Roadmap , refer to the following article: Roadmap\n\nSlack App This enhancement migrates our Slack Snap-in from rego to JavaScript and adds additional functionality. We now support more notifications based on Slack rules, sync every conversation from Slack Connect channels, and users can create issues in addition to tickets.\n\n\ud83d\udc4d\ud83d\udc4d\ud83d\udc4d Added at the request of multiple customers!\n\n\ud83d\udc49 For more information about Slack App , refer to the following article: Slack\n\nWhat's fixed.\n\nAirdrop Manage Recipe This fix ensures Zendesk and DevRev ticket custom fields stay in sync.\n\nCMS This fix makes knowledge base article management even easier.\n\nConversation and ticket management If a ticket is forwarded via email and there's no customer on the email thread, we'll now create a ticket and sync the email messages on the customer messages tab of the email.\n\nField Component Deprecation This fix includes improvements to our record view panel for work-type objects (tickets, issues, etc.).\n\nTimeline & Snap-in Localization If you're using the Spanish language PLuG, the bot will now also comment in Spanish.\n\nPrevious Dec 08, 2023 to Jan 08, 2024 Next Oct 13 to Nov 09, 2023\nOn this page\n\nWhat's new What's fixed\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1166",
        "dataset_source": "devrev-dev0",
        "title": "Build snap-ins",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nBuild snap-ins.\n\nAdd-on modules for DevRev, called snap-ins, are available on the Marketplace.\n\nSnap-ins are of the following types:\n\nIntegrations. let you connect DevRev with existing systems such as Slack and Jira.\nAutomations. perform tasks within DevRev based on events, like responding to customer conversations and linking tickets and issues.\nAirdrop. helps you bring data from external sources to DevRev and keep them in sync.\n\nWhile numerous snap-ins are available and more are in development, you can create your own using DevRev APIs.\n\nBuild.\n\nConvergence GitHub Jira Work duration Harness Linear Ticket age in engineering\n\nAutomate Integrate Airdrop\n\nPrevious Build best practices Next Grow\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1167",
        "dataset_source": "devrev-dev0",
        "title": "People insights",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSpacebar Optional settings to fetch GitHub activity Source of information Issues timeline Data inferences Weight and category Aggregations Rollup Group by team Details of the people insights output table on spacebar Filters and buttons Columns\nPeople insights.\n\nIn a medium to large software development organization, development teams often face challenges when it comes to monitoring and measuring developer productivity.\n\nDevRev's people insights functionality provides a deep understanding of the inner workings of a development team, providing an objective and data-driven perspective on individual and team contributions. For all dev users within a dev org, it provides the following data and insights into the development process:\n\nWho worked on what: Get a clear picture of individual and team contributions to specific parts, tickets, and customers.\n\nHow much time and effort was spent: Gain insights into the focus and intensity of work done in different areas by a dev user.\n\nWhat types of activities were performed: Understand the distribution of effort between development, code review, communication, and other tasks.\n\nThe impact of their work: See how individual and team contributions translate into concrete outcomes like linked issues and tickets resolved.\n\nSpacebar.\n\nSpacebar allows you to derive developer insights with simple natural language queries. Learn what a team or an individual has worked on over the last week/month in the context of a part of the product and customer tickets. By default, insights are based on one week\u2019s data. Custom durations can be provided as part of the query.\n\nYou can input queries like the following in the spacebar:\n\nShow me the contributions of @JohnD for last week.\nWhat did @JaneS work on?\nWho worked on #CAPL-67 in the last month?\nWhat did @JohnD do on #FEAT-678 in the last month?\nWhat did the \"UI\" Team do in the last month?\nWhat did \"support\" team do?\n\nWhen tagging individuals with @mentions or referring to specific #parts, ensure you select the names from the drop-down list that appears.\n\nIn the above examples:\n\n@JaneS and @JohnD represent dev users.\n#CAPL-67 and #FEAT-678 serve as part IDs. The drop-down list facilitates searching for parts by their name or ID number.\nUI team and support team are groups created using the groups page in the DevRev app.\n\nOptional settings to fetch GitHub activity.\n\nInstall the GitHub snap-in to extract details of development activity such as push branch and pull request actions and incorporate them into the corresponding issue\u2019s timeline. This functionality ensures that code contributions are visible in the people insights query output. For detailed information, refer to the Snap-in documentation.\n\nAll dev users must link their GitHub accounts to DevRev as per the provided documentation to automatically monitor coding activities. Failure to complete this step means the user's work on GitHub won't be reflected in DevRev's people insights analytics. Without this linking, DevRev won't associate a GitHub user with the corresponding DevRev user ID.\n\nSource of information.\n\nIssues timeline.\n\nThe foundation of people insights information is the events data found in the issue timeline. All output in people insights queries is derived through calculations and inferences made by analyzing the relationships between users, events, and issues in the timeline.\n\nData inferences.\n\nBased on the links and object fields set in DevRev, people insights analytics data is generated as follows:\n\nPart is derived from the part the issue is assigned to at calculation time.\nTickets affected are either:\n\nTickets that are linked directly to the issue being worked on.\nThe Issue being worked on is assigned to a part of type enhancement, and tickets are linked to that enhancement.\n\nCustomers impacted are derived from the workspace that tickets are assigned to.\nUser actions on DevRev issues, such as creating or updating an issue or adding comments, directly show up as contributions by the user. However, for GitHub events captured by the GitHub snap-in, linking the dev user to the GitHub user is necessary to determine the corresponding DevRev user from the GitHub actor.\n\nData from the timeline of all the issues is currently gathered once a day for analytics purposes by the DevRev automatic jobs in the background. Therefore, any changes in work/contributions made will always be reflected the next day.\n\nWeight and category.\n\nEvery type of timeline event is assigned a weight and a category. Default values are provided for both weight and category.\n\nThe following are the supported categories:\n\nDevelopment activity. : Includes events like GitHub branch creation, PR commits, and the merging of PRs.\nCode review. : Includes events like PR approvals or requesting reviews or changes in a PR review.\nWork management. : Includes issue updates, stage changes, etc.\nCommunication. : Includes comments posted on issue timelines or PR reviews.\nMiscellaneous. : Any new events generated but not specifically categorized. Once customizable weight and category options are provided, users can allocate them as they find appropriate.\n\nThe weight assigned to each event signifies its relative magnitude, referred to as units of work. These weights play a crucial role in calculating the focus percentage and contribution on part percentage. This involves multiplying events by their respective weights before aggregating them to determine ratios.\n\nAggregations.\n\nRollup.\n\nRollup aggregates data based on a parts hierarchy defined by is part of links. Dev parts (runnables and linkables) remain separate in the rollup view because their hierarchy isn't defined by is part of links. When viewing information about a part in a row during rollup, details about its children's parts, their children, and so forth are included. This hierarchical breakdown can be seen in the table view by expanding the chevron next to the part name.\n\nGroup by team.\n\nThis can be only applied when a group is selected as a filter. When applying this aggregation, all users of the group are shown in a single row, and all their information is added together. However, in the user column, for each row, it will show, out of the entire group, only the users that contributed to the part specified in the row.\n\nDetails of the people insights output table on spacebar.\n\nIf the user works in the specified duration, contribution details will be output in a table format.\n\nFilters and buttons.\n\nAt the top of the table, on the left, there will be a set of filters, similar to other filters in DevRev. These filters are:\n\nGroup. : The group is inferred from the name enclosed in quotes in a team spacebar query, so it's disabled as a filter. When this filter is activated, the Grouped. toggle button appears on the right, and the user filter is populated with all users inferred as part of the group.\nUser/Part/Date. : The user/part/date will be inferred from the spacebar query, therefore they are disabled as a filter.\nContribution Type. : It is a filter that lets you pick between categories. This filter is enabled for users to change within the spacebar. When this filter is set, the table will only show the information relevant to these categories.\n\nAt the top right of the table, toggle buttons are located, which are:\n\nRollup. : Set to disabled by default to initially show only direct work done on a part. When enabled, it will rollup all rows according to the part hierarchy.\nGrouped. : Only appears when a group is inferred from a spacebar query. Set to true by default. When this toggle is set to false, the table will show the information where each individual person is in their own set of rows.\n\nColumns.\n\nPart.\n\nIt will show the display ID of the part. On hover, you can see more information about the part including its name, etc. In the case of a Rollup view, there may be a chevron to the left that can drop-down and expand to show further drill-down.\n\nUser.\n\nThis column will display the user\u2019s name. In a grouped view with multiple users, it will display them as an avatar stack that you can hover over to see the full list.\n\nFocus percentage.\n\nShows the distribution of the user\u2019s attention on all parts they worked on in the given duration. All contributions by a user to that part (with its children, if rolled up) are multiplied by their respective weights and added. This total is divided by the weighted contributions of the user on all parts to give the total focus percentage.\n\nIn a grouped view, the sum of all contributions by all users of that group (displayed in the column) will be divided by the total of all users in the group.\n\nOn hover, you can see a breakdown of the contributions based on their categories. There will be two numbers, the left one is the count of all events matching that category made by the relevant users on this specific part (with its children, if rolled up), and the second number is simply the total number of these events made by the same users on any part.\n\nContribution on part percentage.\n\nShows out of all the work done on a part (with its children, if rolled up), what portion the users in the query contributed. This will work in the same way as the focus percentage but it uses the entirety of contributions to these parts by all the users as the denominator when getting the percentage.\n\nIssues & tickets.\n\nBoth will show a number of distinct issues and tickets and on hover will show a list of up to 15 of them.\n\nCustomers.\n\nCustomers will be displayed as an avatar stack, and if multiple of them are present, a complete list will be shown on hover.\n\nPrevious Search Next Accessing DevRev\nOn this page\n\nSpacebar Optional settings to fetch GitHub activity Source of information Issues timeline Data inferences Weight and category Aggregations Rollup Group by team Details of the people insights output table on spacebar Filters and buttons Columns\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1168",
        "dataset_source": "devrev-dev0",
        "title": "Feb 10 to Feb 29, 2024",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nAirDrop ServiceNow Support Airdrop Platform Sentiment DevRev Customization DevRev Plugin for Jira Email Integration Issue Management Help Center Management Notifications PLuG Widget SLA\nFeb 10 to Feb 29, 2024.\n\nAirDrop ServiceNow Support.\n\nAirdrop ServiceNow now supports importing reference tables.\n\n\ud83d\udc49 For more information about AirDrop ServiceNow Support , refer to the following article: ServiceNow import\n\nAirdrop Platform.\n\nFix: The subtype name created by Airdrop is now readable and user-friendly.\nSentiment.\n\nImproved Feedback Loop: When sentiment is positive, support agents are now prompted to confirm its accuracy.\n\nCorrective Feedback Mechanism: If the initial evaluation is incorrect, agents can provide the correct sentiment.\n\nEnhanced Data Logging: Both confirmed and corrected sentiment values are logged for improving the model.\n\nFocused Analysis: Sentiment is now solely evaluated on customer messages, providing a clearer picture of customer sentiment.\n\n\ud83d\udc49 For more information about Core AI , refer to the following article: DevRev | Built for AI\n\nDevRev Customization.\n\nCustomers can now enhance their customization of the ticket list page with the addition of subtype information and the ability to group tickets by subtype.\n\nTailor your Vista view with the ability to use subtypes for customization, enhancing your personalization options.\n\nExporting from Vista now includes subtype details, ensuring comprehensive data retrieval for your analyzes.\n\nSubtypes imported via Airdrop are now conveniently grouped together in list views.\n\n\ud83d\udc49 For more information about DevRev Customization , refer to the following article: Object customization\n\nDevRev Plugin for Jira.\n\nWe're thrilled to announce a game-changing update that bridges the gap between your support teams on DevRev and engineering teams on Jira more effectively than ever before. It works in conjunction with our existing 2-way sync functionality with Jira via Airdrop.\n\nKey features:\n\nIn-App Collaboration: Jira users can now view details, comment, and collaborate on DevRev tickets directly within Jira. No more platform-hopping.\n\nEnhanced Notification System: Effortlessly broadcast a message to multiple ticket owners with just a click, significantly speeding up the resolution process during critical system-down events.\n\nSimplified Ticket Linking: Link your Jira work items to the right DevRev tickets with an easy search-and-link feature, ensuring accurate tracking and alignment across teams.\n\n\ud83d\udc49 For more information about DevRev Plugin for Jira , refer to the following article: DevRev for Jira app\n\nEmail Integration.\n\nFix: Resolved an issue where the Show Original Email. option was not appearing.\n\nImprovement: Added support to mention a Ticket ID using # when sending an email.\n\nImprovement: Delegate email addresses in Gmail are those that have been authorized to respond to emails on behalf of someone else. The Email Integration snap-in now supports adding delegate email addresses of the primary address to the sender's list.\n\nImprovement: Automatic responses or bot comments will no longer be sent as responses to automatically generated emails from the customer's email address to the configured support email address. This prevents bot-to-bot communication and potential email loops.\n\nImprovement: Email as the default channel for tickets enables all messages from customer chats to be sent via email, in addition to the original source channel of the ticket.\n\nTo add email as a default channel on tickets, navigate to the Email Integration snap-in and enable the respective toggle.\n\nImprovement: Added the ability to retain typed content after closing the email composer. The typed content will be available upon reopening the email composer.\n\nImprovement: Added support to mention a user using @ when sending an email.\n\nImprovement: Notifies the sender whether the last message sent on the customer chat was successfully sent via email or not, along with providing details of any errors causing the message sending failure.\n\nIssue Management.\n\nIn addition to tracking which customer facing product part an issue or work item impacts, you can also populate the Developed with Parts. field now to track which specific development components like runnables/ linkables were involved in making the changes.\n\n\ud83d\udc49 For more information about Issue Management , refer to the following article: Issues\n\nHelp Center Management.\n\nThe long-awaited Knowledge Base management feature is now available on DevRev. With this new functionality, you can write articles directly on DevRev, organize them into multiple layers of collections for improved hierarchy, arrange them to enhance readability for your customers, and host them on our support portal.\n\nYou can now rearrange the order of your articles and collections to dictate how they appear on the Portal. This allows you to tailor the experience you want to provide for your customers on your portal. Visit Settings -> Collections. to explore this feature and easily manage your help center content.\n\n\ud83d\udc49 For more information about Knowledge Base Management , refer to the following article: Articles\n\nNotifications.\n\nWe've introduced Important. and Other. tabs to help you understand what matters most. The Important. tab is your go-to for high-priority updates like mentions, assignments, new comments, and other critical alerts, ensuring you never miss a beat. Here is a blog about all the new notifications updates.\n\nWe've eliminated Airdrop-related notifications to maintain a clean and focused mobile app environment, ensuring your engagement remains uninterrupted.\n\n\ud83d\udc49 For more information about Notifications , refer to the following article: Updates\n\nPLuG Widget.\n\nUser Online/Offline Status via PLuG: Users can now easily determine the online or offline status of their customers via the PLuG widget. This enhancement provides your teams with real-time information about the availability of your customers on your app/website where the PLuG widget is installed.\n\nOur Nudges have been enhanced with the inclusion of GIF support in your Spotlight Nudge, enabling you to provide a richer experience for your customers through Nudges. Utilize it to highlight your features and product experiences.\n\nSLA.\n\nImprovement: Added support for editing SLA policies in draft mode.\n\n\ud83d\udc49 For more information about SLA , refer to the following article: Service level agreement\n\nPrevious Mar 01 to Mar 29, 2024 Next Jan 09, 2023 to Feb 09, 2024\nOn this page\n\nAirDrop ServiceNow Support Airdrop Platform Sentiment DevRev Customization DevRev Plugin for Jira Email Integration Issue Management Help Center Management Notifications PLuG Widget SLA\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1169",
        "dataset_source": "devrev-dev0",
        "title": "For Developers \u2013 DevRev | Docs",
        "content": "\ud83d\udc49 Getting started\nIf you are new to DevRev, we would recommend learning about our core concepts before getting started.\nOnce you have a DevRev account, you can access the APIs with a personal access token (PAT) that you create in the DevRev app.\nA brief tutorial shows you how to access the APIs.\n\ud83e\uddec Methods\nSpecifications covering the supported APIs are based on OpenAPI Specification 3.0. You can download the specs to use an OpenAPI 3.0-compliant tool to perform a variety of actions, including rendering them in UI and generating SDKs. Two versions of the DevRev API are available: public and beta (early access). Use the drop-down menu in the upper-left corner of this site to switch between versions.\nTo take action based on events from the DevRev platform, webhooks are also supported.\n\n\ud83e\udde9 Snap-ins\nNumerous snap-ins are available on the DevRev Marketplace. The snap-in framework is available for you to create your own snap-ins for automation of DevRev workflows or integration with other system.\n\ud83d\udcbb SDKs\n"
    },
    {
        "id": "ART-1170",
        "dataset_source": "devrev-dev0",
        "title": "Authentication \u2013 DevRev | Docs",
        "content": "Security token types\n\n\nApplication Access Token (AAT): Uniquely identifies an application belonging to a dev org. An AAT is obtained by a dev user with the right level of privileges for a given application. The AAT is issued against an application ID, which could represent the dev org\u2019s SaaS app. The AAT can only be used to obtain a session token; it does not reference any dev user or customer. At the time of the token generation, the corresponding dev user can define the expiration time of the token. The lifetime of an AAT is usually in days. The subject of the AAT is set to the DON of the application, which is service account (for example, don:identity:dvrv-us-1:devo/0:svcacc/gG88A).\n\n\nSystem User Token (SUT): Uniquely identifies a system user belonging to a dev org. A SUT is obtained by a dev user with the right level of privileges for a given system user. The SUT is issued for the DON of the corresponding system user. At the time of the token generation, the corresponding dev user can define the expiration time of the token. The lifetime of a SUT is usually in days. The subject of the SUT is set to the DON of the corresponding system user (for example, don:identity:dvrv-us-1:devo/0:sysu/1).\n\n\nSession Token: Obtained by an application to access DevRev APIs on behalf of a customer (or customer). The application uses its own AAT to authenticate to the STS to obtain a session token for a customer and then uses that session token to access DevRev APIs. The lifetime of a session token is usually minutes. The subject of the session token is set to the DON of the corresponding customer (for example, don:identity:dvrv-us-1:devo/0:revo/6:revu/131).\n\n\nPersonal Access Token (PAT): Uniquely identifies a dev user. A PAT can be used by external applications to access DevRev APIs on behalf of the corresponding dev user. The lifetime of a PAT is usually in days. The subject of the PAT is set to the corresponding dev users DON (for example, don:identity:dvrv-us-1:devo/0:devu/30).\n\n\nPersonal access token usage\nAuthentication to DevRev APIs requires a personal access token (PAT). A PAT is used to uniquely identify a dev user in context of a dev org and can be used by external third-party applications to access DevRev APIs on behalf of the corresponding dev user. A PAT has the same set of privileges that the owner of the PAT has on the DevRev platform.\nYou can set the validity duration of a PAT. You can\u2019t renew a PAT; you can only create a new PAT and update your code to use it.\nFor example, a VS Code plugin that pulls issues from the DevRev platform pertaining to a particular dev user needs to rely on that user\u2019s PAT to authenticate the DevRev APIs.\nIf you are receiving an invalid token error, you can check whether the token is valid at jwt.io.\nGenerate a personal access token (PAT)\n\nIn the DevRev app, go to the relevant dev org.\nGo to Settings > Account > Personal Access Token.\nClick New token and follow the workflow to create your PAT.\n\n\nAs the token value isn\u2019t retrievable later, using descriptive names for PATs is recommended as it can help you differentiate between multiple PATs.\n\n\nCopy the PAT and store it securely. Once you go to another page, you can\u2019t retrieve this PAT again.\n\nRevoke a personal access token\nOnce a PAT is revoked, it can\u2019t be restored. Never share tokens with other users or applications. Do not publish tokens in public code repositories.\n\nIn the DevRev app, go to the relevant dev org.\nGo to Settings > Account > Personal Access Token.\nClick Revoke next to the PAT you wish to revoke.\n\nYou can also click the Revoke all to revoke all the tokens which you have previously generated."
    },
    {
        "id": "ART-1171",
        "dataset_source": "devrev-dev0",
        "title": "Pagination \u2013 DevRev | Docs",
        "content": "A lot of the time, when you\u2019re making calls to the DevRev API, there\u2019ll be a lot of results to return. For that reason, we paginate the results to make sure responses are easier to handle.\nLet\u2019s say your initial call is asking to list all the users in an org; the result could be a massive response with hundreds of thousands of pages. That\u2019s not a good place to start.\nWhen you make an API call, it returns a cursor with a random code. If there are more pages available, the response will include a field called next_cursor which points to the next page.\n\nIf there are no more pages to paginate, the response will not include the next_cursor field.\nTo advance to the next page, include the cursor parameter in your query like this:\n"
    },
    {
        "id": "ART-1172",
        "dataset_source": "devrev-dev0",
        "title": "Versioning \u2013 DevRev | Docs",
        "content": "Public APIs\nThe current version of the DevRev public API is 2022-10-20.\nBy default, requests implicitly use version 2022-10-20 unless you override the API version by passing\nin the X-Devrev-Version header with the requested version.\n\nWhen backwards-incompatible changes are made to the API, a new, dated version is released. The customer can opt-in by providing the date string which gets published in the documentation.\nIf DevRev needs to introduce a new version, we provide adequate notice for users to migrate or adopt the new version. All public API versions are supported for at least 1 year.\nBeta (early-access) APIs\nDevRev exposes newer functionality in the form of beta APIs to allow early adopters to explore and\nexperiment. These APIs are likely evolve and change as we receive more feedback, so they do not\nhave the same backward compatibility and version guarantees as our public APIs.\nTo use beta APIs, send the following header with your request:\n"
    },
    {
        "id": "ART-1173",
        "dataset_source": "devrev-dev0",
        "title": "Rate Limits \u2013 DevRev | Docs",
        "content": "To ensure a consistent experience for all users, DevRev applies rate limits to its APIs. This helps prevent unintentionally proactive clients from impacting others\u2019 accessibility.\nRate limits are applied in aggregate to all requests made by an authenticated user. If a user exceeds their rate limit, they\u2019re throttled from further processing until their rate limit window elapses. At present, this window resets every five minutes.\nIf a request is made when the user\u2019s rate limit has been exceeded, the following response is received:\n\nThe Retry-After response header can be used to determine the number of seconds left before the user\u2019s rate limit window expires.\nAll APIs have the same weight when applying rate limiting, and there is no preference given to any individual API. However, this is subject to change in the future."
    },
    {
        "id": "ART-1174",
        "dataset_source": "devrev-dev0",
        "title": "Errors \u2013 DevRev | Docs",
        "content": "DevRev\u2019s APIs use standard HTTP status codes when responding to requests. On success, a 20X status code is returned along with any response data, as indicated in the OpenAPI specification.\nStatus CodeStatusDescription200OKThe request succeeded and the result is contained in the response.201CreatedThe request successfully created an object and the result is contained in the response.204No ContentThe request succeeded and contains no response data. This is common for object deletions.\nA request may encounter a set of errors that are common across all the APIs. In the response, a JSON object with a message field is provided that contains supplemental information to the encountered error.\n\nStatus CodeStatusDescription400Bad RequestThe request was malformed or contained invalid arguments.401UnauthorizedThe user attempted to access an endpoint that requires authentication and no credentials were provided or their validation failed.403ForbiddenThe user isn\u2019t authorized to perform the requested action.404Not FoundThe requested endpoint doesn\u2019t exist.429Too Many RequestsThe user is currently throttled due to exceeding their permitted rate limit. The Retry-After response header contains the number of seconds before the user should retry.500Internal Server ErrorAn internal error was encountered in the handling of the request which couldn\u2019t be processed to completion. DevRev is automatically alerted to any occurrence of this error. The user should retry after a short delay and contact DevRev support if the problem persists.503Service UnavailableA transient error was encountered and the user should retry after a short delay.\nAn endpoint may be annotated with additional status codes in the OpenAPI specification to denote special behavior.\nStatus CodeStatusDescription301Moved PermanentlyThe target resource\u2019s ID has changed, where the Location response header contains the updated ID.404Not FoundThe target object or requested resource doesn\u2019t exist.409ConflictThe attempted object creation conflicted with an existing object, for example, a group with the same name already exists."
    },
    {
        "id": "ART-1175",
        "dataset_source": "devrev-dev0",
        "title": "Getting started \u2013 DevRev | Docs",
        "content": "The DevRev API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes and authentication.\nIf you\u2019re new to DevRev APIs, you\u2019ve come to the right place. Our APIs serve as the foundation for integrating your apps, building automations, and creating custom\u00a0snap-ins.\nYou can also refer to our Postman collection.\n\n\nIn this tutorial, you will be able to retrive your account information by using the dev-users API. Let\u2019s get started\u00a0with DevRev APIs.\nPrerequisites\nFirst, create a DevRev account or log in.\nEvery call to a DevRev API must include a PAT. After you create your account, generate a personal access token and store it in a safe place.\nIn this guide, you\u2019ll make a call to the dev-users.self API which gets the authenticated user\u2019s information. You will retrieve the user object created for your account on DevRev. This user object contains information such as a unique identifier, full name, display name, and profile picture.\nEvery object in DevRev is uniquely identified by an id known as DevRev Object Notation (DON). DON id can be found in the API response.\nThe value SELF can be passed in as id to reference the logged-in user.\nThe display-id shown in the UI for work item objects such as issues and tickets can be used interchangeably with the id to enhance usability. In the image below, ISS-69 serves as an example of a display-id for issues.\n\nNext, you\u2019ll want to set up your development environment to connect and interact with the DevRev API.\nSend your first API request\nTo do this, make a GET request to the DevRev server (\u201chttps://api.devrev.ai/dev-users.self\u201d) and include the PAT created in the authorization header of the request.\nThis guide shows you how to get user information with a GET request using two popular languages as well as cURL:\nMaking a GET request\n$curl --location --request GET 'https://api.devrev.ai/dev-users.self' \\>--header 'Authorization: <PAT>'\nIf everything works, the command line displays the following response for a user named \u201cJohn Smith Doe\u201d:\n1{2    \"dev_user\": {3        \"display_handle\": \"John Doe\",4        \"created_date\": \"2022-01-28T10:45:53.698Z\",5        \"modified_date\": \"2022-01-28T10:45:53.698Z\",6        \"profile_picture\": \"<logo-url-here>\",7        \"auth0_user_ids\": [8            \"auth0|abcd1234eca43c006913f97d\"9        ],10        \"id\": \"don:identity:dvrv-us-1:devo/20:devu/40\",11        \"display_id\": \"DEVU-40\",12        \"state\": \"active\",13        \"full_name\": \"John Smith Doe\",14        \"email\": \"JohnDoe@devrev.ai\"15    }16}\nThe response contains \"id\": \"don:identity:dvrv-us-1:devo/20:devu/40\",. The id identifies the devo ID (Dev organization ID) as devo/<devo-id> and the devu ID (Dev user ID) as devu/<devu-id>.\nIn the present response, devo/<devo-id> is 20, and devu/<devu-id> is 40, respectively.\nIn general, you can find devo, devu, revo, revu IDs in the id or external_ref fields of the API response.\nFacing an error while authenticating the APIs? Refer to our errors guide to learn more about our error codes.\nNext steps\nYou\u2019re all set to explore our platform. You are ready to browse through our APIs and build your first integration with DevRev."
    },
    {
        "id": "ART-1176",
        "dataset_source": "devrev-dev0",
        "title": "Attachments \u2013 DevRev | Docs",
        "content": "artifacts endpoint\n\u2139\ufe0f An artifact is any attachment to an object inside DevRev. Artifacts include videos, log files, and user profile pictures."
    },
    {
        "id": "ART-1177",
        "dataset_source": "devrev-dev0",
        "title": "Get \u2013 DevRev | Docs",
        "content": "GET$curl -G https://api.devrev.ai/artifacts.get \\>     -H \"Authorization: <apiKey>\" \\>     -d id=ARTIFACT-12345Response1{2  \"artifact\": {3    \"id\": \"id\",4    \"created_date\": \"2023-01-01T12:00:00Z\",5    \"display_id\": \"display_id\",6    \"modified_date\": \"2023-01-01T12:00:00Z\"7  },8  \"version\": {9    \"timestamp\": \"2023-01-01T12:00:00Z\",10    \"version\": \"version\"11  }12}"
    },
    {
        "id": "ART-1178",
        "dataset_source": "devrev-dev0",
        "title": "Get Post \u2013 DevRev | Docs",
        "content": "POST$curl -X POST https://api.devrev.ai/artifacts.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"ARTIFACT-12345\">}'Response1{2  \"artifact\": {3    \"id\": \"id\",4    \"created_date\": \"2023-01-01T12:00:00Z\",5    \"display_id\": \"display_id\",6    \"modified_date\": \"2023-01-01T12:00:00Z\"7  },8  \"version\": {9    \"timestamp\": \"2023-01-01T12:00:00Z\",10    \"version\": \"version\"11  }12}"
    },
    {
        "id": "ART-1179",
        "dataset_source": "devrev-dev0",
        "title": "List \u2013 DevRev | Docs",
        "content": "Response1{2  \"artifacts\": [3    {4      \"id\": \"id\",5      \"created_date\": \"2023-01-01T12:00:00Z\",6      \"display_id\": \"display_id\",7      \"modified_date\": \"2023-01-01T12:00:00Z\"8    }9  ]10}"
    },
    {
        "id": "ART-1180",
        "dataset_source": "devrev-dev0",
        "title": "List Post \u2013 DevRev | Docs",
        "content": "POST$curl -X POST https://api.devrev.ai/artifacts.list \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'Response1{2  \"artifacts\": [3    {4      \"id\": \"id\",5      \"created_date\": \"2023-01-01T12:00:00Z\",6      \"display_id\": \"display_id\",7      \"modified_date\": \"2023-01-01T12:00:00Z\"8    }9  ]10}"
    },
    {
        "id": "ART-1181",
        "dataset_source": "devrev-dev0",
        "title": "Locate \u2013 DevRev | Docs",
        "content": "GET$curl -G https://api.devrev.ai/artifacts.locate \\>     -H \"Authorization: <apiKey>\" \\>     -d id=ARTIFACT-12345Response1{2  \"url\": \"url\",3  \"expires_at\": \"2023-01-01T12:00:00Z\"4}"
    },
    {
        "id": "ART-1182",
        "dataset_source": "devrev-dev0",
        "title": "Locate Post \u2013 DevRev | Docs",
        "content": "POST$curl -X POST https://api.devrev.ai/artifacts.locate \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"ARTIFACT-12345\">}'Response1{2  \"url\": \"url\",3  \"expires_at\": \"2023-01-01T12:00:00Z\"4}"
    },
    {
        "id": "ART-1183",
        "dataset_source": "devrev-dev0",
        "title": "Prepare \u2013 DevRev | Docs",
        "content": "POST$curl -X POST https://api.devrev.ai/artifacts.prepare \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"file_name\": \"file_name\">}'Response1{2  \"form_data\": [3    {4      \"key\": \"key\",5      \"value\": \"value\"6    }7  ],8  \"id\": \"ARTIFACT-12345\",9  \"url\": \"url\"10}"
    },
    {
        "id": "ART-1184",
        "dataset_source": "devrev-dev0",
        "title": "Identity provider \u2013 DevRev | Docs",
        "content": "auth-connection endpoint\n\u2139\ufe0f An authentication connection enables users to log in to DevRev through an external identity provider such as Azure AD, Google Workspace, Jump Cloud, or Okta.\n\ud83d\udccc For more information for about authentication connections, refer to External identity provider setup."
    },
    {
        "id": "ART-1185",
        "dataset_source": "devrev-dev0",
        "title": "Dev Org Auth Connections Create \u2013 DevRev",
        "content": "Creates a new enterprise authentication connection for a Dev\norganization. This authentication connection will not be enabled by\ndefault for the organization and the user will need to explicitly\nenable this. Keep in mind that at a time, only one authentication\nconnection can be enabled for a Dev organization. At present, only 5\nenterprise connections can be created by an organization."
    },
    {
        "id": "ART-1186",
        "dataset_source": "devrev-dev0",
        "title": "Dev Org Auth Connections Delete \u2013 DevRev",
        "content": "Deletes an authentication connection. Only enterprise connections which\nare explicitly set up for a Dev organization can be deleted. Default\nconnections can not be deleted using this method.RequestThis endpoint expects an object.idstringRequiredID of the authentication connection to be deleted.POST$curl -X POST https://api.devrev.ai/dev-orgs.auth-connections.delete \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"id\">}'"
    },
    {
        "id": "ART-1187",
        "dataset_source": "devrev-dev0",
        "title": "Dev Org Auth Connections Get \u2013 DevRev",
        "content": "GET$curl -G https://api.devrev.ai/dev-orgs.auth-connections.get \\>     -H \"Authorization: <apiKey>\" \\>     -d id=stringResponse1{2  \"auth_connection\": {3    \"type\": \"google_apps\",4    \"id\": \"string\",5    \"client_id\": \"string\",6    \"client_secret\": \"string\",7    \"display_name\": \"string\",8    \"enabled\": true,9    \"tenant_domain\": \"string\"10  }11}"
    },
    {
        "id": "ART-1188",
        "dataset_source": "devrev-dev0",
        "title": "Dev Org Auth Connections Get Post \u2013 DevRev",
        "content": "POST$curl -X POST https://api.devrev.ai/dev-orgs.auth-connections.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"string\">}'Response1{2  \"auth_connection\": {3    \"type\": \"google_apps\",4    \"id\": \"string\",5    \"client_id\": \"string\",6    \"client_secret\": \"string\",7    \"display_name\": \"string\",8    \"enabled\": true,9    \"tenant_domain\": \"string\"10  }11}"
    },
    {
        "id": "ART-1189",
        "dataset_source": "devrev-dev0",
        "title": "Dev Org Auth Connections List \u2013 DevRev",
        "content": "Lists all the authentication connections available for a Dev\norganization. This list will include both social and enterprise\nconnections which are either available by default or are explicitly\ncreated by the user.ResponseThis endpoint returns an objectauth_connectionslist of unionsList of all the authentication connections currently configured for\na Dev organization.GET$curl https://api.devrev.ai/dev-orgs.auth-connections.list \\>     -H \"Authorization: <apiKey>\"Response1{2  \"auth_connections\": []3}"
    },
    {
        "id": "ART-1190",
        "dataset_source": "devrev-dev0",
        "title": "Dev Org Auth Connections List Post \u2013 DevRev",
        "content": "Lists all the authentication connections available for a Dev\norganization. This list will include both social and enterprise\nconnections which are either available by default or are explicitly\ncreated by the user.RequestThis endpoint expects a map from strings to any.ResponseThis endpoint returns an objectList of all the authentication connections currently configured for\na Dev organization.$curl -X POST https://api.devrev.ai/dev-orgs.auth-connections.list \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'1{2  \"auth_connections\": []3}"
    },
    {
        "id": "ART-1191",
        "dataset_source": "devrev-dev0",
        "title": "Dev Org Auth Connections Toggle \u2013 DevRev",
        "content": "Enable or disable an authentication connection for a Dev organization.\nCurrently, only 1 authentication connection can be enabled at a time.\nWhen a new authentication connection is enabled, the connection which\nis currently enabled for the Dev organization is automatically\ndisabled.RequestThis endpoint expects an object.ID of the authentication connection to be toggled. Allowed values: disableenable$curl -X POST https://api.devrev.ai/dev-orgs.auth-connections.toggle \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"id\">}'"
    },
    {
        "id": "ART-1192",
        "dataset_source": "devrev-dev0",
        "title": "Dev Org Auth Connections Update \u2013 DevRev",
        "content": "POST$curl -X POST https://api.devrev.ai/dev-orgs.auth-connections.update \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"type\": \"google_apps\",>  \"id\": \"string\">}'Response1{2  \"auth_connection\": {3    \"type\": \"google_apps\",4    \"id\": \"string\",5    \"client_id\": \"string\",6    \"client_secret\": \"string\",7    \"display_name\": \"string\",8    \"enabled\": true,9    \"tenant_domain\": \"string\"10  }11}"
    },
    {
        "id": "ART-1193",
        "dataset_source": "devrev-dev0",
        "title": "Security tokens \u2013 DevRev | Docs",
        "content": "auth-tokens endpoint\n\u2139\ufe0f Security tokens are required for accessing DevRev. There are four types of security tokens:\n\nApplication Access Token (AAT): Uniquely identifies an application belonging to a dev org.\nSystem User Token (SUT): Uniquely identifies a system user belonging to a dev org.\nPersonal Access Token (PAT): Uniquely identifies a dev user.\nSession Token: Obtained by an application to access DevRev APIs on behalf of a customer (or customer).\n\n\ud83d\udccc For more information about security tokens, refer to Authentication."
    },
    {
        "id": "ART-1194",
        "dataset_source": "devrev-dev0",
        "title": "Create \u2013 DevRev | Docs",
        "content": "POST$curl -X POST https://api.devrev.ai/auth-tokens.create \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'Response1{2  \"access_token\": \"access_token\",3  \"expires_in\": 1,4  \"token_type\": \"bearer\",5  \"client_id\": \"client_id\",6  \"refresh_token\": \"refresh_token\",7  \"scope\": \"scope\"8}"
    },
    {
        "id": "ART-1195",
        "dataset_source": "devrev-dev0",
        "title": "Delete \u2013 DevRev | Docs",
        "content": "Revokes the token that matches the given token ID issued under the\ngiven Dev organization.RequestThis endpoint expects an object.token_idstringOptionalThe unique identifier for the token under a given Dev organization.\nIf no token ID is provided, then the token ID will be set from the\nJTI claim of the token in the authorization header.\nPOST$curl -X POST https://api.devrev.ai/auth-tokens.delete \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'"
    },
    {
        "id": "ART-1196",
        "dataset_source": "devrev-dev0",
        "title": "Get \u2013 DevRev | Docs (0)",
        "content": "$curl -G https://api.devrev.ai/auth-tokens.get \\>     -H \"Authorization: <apiKey>\" \\>     -d token_id=token_id1{2  \"token\": {3    \"id\": \"id\",4    \"client_id\": \"client_id\",5    \"created_date\": \"2023-01-01T12:00:00Z\",6    \"display_id\": \"display_id\",7    \"expires_at\": \"2023-01-01T12:00:00Z\",8    \"issued_at\": \"2023-01-01T12:00:00Z\",9    \"modified_date\": \"2023-01-01T12:00:00Z\",10    \"requested_token_type\": \"urn:devrev:params:oauth:token-type:aat\",11    \"scopes\": [12      \"scopes\"13    ],14    \"status\": \"active\",15    \"subject\": \"subject\",16    \"token_hint\": \"token_hint\"17  }18}"
    },
    {
        "id": "ART-1197",
        "dataset_source": "devrev-dev0",
        "title": "Get Post \u2013 DevRev | Docs (0)",
        "content": "$curl -X POST https://api.devrev.ai/auth-tokens.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"token_id\": \"token_id\">}'1{2  \"token\": {3    \"id\": \"id\",4    \"client_id\": \"client_id\",5    \"created_date\": \"2023-01-01T12:00:00Z\",6    \"display_id\": \"display_id\",7    \"expires_at\": \"2023-01-01T12:00:00Z\",8    \"issued_at\": \"2023-01-01T12:00:00Z\",9    \"modified_date\": \"2023-01-01T12:00:00Z\",10    \"requested_token_type\": \"urn:devrev:params:oauth:token-type:aat\",11    \"scopes\": [12      \"scopes\"13    ],14    \"status\": \"active\",15    \"subject\": \"subject\",16    \"token_hint\": \"token_hint\"17  }18}"
    },
    {
        "id": "ART-1198",
        "dataset_source": "devrev-dev0",
        "title": "List \u2013 DevRev | Docs (0)",
        "content": "$curl https://api.devrev.ai/auth-tokens.list \\>     -H \"Authorization: <apiKey>\"1{2  \"tokens\": [3    {4      \"id\": \"id\",5      \"client_id\": \"client_id\",6      \"created_date\": \"2023-01-01T12:00:00Z\",7      \"display_id\": \"display_id\",8      \"expires_at\": \"2023-01-01T12:00:00Z\",9      \"issued_at\": \"2023-01-01T12:00:00Z\",10      \"modified_date\": \"2023-01-01T12:00:00Z\",11      \"requested_token_type\": \"urn:devrev:params:oauth:token-type:aat\",12      \"scopes\": [13        \"scopes\"14      ],15      \"status\": \"active\",16      \"subject\": \"subject\",17      \"token_hint\": \"token_hint\"18    }19  ]20}"
    },
    {
        "id": "ART-1199",
        "dataset_source": "devrev-dev0",
        "title": "List Post \u2013 DevRev | Docs (0)",
        "content": "$curl -X POST https://api.devrev.ai/auth-tokens.list \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'1{2  \"tokens\": [3    {4      \"id\": \"id\",5      \"client_id\": \"client_id\",6      \"created_date\": \"2023-01-01T12:00:00Z\",7      \"display_id\": \"display_id\",8      \"expires_at\": \"2023-01-01T12:00:00Z\",9      \"issued_at\": \"2023-01-01T12:00:00Z\",10      \"modified_date\": \"2023-01-01T12:00:00Z\",11      \"requested_token_type\": \"urn:devrev:params:oauth:token-type:aat\",12      \"scopes\": [13        \"scopes\"14      ],15      \"status\": \"active\",16      \"subject\": \"subject\",17      \"token_hint\": \"token_hint\"18    }19  ]20}"
    },
    {
        "id": "ART-1200",
        "dataset_source": "devrev-dev0",
        "title": "Self Delete \u2013 DevRev | Docs",
        "content": "Revokes all the tokens that matches the given token type created by the\nauthenticated user.RequestThis endpoint expects an object.requested_token_typeenumOptionalThe type of the requested token.POST$curl -X POST https://api.devrev.ai/auth-tokens.self.delete \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'"
    },
    {
        "id": "ART-1201",
        "dataset_source": "devrev-dev0",
        "title": "Update \u2013 DevRev | Docs",
        "content": "$curl -X POST https://api.devrev.ai/auth-tokens.update \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"token_hint\": \"token_hint\",>  \"token_id\": \"token_id\">}'1{2  \"token\": {3    \"id\": \"id\",4    \"client_id\": \"client_id\",5    \"created_date\": \"2023-01-01T12:00:00Z\",6    \"display_id\": \"display_id\",7    \"expires_at\": \"2023-01-01T12:00:00Z\",8    \"issued_at\": \"2023-01-01T12:00:00Z\",9    \"modified_date\": \"2023-01-01T12:00:00Z\",10    \"requested_token_type\": \"urn:devrev:params:oauth:token-type:aat\",11    \"scopes\": [12      \"scopes\"13    ],14    \"status\": \"active\",15    \"subject\": \"subject\",16    \"token_hint\": \"token_hint\"17  }18}"
    },
    {
        "id": "ART-1202",
        "dataset_source": "devrev-dev0",
        "title": "Product builders and service providers \u2013 DevRev",
        "content": "dev-users endpoint\n\u2139\ufe0f Dev users belong to the organization that develops, builds, or provides products or services to customers."
    },
    {
        "id": "ART-1203",
        "dataset_source": "devrev-dev0",
        "title": "Get \u2013 DevRev | Docs (1)",
        "content": "GET$curl -G https://api.devrev.ai/dev-users.get \\>     -H \"Authorization: <apiKey>\" \\>     -d id=idResponse1{2  \"dev_user\": {3    \"id\": \"id\",4    \"created_date\": \"2023-01-01T12:00:00Z\",5    \"display_id\": \"display_id\",6    \"display_name\": \"display_name\",7    \"display_picture\": {8      \"id\": \"id\",9      \"display_id\": \"display_id\"10    },11    \"email\": \"email\",12    \"external_identities\": [13      {}14    ],15    \"full_name\": \"full_name\",16    \"modified_date\": \"2023-01-01T12:00:00Z\",17    \"phone_numbers\": [18      \"phone_numbers\"19    ],20    \"state\": \"active\"21  }22}"
    },
    {
        "id": "ART-1204",
        "dataset_source": "devrev-dev0",
        "title": "Get Post \u2013 DevRev | Docs (1)",
        "content": "$curl -X POST https://api.devrev.ai/dev-users.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"id\">}'1{2  \"dev_user\": {3    \"id\": \"id\",4    \"created_date\": \"2023-01-01T12:00:00Z\",5    \"display_id\": \"display_id\",6    \"display_name\": \"display_name\",7    \"display_picture\": {8      \"id\": \"id\",9      \"display_id\": \"display_id\"10    },11    \"email\": \"email\",12    \"external_identities\": [13      {}14    ],15    \"full_name\": \"full_name\",16    \"modified_date\": \"2023-01-01T12:00:00Z\",17    \"phone_numbers\": [18      \"phone_numbers\"19    ],20    \"state\": \"active\"21  }22}"
    },
    {
        "id": "ART-1205",
        "dataset_source": "devrev-dev0",
        "title": "List \u2013 DevRev | Docs (1)",
        "content": "$curl https://api.devrev.ai/dev-users.list \\>     -H \"Authorization: <apiKey>\"1{2  \"dev_users\": [3    {4      \"id\": \"id\",5      \"created_date\": \"2023-01-01T12:00:00Z\",6      \"display_id\": \"display_id\",7      \"display_name\": \"display_name\",8      \"display_picture\": {9        \"id\": \"id\"10      },11      \"email\": \"email\",12      \"external_identities\": [13        {}14      ],15      \"full_name\": \"full_name\",16      \"modified_date\": \"2023-01-01T12:00:00Z\",17      \"phone_numbers\": [18        \"phone_numbers\"19      ],20      \"state\": \"active\"21    }22  ],23  \"next_cursor\": \"next_cursor\",24  \"prev_cursor\": \"prev_cursor\"25}"
    },
    {
        "id": "ART-1206",
        "dataset_source": "devrev-dev0",
        "title": "List Post \u2013 DevRev | Docs (1)",
        "content": "$curl -X POST https://api.devrev.ai/dev-users.list \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'1{2  \"dev_users\": [3    {4      \"id\": \"id\",5      \"created_date\": \"2023-01-01T12:00:00Z\",6      \"display_id\": \"display_id\",7      \"display_name\": \"display_name\",8      \"display_picture\": {9        \"id\": \"id\"10      },11      \"email\": \"email\",12      \"external_identities\": [13        {}14      ],15      \"full_name\": \"full_name\",16      \"modified_date\": \"2023-01-01T12:00:00Z\",17      \"phone_numbers\": [18        \"phone_numbers\"19      ],20      \"state\": \"active\"21    }22  ],23  \"next_cursor\": \"next_cursor\",24  \"prev_cursor\": \"prev_cursor\"25}"
    },
    {
        "id": "ART-1207",
        "dataset_source": "devrev-dev0",
        "title": "Self \u2013 DevRev | Docs",
        "content": "GET$curl https://api.devrev.ai/dev-users.self \\>     -H \"Authorization: <apiKey>\"Response1{2  \"dev_user\": {3    \"id\": \"id\",4    \"created_date\": \"2023-01-01T12:00:00Z\",5    \"display_id\": \"display_id\",6    \"display_name\": \"display_name\",7    \"display_picture\": {8      \"id\": \"id\",9      \"display_id\": \"display_id\"10    },11    \"email\": \"email\",12    \"external_identities\": [13      {}14    ],15    \"full_name\": \"full_name\",16    \"modified_date\": \"2023-01-01T12:00:00Z\",17    \"phone_numbers\": [18      \"phone_numbers\"19    ],20    \"state\": \"active\"21  }22}"
    },
    {
        "id": "ART-1208",
        "dataset_source": "devrev-dev0",
        "title": "Self Post \u2013 DevRev | Docs",
        "content": "$curl -X POST https://api.devrev.ai/dev-users.self \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'1{2  \"dev_user\": {3    \"id\": \"id\",4    \"created_date\": \"2023-01-01T12:00:00Z\",5    \"display_id\": \"display_id\",6    \"display_name\": \"display_name\",7    \"display_picture\": {8      \"id\": \"id\",9      \"display_id\": \"display_id\"10    },11    \"email\": \"email\",12    \"external_identities\": [13      {}14    ],15    \"full_name\": \"full_name\",16    \"modified_date\": \"2023-01-01T12:00:00Z\",17    \"phone_numbers\": [18      \"phone_numbers\"19    ],20    \"state\": \"active\"21  }22}"
    },
    {
        "id": "ART-1209",
        "dataset_source": "devrev-dev0",
        "title": "Product components \u2013 DevRev | Docs",
        "content": "parts endpoint\n\u2139\ufe0f A part is a component of a product, and they can be made of other parts. Parts are the core objects that almost all other objects are linked to.\n\ud83d\udccc For more information about parts, refer to Parts & trails."
    },
    {
        "id": "ART-1210",
        "dataset_source": "devrev-dev0",
        "title": "Workspaces \u2013 DevRev | Docs",
        "content": "rev-orgs endpoint\n\u2139\ufe0f Workspaces (or rev orgs) are the organizations that your customers belong to. A workspace offers more granularity than accounts to define the instances of your product. Users can be mapped to track usage per workspace.\n\ud83d\udccc For more information about workspaces, refer to Customers."
    },
    {
        "id": "ART-1211",
        "dataset_source": "devrev-dev0",
        "title": "Create \u2013 DevRev | Docs (1)",
        "content": "POST$curl -X POST https://api.devrev.ai/rev-orgs.create \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"display_name\": \"display_name\">}'Response1{2  \"rev_org\": {3    \"id\": \"id\",4    \"created_date\": \"2023-01-01T12:00:00Z\",5    \"description\": \"description\",6    \"display_id\": \"display_id\",7    \"display_name\": \"display_name\",8    \"domain\": \"companyname.com\",9    \"external_ref\": \"external_ref\",10    \"modified_date\": \"2023-01-01T12:00:00Z\"11  }12}"
    },
    {
        "id": "ART-1212",
        "dataset_source": "devrev-dev0",
        "title": "Delete \u2013 DevRev | Docs (1)",
        "content": "Deletes the Rev organization.RequestThis endpoint expects an object.idstringRequiredThe ID of Rev organization to delete.ResponseThis endpoint returns a map from strings to anyPOST$curl -X POST https://api.devrev.ai/rev-orgs.delete \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"REV-AbCdEfGh\">}'Response1{2  \"string\": {3    \"key\": \"value\"4  }5}"
    },
    {
        "id": "ART-1213",
        "dataset_source": "devrev-dev0",
        "title": "Get \u2013 DevRev | Docs (3)",
        "content": "GET$curl -G https://api.devrev.ai/rev-orgs.get \\>     -H \"Authorization: <apiKey>\" \\>     -d account=ACC-12345 \\>     -d id=REV-AbCdEfGhResponse1{2  \"rev_org\": {3    \"id\": \"id\",4    \"created_date\": \"2023-01-01T12:00:00Z\",5    \"description\": \"description\",6    \"display_id\": \"display_id\",7    \"display_name\": \"display_name\",8    \"domain\": \"companyname.com\",9    \"external_ref\": \"external_ref\",10    \"modified_date\": \"2023-01-01T12:00:00Z\"11  }12}"
    },
    {
        "id": "ART-1214",
        "dataset_source": "devrev-dev0",
        "title": "Get Post \u2013 DevRev | Docs (3)",
        "content": "POST$curl -X POST https://api.devrev.ai/rev-orgs.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'Response1{2  \"rev_org\": {3    \"id\": \"id\",4    \"created_date\": \"2023-01-01T12:00:00Z\",5    \"description\": \"description\",6    \"display_id\": \"display_id\",7    \"display_name\": \"display_name\",8    \"domain\": \"companyname.com\",9    \"external_ref\": \"external_ref\",10    \"modified_date\": \"2023-01-01T12:00:00Z\"11  }12}"
    },
    {
        "id": "ART-1215",
        "dataset_source": "devrev-dev0",
        "title": "List \u2013 DevRev | Docs (3)",
        "content": "$curl -G https://api.devrev.ai/rev-orgs.list \\>     -H \"Authorization: <apiKey>\" \\>     --data-urlencode created_date.after=2023-01-01T12:00:00Z \\>     --data-urlencode created_date.before=2023-01-01T12:00:00Z \\>     --data-urlencode modified_date.after=2023-01-01T12:00:00Z \\>     --data-urlencode modified_date.before=2023-01-01T12:00:00Z1{2  \"rev_orgs\": [3    {4      \"id\": \"id\",5      \"created_date\": \"2023-01-01T12:00:00Z\",6      \"description\": \"description\",7      \"display_id\": \"display_id\",8      \"display_name\": \"display_name\",9      \"domain\": \"companyname.com\",10      \"external_ref\": \"external_ref\",11      \"modified_date\": \"2023-01-01T12:00:00Z\"12    }13  ],14  \"next_cursor\": \"next_cursor\",15  \"prev_cursor\": \"prev_cursor\"16}"
    },
    {
        "id": "ART-1216",
        "dataset_source": "devrev-dev0",
        "title": "List Post \u2013 DevRev | Docs (3)",
        "content": "POST$curl -X POST https://api.devrev.ai/rev-orgs.list \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'Response1{2  \"rev_orgs\": [3    {4      \"id\": \"id\",5      \"created_date\": \"2023-01-01T12:00:00Z\",6      \"description\": \"description\",7      \"display_id\": \"display_id\",8      \"display_name\": \"display_name\",9      \"domain\": \"companyname.com\",10      \"external_ref\": \"external_ref\",11      \"modified_date\": \"2023-01-01T12:00:00Z\"12    }13  ],14  \"next_cursor\": \"next_cursor\",15  \"prev_cursor\": \"prev_cursor\"16}"
    },
    {
        "id": "ART-1217",
        "dataset_source": "devrev-dev0",
        "title": "Update \u2013 DevRev | Docs (1)",
        "content": "POST$curl -X POST https://api.devrev.ai/rev-orgs.update \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"REV-AbCdEfGh\">}'Response1{2  \"rev_org\": {3    \"id\": \"id\",4    \"created_date\": \"2023-01-01T12:00:00Z\",5    \"description\": \"description\",6    \"display_id\": \"display_id\",7    \"display_name\": \"display_name\",8    \"domain\": \"companyname.com\",9    \"external_ref\": \"external_ref\",10    \"modified_date\": \"2023-01-01T12:00:00Z\"11  }12}"
    },
    {
        "id": "ART-1218",
        "dataset_source": "devrev-dev0",
        "title": "Concepts \u2013 DevRev | Docs",
        "content": "tags endpoint\n\u2139\ufe0f Tags are words that you can use as a label to give more context to tickets, issues, users, and every other object in DevRev. Tags create associations between objects and a logical concept. This concept is denoted by a tag\u2019s name and description. You can have filters on tags."
    },
    {
        "id": "ART-1219",
        "dataset_source": "devrev-dev0",
        "title": "Create \u2013 DevRev | Docs (2)",
        "content": "POST$curl -X POST https://api.devrev.ai/tags.create \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"name\": \"name\">}'Response1{2  \"tag\": {3    \"id\": \"id\",4    \"name\": \"name\",5    \"allowed_values\": [6      \"allowed_values\"7    ],8    \"created_date\": \"2023-01-01T12:00:00Z\",9    \"description\": \"description\",10    \"display_id\": \"display_id\",11    \"modified_date\": \"2023-01-01T12:00:00Z\"12  }13}"
    },
    {
        "id": "ART-1220",
        "dataset_source": "devrev-dev0",
        "title": "Delete \u2013 DevRev | Docs (2)",
        "content": "Deletes a tag.RequestThis endpoint expects an object.idstringRequiredThe ID of the tag to delete.ResponseThis endpoint returns a map from strings to anyPOST$curl -X POST https://api.devrev.ai/tags.delete \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"TAG-12345\">}'Response1{2  \"string\": {3    \"key\": \"value\"4  }5}"
    },
    {
        "id": "ART-1221",
        "dataset_source": "devrev-dev0",
        "title": "Get \u2013 DevRev | Docs (4)",
        "content": "GET$curl -G https://api.devrev.ai/tags.get \\>     -H \"Authorization: <apiKey>\" \\>     -d id=TAG-12345Response1{2  \"tag\": {3    \"id\": \"id\",4    \"name\": \"name\",5    \"allowed_values\": [6      \"allowed_values\"7    ],8    \"created_date\": \"2023-01-01T12:00:00Z\",9    \"description\": \"description\",10    \"display_id\": \"display_id\",11    \"modified_date\": \"2023-01-01T12:00:00Z\"12  }13}"
    },
    {
        "id": "ART-1222",
        "dataset_source": "devrev-dev0",
        "title": "Get Post \u2013 DevRev | Docs (4)",
        "content": "POST$curl -X POST https://api.devrev.ai/tags.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"TAG-12345\">}'Response1{2  \"tag\": {3    \"id\": \"id\",4    \"name\": \"name\",5    \"allowed_values\": [6      \"allowed_values\"7    ],8    \"created_date\": \"2023-01-01T12:00:00Z\",9    \"description\": \"description\",10    \"display_id\": \"display_id\",11    \"modified_date\": \"2023-01-01T12:00:00Z\"12  }13}"
    },
    {
        "id": "ART-1223",
        "dataset_source": "devrev-dev0",
        "title": "List \u2013 DevRev | Docs (4)",
        "content": "GET$curl https://api.devrev.ai/tags.list \\>     -H \"Authorization: <apiKey>\"Response1{2  \"tags\": [3    {4      \"id\": \"id\",5      \"name\": \"name\",6      \"allowed_values\": [7        \"allowed_values\"8      ],9      \"created_date\": \"2023-01-01T12:00:00Z\",10      \"description\": \"description\",11      \"display_id\": \"display_id\",12      \"modified_date\": \"2023-01-01T12:00:00Z\"13    }14  ],15  \"next_cursor\": \"next_cursor\",16  \"prev_cursor\": \"prev_cursor\"17}"
    },
    {
        "id": "ART-1224",
        "dataset_source": "devrev-dev0",
        "title": "List Post \u2013 DevRev | Docs (4)",
        "content": "POST$curl -X POST https://api.devrev.ai/tags.list \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'Response1{2  \"tags\": [3    {4      \"id\": \"id\",5      \"name\": \"name\",6      \"allowed_values\": [7        \"allowed_values\"8      ],9      \"created_date\": \"2023-01-01T12:00:00Z\",10      \"description\": \"description\",11      \"display_id\": \"display_id\",12      \"modified_date\": \"2023-01-01T12:00:00Z\"13    }14  ],15  \"next_cursor\": \"next_cursor\",16  \"prev_cursor\": \"prev_cursor\"17}"
    },
    {
        "id": "ART-1225",
        "dataset_source": "devrev-dev0",
        "title": "Update \u2013 DevRev | Docs (2)",
        "content": "POST$curl -X POST https://api.devrev.ai/tags.update \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"TAG-12345\">}'Response1{2  \"tag\": {3    \"id\": \"id\",4    \"name\": \"name\",5    \"allowed_values\": [6      \"allowed_values\"7    ],8    \"created_date\": \"2023-01-01T12:00:00Z\",9    \"description\": \"description\",10    \"display_id\": \"display_id\",11    \"modified_date\": \"2023-01-01T12:00:00Z\"12  }13}"
    },
    {
        "id": "ART-1226",
        "dataset_source": "devrev-dev0",
        "title": "Discussions and events \u2013 DevRev",
        "content": "timeline endpoint\n\u2139\ufe0f Work items DevRev objects have a timeline that contains discussions and events. Discussions are comments added by a person or a bot, while events indicate a change of the object\u2019s state."
    },
    {
        "id": "ART-1227",
        "dataset_source": "devrev-dev0",
        "title": "Create \u2013 DevRev | Docs (3)",
        "content": "$curl -X POST https://api.devrev.ai/timeline-entries.create \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"type\": \"timeline_comment\",>  \"object\": \"string\">}'1{2  \"timeline_entry\": {3    \"type\": \"timeline_comment\",4    \"id\": \"string\",5    \"object\": \"string\",6    \"object_display_id\": \"string\",7    \"artifacts\": [8      {9        \"id\": \"string\",10        \"display_id\": \"string\"11      }12    ],13    \"body\": \"string\",14    \"body_type\": \"snap_kit\",15    \"created_by\": {16      \"type\": \"dev_user\",17      \"id\": \"string\",18      \"display_id\": \"string\",19      \"display_name\": \"string\",20      \"display_picture\": {21        \"id\": \"string\",22        \"display_id\": \"string\"23      },24      \"email\": \"string\",25      \"full_name\": \"string\",26      \"state\": \"active\"27    },28    \"created_date\": \"2023-01-01T00:00:00Z\",29    \"display_id\": \"string\",30    \"modified_by\": {31      \"type\": \"dev_user\",32      \"id\": \"string\",33      \"display_id\": \"string\",34      \"display_name\": \"string\",35      \"display_picture\": {36        \"id\": \"string\",37        \"display_id\": \"string\"38      },39      \"email\": \"string\",40      \"full_name\": \"string\",41      \"state\": \"active\"42    },43    \"modified_date\": \"2023-01-01T00:00:00Z\",44    \"object_type\": \"capability\",45    \"snap_kit_body\": {46      \"body\": {47        \"string\": {}48      },49      \"snap_in_action_name\": \"string\",50      \"snap_in_id\": \"string\"51    },52    \"snap_widget_body\": [53      {54        \"type\": \"string\"55      }56    ],57    \"visibility\": \"external\"58  }59}"
    },
    {
        "id": "ART-1228",
        "dataset_source": "devrev-dev0",
        "title": "Delete \u2013 DevRev | Docs (3)",
        "content": "Deletes an entry from an object's timeline.RequestThis endpoint expects an object.idstringRequiredThe ID of the timeline entry to delete.ResponseThis endpoint returns a map from strings to anyPOST$curl -X POST https://api.devrev.ai/timeline-entries.delete \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"don:core:<partition>:devo/<dev-org-id>:ticket/123:timeline_event/<timeline-event-id>\">}'Response1{2  \"string\": {3    \"key\": \"value\"4  }5}"
    },
    {
        "id": "ART-1229",
        "dataset_source": "devrev-dev0",
        "title": "Get \u2013 DevRev | Docs (5)",
        "content": "$curl -G https://api.devrev.ai/timeline-entries.get \\>     -H \"Authorization: <apiKey>\" \\>     -d id=string1{2  \"timeline_entry\": {3    \"type\": \"timeline_comment\",4    \"id\": \"string\",5    \"object\": \"string\",6    \"object_display_id\": \"string\",7    \"artifacts\": [8      {9        \"id\": \"string\",10        \"display_id\": \"string\"11      }12    ],13    \"body\": \"string\",14    \"body_type\": \"snap_kit\",15    \"created_by\": {16      \"type\": \"dev_user\",17      \"id\": \"string\",18      \"display_id\": \"string\",19      \"display_name\": \"string\",20      \"display_picture\": {21        \"id\": \"string\",22        \"display_id\": \"string\"23      },24      \"email\": \"string\",25      \"full_name\": \"string\",26      \"state\": \"active\"27    },28    \"created_date\": \"2023-01-01T00:00:00Z\",29    \"display_id\": \"string\",30    \"modified_by\": {31      \"type\": \"dev_user\",32      \"id\": \"string\",33      \"display_id\": \"string\",34      \"display_name\": \"string\",35      \"display_picture\": {36        \"id\": \"string\",37        \"display_id\": \"string\"38      },39      \"email\": \"string\",40      \"full_name\": \"string\",41      \"state\": \"active\"42    },43    \"modified_date\": \"2023-01-01T00:00:00Z\",44    \"object_type\": \"capability\",45    \"snap_kit_body\": {46      \"body\": {47        \"string\": {}48      },49      \"snap_in_action_name\": \"string\",50      \"snap_in_id\": \"string\"51    },52    \"snap_widget_body\": [53      {54        \"type\": \"string\"55      }56    ],57    \"visibility\": \"external\"58  }59}"
    },
    {
        "id": "ART-1230",
        "dataset_source": "devrev-dev0",
        "title": "Get Post \u2013 DevRev | Docs (5)",
        "content": "$curl -X POST https://api.devrev.ai/timeline-entries.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"string\">}'1{2  \"timeline_entry\": {3    \"type\": \"timeline_comment\",4    \"id\": \"string\",5    \"object\": \"string\",6    \"object_display_id\": \"string\",7    \"artifacts\": [8      {9        \"id\": \"string\",10        \"display_id\": \"string\"11      }12    ],13    \"body\": \"string\",14    \"body_type\": \"snap_kit\",15    \"created_by\": {16      \"type\": \"dev_user\",17      \"id\": \"string\",18      \"display_id\": \"string\",19      \"display_name\": \"string\",20      \"display_picture\": {21        \"id\": \"string\",22        \"display_id\": \"string\"23      },24      \"email\": \"string\",25      \"full_name\": \"string\",26      \"state\": \"active\"27    },28    \"created_date\": \"2023-01-01T00:00:00Z\",29    \"display_id\": \"string\",30    \"modified_by\": {31      \"type\": \"dev_user\",32      \"id\": \"string\",33      \"display_id\": \"string\",34      \"display_name\": \"string\",35      \"display_picture\": {36        \"id\": \"string\",37        \"display_id\": \"string\"38      },39      \"email\": \"string\",40      \"full_name\": \"string\",41      \"state\": \"active\"42    },43    \"modified_date\": \"2023-01-01T00:00:00Z\",44    \"object_type\": \"capability\",45    \"snap_kit_body\": {46      \"body\": {47        \"string\": {}48      },49      \"snap_in_action_name\": \"string\",50      \"snap_in_id\": \"string\"51    },52    \"snap_widget_body\": [53      {54        \"type\": \"string\"55      }56    ],57    \"visibility\": \"external\"58  }59}"
    },
    {
        "id": "ART-1231",
        "dataset_source": "devrev-dev0",
        "title": "List \u2013 DevRev | Docs (5)",
        "content": "GET$curl -G https://api.devrev.ai/timeline-entries.list \\>     -H \"Authorization: <apiKey>\" \\>     -d object=PROD-12345Response1{2  \"timeline_entries\": [],3  \"next_cursor\": \"next_cursor\",4  \"prev_cursor\": \"prev_cursor\"5}"
    },
    {
        "id": "ART-1232",
        "dataset_source": "devrev-dev0",
        "title": "List Post \u2013 DevRev | Docs (5)",
        "content": "POST$curl -X POST https://api.devrev.ai/timeline-entries.list \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"object\": \"PROD-12345\">}'Response1{2  \"timeline_entries\": [],3  \"next_cursor\": \"next_cursor\",4  \"prev_cursor\": \"prev_cursor\"5}"
    },
    {
        "id": "ART-1233",
        "dataset_source": "devrev-dev0",
        "title": "Update \u2013 DevRev | Docs (3)",
        "content": "$curl -X POST https://api.devrev.ai/timeline-entries.update \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"type\": \"timeline_comment\",>  \"id\": \"string\">}'1{2  \"timeline_entry\": {3    \"type\": \"timeline_comment\",4    \"id\": \"string\",5    \"object\": \"string\",6    \"object_display_id\": \"string\",7    \"artifacts\": [8      {9        \"id\": \"string\",10        \"display_id\": \"string\"11      }12    ],13    \"body\": \"string\",14    \"body_type\": \"snap_kit\",15    \"created_by\": {16      \"type\": \"dev_user\",17      \"id\": \"string\",18      \"display_id\": \"string\",19      \"display_name\": \"string\",20      \"display_picture\": {21        \"id\": \"string\",22        \"display_id\": \"string\"23      },24      \"email\": \"string\",25      \"full_name\": \"string\",26      \"state\": \"active\"27    },28    \"created_date\": \"2023-01-01T00:00:00Z\",29    \"display_id\": \"string\",30    \"modified_by\": {31      \"type\": \"dev_user\",32      \"id\": \"string\",33      \"display_id\": \"string\",34      \"display_name\": \"string\",35      \"display_picture\": {36        \"id\": \"string\",37        \"display_id\": \"string\"38      },39      \"email\": \"string\",40      \"full_name\": \"string\",41      \"state\": \"active\"42    },43    \"modified_date\": \"2023-01-01T00:00:00Z\",44    \"object_type\": \"capability\",45    \"snap_kit_body\": {46      \"body\": {47        \"string\": {}48      },49      \"snap_in_action_name\": \"string\",50      \"snap_in_id\": \"string\"51    },52    \"snap_widget_body\": [53      {54        \"type\": \"string\"55      }56    ],57    \"visibility\": \"external\"58  }59}"
    },
    {
        "id": "ART-1234",
        "dataset_source": "devrev-dev0",
        "title": "Event responses \u2013 DevRev | Docs",
        "content": "webhooks endpoint\n\u2139\ufe0f Webhooks enable building custom workflows in response to events on the DevRev platform. A webhook can be thought of as a \u2018reverse API\u2019 that\u2019s driven by events rather than requests. While APIs are used to pull data from the system, webhooks are a mechanism for the system to push data to a pre-configured endpoint. Webhooks allow you to receive notifications based on events without having to explicitly make a request.\n\ud83d\udccc For more information about webhooks, refer to Getting started with webhooks."
    },
    {
        "id": "ART-1235",
        "dataset_source": "devrev-dev0",
        "title": "Create \u2013 DevRev | Docs (4)",
        "content": "POST$curl -X POST https://api.devrev.ai/webhooks.create \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"url\": \"url\">}'Response1{2  \"webhook\": {3    \"id\": \"id\",4    \"secret\": \"secret\",5    \"status\": \"active\",6    \"url\": \"url\",7    \"created_date\": \"2023-01-01T12:00:00Z\",8    \"display_id\": \"display_id\",9    \"event_types\": [10      \"account_created\"11    ],12    \"modified_date\": \"2023-01-01T12:00:00Z\"13  }14}"
    },
    {
        "id": "ART-1236",
        "dataset_source": "devrev-dev0",
        "title": "Delete \u2013 DevRev | Docs (4)",
        "content": "Deletes the requested webhook.RequestThis endpoint expects an object.idstringRequiredID for the webhook.ResponseThis endpoint returns a map from strings to anyPOST$curl -X POST https://api.devrev.ai/webhooks.delete \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>\">}'Response1{2  \"string\": {3    \"key\": \"value\"4  }5}"
    },
    {
        "id": "ART-1237",
        "dataset_source": "devrev-dev0",
        "title": "Get \u2013 DevRev | Docs (6)",
        "content": "GET$curl -G https://api.devrev.ai/webhooks.get \\>     -H \"Authorization: <apiKey>\" \\>     --data-urlencode id=don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>Response1{2  \"webhook\": {3    \"id\": \"id\",4    \"secret\": \"secret\",5    \"status\": \"active\",6    \"url\": \"url\",7    \"created_date\": \"2023-01-01T12:00:00Z\",8    \"display_id\": \"display_id\",9    \"event_types\": [10      \"account_created\"11    ],12    \"modified_date\": \"2023-01-01T12:00:00Z\"13  }14}"
    },
    {
        "id": "ART-1238",
        "dataset_source": "devrev-dev0",
        "title": "Get Post \u2013 DevRev | Docs (6)",
        "content": "POST$curl -X POST https://api.devrev.ai/webhooks.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>\">}'Response1{2  \"webhook\": {3    \"id\": \"id\",4    \"secret\": \"secret\",5    \"status\": \"active\",6    \"url\": \"url\",7    \"created_date\": \"2023-01-01T12:00:00Z\",8    \"display_id\": \"display_id\",9    \"event_types\": [10      \"account_created\"11    ],12    \"modified_date\": \"2023-01-01T12:00:00Z\"13  }14}"
    },
    {
        "id": "ART-1239",
        "dataset_source": "devrev-dev0",
        "title": "List \u2013 DevRev | Docs (6)",
        "content": "GET$curl https://api.devrev.ai/webhooks.list \\>     -H \"Authorization: <apiKey>\"Response1{2  \"webhooks\": [3    {4      \"id\": \"id\",5      \"secret\": \"secret\",6      \"status\": \"active\",7      \"url\": \"url\",8      \"created_date\": \"2023-01-01T12:00:00Z\",9      \"display_id\": \"display_id\",10      \"event_types\": [11        \"account_created\"12      ],13      \"modified_date\": \"2023-01-01T12:00:00Z\"14    }15  ]16}"
    },
    {
        "id": "ART-1240",
        "dataset_source": "devrev-dev0",
        "title": "List Post \u2013 DevRev | Docs (6)",
        "content": "POST$curl -X POST https://api.devrev.ai/webhooks.list \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'Response1{2  \"webhooks\": [3    {4      \"id\": \"id\",5      \"secret\": \"secret\",6      \"status\": \"active\",7      \"url\": \"url\",8      \"created_date\": \"2023-01-01T12:00:00Z\",9      \"display_id\": \"display_id\",10      \"event_types\": [11        \"account_created\"12      ],13      \"modified_date\": \"2023-01-01T12:00:00Z\"14    }15  ]16}"
    },
    {
        "id": "ART-1241",
        "dataset_source": "devrev-dev0",
        "title": "Update \u2013 DevRev | Docs (4)",
        "content": "POST$curl -X POST https://api.devrev.ai/webhooks.update \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>\">}'Response1{2  \"webhook\": {3    \"id\": \"id\",4    \"secret\": \"secret\",5    \"status\": \"active\",6    \"url\": \"url\",7    \"created_date\": \"2023-01-01T12:00:00Z\",8    \"display_id\": \"display_id\",9    \"event_types\": [10      \"account_created\"11    ],12    \"modified_date\": \"2023-01-01T12:00:00Z\"13  }14}"
    },
    {
        "id": "ART-1242",
        "dataset_source": "devrev-dev0",
        "title": "Tickets and issues \u2013 DevRev",
        "content": "works endpoint\n\u2139\ufe0f A work item is a record of some work that has to be done for a customer (ticket) or for another builder or maintainer of a part (issue).\n\ud83d\udccc For more information about work items, refer to Tickets and Issues."
    },
    {
        "id": "ART-1243",
        "dataset_source": "devrev-dev0",
        "title": "Delete \u2013 DevRev | Docs (5)",
        "content": "Deletes a work item.RequestThis endpoint expects an object.idstringRequiredThe work's ID.ResponseThis endpoint returns a map from strings to anyPOST$curl -X POST https://api.devrev.ai/works.delete \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"ISS-12345\">}'Response1{2  \"string\": {3    \"key\": \"value\"4  }5}"
    },
    {
        "id": "ART-1244",
        "dataset_source": "devrev-dev0",
        "title": "Export \u2013 DevRev | Docs",
        "content": "Exports a collection of work items.Query parametersapplies_to_partstringOptionalFilters for work belonging to any of the provided parts.Filters for work created by any of these users.The number of work items to return. The default is '50', the maximum\nis '5000'.issue.accountsstringOptionalFilters for issues with any of the provided Accounts.issue.priorityenumOptionalFilters for issues with any of the provided priorities.issue.priority_v2integerOptionalFilters for issues with any of the provided priority enum ids.issue.rev_orgsstringOptionalFilters for issues with any of the provided Rev organizations.Filters for work owned by any of these users.reported_bystringOptionalFilters for work reported by any of these users.Filters for records in the provided stage(s) by name.staged_info.is_stagedbooleanOptionalFilters for issues that are staged.sync_metadata.last_sync_in.statusenumOptionalFilters for works with selected sync statuses. Allowed values: failedmodifiedstagedsucceededsync_metadata.last_sync_in.sync_unitstringOptionalFilters for works modified with selected sync units.sync_metadata.last_sync_out.statusenumOptionalFilters for works with selected sync statuses. Allowed values: failedsucceededsync_metadata.last_sync_out.sync_unitstringOptionalFilters for works modified with selected sync units.sync_metadata.origin_systemstringOptionalFilters for issues synced from this specific origin system.Filters for work with any of the provided tags.ticket.channelsenumOptionalFilters for tickets with any of the provided channels. Allowed values: emailplugslackticket.groupstringOptionalFilters for tickets belonging to specific groups.ticket.is_spambooleanOptionalFilters for tickets that are spam.ticket.needs_responsebooleanOptionalFilters for tickets that need response.ticket.rev_orgstringOptionalFilters for tickets that are associated with any of the provided Rev\norganizations.ticket.severityenumOptionalFilters for tickets with any of the provided severities. Allowed values: blockerhighlowmediumticket.sla_summary.stageenumOptionalFilters for records with any of the provided SLA stages. Allowed values: breachedcompletedpausedrunningwarningticket.source_channelstringOptionalFilters for tickets with any of the provided source channels.Filters for work of the provided types. Allowed values: issueticketResponseThis endpoint returns an objectThe resulting collection of work items.$curl https://api.devrev.ai/works.export \\>     -H \"Authorization: <apiKey>\""
    },
    {
        "id": "ART-1245",
        "dataset_source": "devrev-dev0",
        "title": "Export Post \u2013 DevRev | Docs",
        "content": "Exports a collection of work items.RequestThis endpoint expects an object.Provides ways to specify date ranges on objects.Filters for work belonging to any of the provided parts.Filters for work created by any of these users.Provides ways to specify date ranges on objects.The number of work items to return. The default is '50', the\nmaximum is '5000'.\nProvides ways to specify date ranges on objects.Filters for work owned by any of these users.Filters for work reported by any of these users.Filters for work with any of the provided tags.Provides ways to specify date ranges on objects.Filters for work of the provided types. Allowed values: issueticketResponseThis endpoint returns an objectThe resulting collection of work items.$curl -X POST https://api.devrev.ai/works.export \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'"
    },
    {
        "id": "ART-1246",
        "dataset_source": "devrev-dev0",
        "title": "Get \u2013 DevRev | Docs (7)",
        "content": "$curl -G https://api.devrev.ai/works.get \\>     -H \"Authorization: <apiKey>\" \\>     -d id=string1{2  \"work\": {3    \"type\": \"issue\",4    \"id\": \"string\",5    \"owned_by\": [6      {7        \"type\": \"dev_user\",8        \"id\": \"string\",9        \"display_id\": \"string\",10        \"display_name\": \"string\",11        \"display_picture\": {12          \"id\": \"string\",13          \"display_id\": \"string\"14        },15        \"email\": \"string\",16        \"full_name\": \"string\",17        \"state\": \"active\"18      }19    ],20    \"title\": \"string\",21    \"applies_to_part\": {22      \"type\": \"capability\",23      \"id\": \"string\",24      \"name\": \"string\",25      \"display_id\": \"string\"26    },27    \"artifacts\": [28      {29        \"id\": \"string\",30        \"display_id\": \"string\"31      }32    ],33    \"body\": \"string\",34    \"created_by\": {35      \"type\": \"dev_user\",36      \"id\": \"string\",37      \"display_id\": \"string\",38      \"display_name\": \"string\",39      \"display_picture\": {40        \"id\": \"string\",41        \"display_id\": \"string\"42      },43      \"email\": \"string\",44      \"full_name\": \"string\",45      \"state\": \"active\"46    },47    \"created_date\": \"2023-01-01T00:00:00Z\",48    \"developed_with\": [49      {50        \"type\": \"capability\",51        \"id\": \"string\",52        \"name\": \"string\",53        \"display_id\": \"string\"54      }55    ],56    \"display_id\": \"string\",57    \"modified_by\": {58      \"type\": \"dev_user\",59      \"id\": \"string\",60      \"display_id\": \"string\",61      \"display_name\": \"string\",62      \"display_picture\": {63        \"id\": \"string\",64        \"display_id\": \"string\"65      },66      \"email\": \"string\",67      \"full_name\": \"string\",68      \"state\": \"active\"69    },70    \"modified_date\": \"2023-01-01T00:00:00Z\",71    \"priority\": \"p0\",72    \"reported_by\": [73      {74        \"type\": \"dev_user\",75        \"id\": \"string\",76        \"display_id\": \"string\",77        \"display_name\": \"string\",78        \"display_picture\": {79          \"id\": \"string\",80          \"display_id\": \"string\"81        },82        \"email\": \"string\",83        \"full_name\": \"string\",84        \"state\": \"active\"85      }86    ],87    \"stage\": {88      \"name\": \"string\"89    },90    \"tags\": [91      {92        \"tag\": {93          \"id\": \"string\",94          \"name\": \"string\",95          \"display_id\": \"string\"96        },97        \"value\": \"string\"98      }99    ],100    \"target_close_date\": \"2023-01-01T00:00:00Z\",101    \"target_start_date\": \"2023-01-01T00:00:00Z\"102  }103}"
    },
    {
        "id": "ART-1247",
        "dataset_source": "devrev-dev0",
        "title": "Get Post \u2013 DevRev | Docs (7)",
        "content": "$curl -X POST https://api.devrev.ai/works.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"string\">}'1{2  \"work\": {3    \"type\": \"issue\",4    \"id\": \"string\",5    \"owned_by\": [6      {7        \"type\": \"dev_user\",8        \"id\": \"string\",9        \"display_id\": \"string\",10        \"display_name\": \"string\",11        \"display_picture\": {12          \"id\": \"string\",13          \"display_id\": \"string\"14        },15        \"email\": \"string\",16        \"full_name\": \"string\",17        \"state\": \"active\"18      }19    ],20    \"title\": \"string\",21    \"applies_to_part\": {22      \"type\": \"capability\",23      \"id\": \"string\",24      \"name\": \"string\",25      \"display_id\": \"string\"26    },27    \"artifacts\": [28      {29        \"id\": \"string\",30        \"display_id\": \"string\"31      }32    ],33    \"body\": \"string\",34    \"created_by\": {35      \"type\": \"dev_user\",36      \"id\": \"string\",37      \"display_id\": \"string\",38      \"display_name\": \"string\",39      \"display_picture\": {40        \"id\": \"string\",41        \"display_id\": \"string\"42      },43      \"email\": \"string\",44      \"full_name\": \"string\",45      \"state\": \"active\"46    },47    \"created_date\": \"2023-01-01T00:00:00Z\",48    \"developed_with\": [49      {50        \"type\": \"capability\",51        \"id\": \"string\",52        \"name\": \"string\",53        \"display_id\": \"string\"54      }55    ],56    \"display_id\": \"string\",57    \"modified_by\": {58      \"type\": \"dev_user\",59      \"id\": \"string\",60      \"display_id\": \"string\",61      \"display_name\": \"string\",62      \"display_picture\": {63        \"id\": \"string\",64        \"display_id\": \"string\"65      },66      \"email\": \"string\",67      \"full_name\": \"string\",68      \"state\": \"active\"69    },70    \"modified_date\": \"2023-01-01T00:00:00Z\",71    \"priority\": \"p0\",72    \"reported_by\": [73      {74        \"type\": \"dev_user\",75        \"id\": \"string\",76        \"display_id\": \"string\",77        \"display_name\": \"string\",78        \"display_picture\": {79          \"id\": \"string\",80          \"display_id\": \"string\"81        },82        \"email\": \"string\",83        \"full_name\": \"string\",84        \"state\": \"active\"85      }86    ],87    \"stage\": {88      \"name\": \"string\"89    },90    \"tags\": [91      {92        \"tag\": {93          \"id\": \"string\",94          \"name\": \"string\",95          \"display_id\": \"string\"96        },97        \"value\": \"string\"98      }99    ],100    \"target_close_date\": \"2023-01-01T00:00:00Z\",101    \"target_start_date\": \"2023-01-01T00:00:00Z\"102  }103}"
    },
    {
        "id": "ART-1248",
        "dataset_source": "devrev-dev0",
        "title": "List \u2013 DevRev | Docs (7)",
        "content": "Lists a collection of work items.Query parametersapplies_to_partstringOptionalFilters for work belonging to any of the provided parts.Filters for work created by any of these users.The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.issue.accountsstringOptionalFilters for issues with any of the provided Accounts.issue.priorityenumOptionalFilters for issues with any of the provided priorities.issue.priority_v2integerOptionalFilters for issues with any of the provided priority enum ids.issue.rev_orgsstringOptionalFilters for issues with any of the provided Rev organizations.The maximum number of works to return. The default is '50'.The iteration mode to use, otherwise if not set, then \"after\" is\nused. Allowed values: afterbeforeFilters for work owned by any of these users.reported_bystringOptionalFilters for work reported by any of these users.Filters for records in the provided stage(s) by name.staged_info.is_stagedbooleanOptionalFilters for issues that are staged.sync_metadata.last_sync_in.statusenumOptionalFilters for works with selected sync statuses. Allowed values: failedmodifiedstagedsucceededsync_metadata.last_sync_in.sync_unitstringOptionalFilters for works modified with selected sync units.sync_metadata.last_sync_out.statusenumOptionalFilters for works with selected sync statuses. Allowed values: failedsucceededsync_metadata.last_sync_out.sync_unitstringOptionalFilters for works modified with selected sync units.sync_metadata.origin_systemstringOptionalFilters for issues synced from this specific origin system.Filters for work with any of the provided tags.ticket.channelsenumOptionalFilters for tickets with any of the provided channels. Allowed values: emailplugslackticket.groupstringOptionalFilters for tickets belonging to specific groups.ticket.is_spambooleanOptionalFilters for tickets that are spam.ticket.needs_responsebooleanOptionalFilters for tickets that need response.ticket.rev_orgstringOptionalFilters for tickets that are associated with any of the provided Rev\norganizations.ticket.severityenumOptionalFilters for tickets with any of the provided severities. Allowed values: blockerhighlowmediumticket.sla_summary.stageenumOptionalFilters for records with any of the provided SLA stages. Allowed values: breachedcompletedpausedrunningwarningticket.source_channelstringOptionalFilters for tickets with any of the provided source channels.Filters for work of the provided types. Allowed values: issueticketResponseThis endpoint returns an objectThe cursor used to iterate subsequent results in accordance to the\nsort order. If not set, then no later elements exist.The cursor used to iterate preceding results in accordance to the\nsort order. If not set, then no prior elements exist.$curl https://api.devrev.ai/works.list \\>     -H \"Authorization: <apiKey>\"1{2  \"works\": [],3  \"next_cursor\": \"next_cursor\",4  \"prev_cursor\": \"prev_cursor\"5}"
    },
    {
        "id": "ART-1249",
        "dataset_source": "devrev-dev0",
        "title": "List Post \u2013 DevRev | Docs (7)",
        "content": "POST$curl -X POST https://api.devrev.ai/works.list \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'Response1{2  \"works\": [],3  \"next_cursor\": \"next_cursor\",4  \"prev_cursor\": \"prev_cursor\"5}"
    },
    {
        "id": "ART-1250",
        "dataset_source": "devrev-dev0",
        "title": "Update \u2013 DevRev | Docs (5)",
        "content": "$curl -X POST https://api.devrev.ai/works.update \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"type\": \"issue\",>  \"id\": \"string\">}'1{2  \"work\": {3    \"type\": \"issue\",4    \"id\": \"string\",5    \"owned_by\": [6      {7        \"type\": \"dev_user\",8        \"id\": \"string\",9        \"display_id\": \"string\",10        \"display_name\": \"string\",11        \"display_picture\": {12          \"id\": \"string\",13          \"display_id\": \"string\"14        },15        \"email\": \"string\",16        \"full_name\": \"string\",17        \"state\": \"active\"18      }19    ],20    \"title\": \"string\",21    \"applies_to_part\": {22      \"type\": \"capability\",23      \"id\": \"string\",24      \"name\": \"string\",25      \"display_id\": \"string\"26    },27    \"artifacts\": [28      {29        \"id\": \"string\",30        \"display_id\": \"string\"31      }32    ],33    \"body\": \"string\",34    \"created_by\": {35      \"type\": \"dev_user\",36      \"id\": \"string\",37      \"display_id\": \"string\",38      \"display_name\": \"string\",39      \"display_picture\": {40        \"id\": \"string\",41        \"display_id\": \"string\"42      },43      \"email\": \"string\",44      \"full_name\": \"string\",45      \"state\": \"active\"46    },47    \"created_date\": \"2023-01-01T00:00:00Z\",48    \"developed_with\": [49      {50        \"type\": \"capability\",51        \"id\": \"string\",52        \"name\": \"string\",53        \"display_id\": \"string\"54      }55    ],56    \"display_id\": \"string\",57    \"modified_by\": {58      \"type\": \"dev_user\",59      \"id\": \"string\",60      \"display_id\": \"string\",61      \"display_name\": \"string\",62      \"display_picture\": {63        \"id\": \"string\",64        \"display_id\": \"string\"65      },66      \"email\": \"string\",67      \"full_name\": \"string\",68      \"state\": \"active\"69    },70    \"modified_date\": \"2023-01-01T00:00:00Z\",71    \"priority\": \"p0\",72    \"reported_by\": [73      {74        \"type\": \"dev_user\",75        \"id\": \"string\",76        \"display_id\": \"string\",77        \"display_name\": \"string\",78        \"display_picture\": {79          \"id\": \"string\",80          \"display_id\": \"string\"81        },82        \"email\": \"string\",83        \"full_name\": \"string\",84        \"state\": \"active\"85      }86    ],87    \"stage\": {88      \"name\": \"string\"89    },90    \"tags\": [91      {92        \"tag\": {93          \"id\": \"string\",94          \"name\": \"string\",95          \"display_id\": \"string\"96        },97        \"value\": \"string\"98      }99    ],100    \"target_close_date\": \"2023-01-01T00:00:00Z\",101    \"target_start_date\": \"2023-01-01T00:00:00Z\"102  }103}"
    },
    {
        "id": "ART-1251",
        "dataset_source": "devrev-dev0",
        "title": "Accounts \u2013 DevRev | Docs",
        "content": "accounts endpoint\n\u2139\ufe0f An account represents a customer organization, and it holds information about the company, including its name, address, industry, domain, and website address.\n\ud83d\udccc For more information about security tokens, refer to Accounts."
    },
    {
        "id": "ART-1252",
        "dataset_source": "devrev-dev0",
        "title": "Create \u2013 DevRev | Docs (6)",
        "content": "POST$curl -X POST https://api.devrev.ai/accounts.create \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"display_name\": \"display_name\">}'Response1{2  \"account\": {3    \"external_refs\": [4      \"external_refs\"5    ],6    \"id\": \"id\",7    \"owned_by\": [],8    \"created_date\": \"2023-01-01T12:00:00Z\",9    \"description\": \"description\",10    \"display_id\": \"display_id\",11    \"display_name\": \"display_name\",12    \"domains\": [13      \"domains\"14    ],15    \"modified_date\": \"2023-01-01T12:00:00Z\",16    \"tier\": \"tier\"17  }18}"
    },
    {
        "id": "ART-1253",
        "dataset_source": "devrev-dev0",
        "title": "Delete \u2013 DevRev | Docs (6)",
        "content": "Deletes an account.RequestThis endpoint expects an object.idstringRequiredThe ID of account to delete.ResponseThis endpoint returns a map from strings to anyPOST$curl -X POST https://api.devrev.ai/accounts.delete \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"ACC-12345\">}'Response1{2  \"string\": {3    \"key\": \"value\"4  }5}"
    },
    {
        "id": "ART-1254",
        "dataset_source": "devrev-dev0",
        "title": "Export \u2013 DevRev | Docs (0)",
        "content": "$curl -G https://api.devrev.ai/accounts.export \\>     -H \"Authorization: <apiKey>\" \\>     --data-urlencode created_date.after=2023-01-01T12:00:00Z \\>     --data-urlencode created_date.before=2023-01-01T12:00:00Z \\>     --data-urlencode modified_date.after=2023-01-01T12:00:00Z \\>     --data-urlencode modified_date.before=2023-01-01T12:00:00Z1{2  \"accounts\": [3    {4      \"external_refs\": [5        \"external_refs\"6      ],7      \"id\": \"id\",8      \"owned_by\": [],9      \"created_date\": \"2023-01-01T12:00:00Z\",10      \"description\": \"description\",11      \"display_id\": \"display_id\",12      \"display_name\": \"display_name\",13      \"domains\": [14        \"domains\"15      ],16      \"modified_date\": \"2023-01-01T12:00:00Z\",17      \"tier\": \"tier\"18    }19  ]20}"
    },
    {
        "id": "ART-1255",
        "dataset_source": "devrev-dev0",
        "title": "Export Post \u2013 DevRev | Docs (0)",
        "content": "POST$curl -X POST https://api.devrev.ai/accounts.export \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'Response1{2  \"accounts\": [3    {4      \"external_refs\": [5        \"external_refs\"6      ],7      \"id\": \"id\",8      \"owned_by\": [],9      \"created_date\": \"2023-01-01T12:00:00Z\",10      \"description\": \"description\",11      \"display_id\": \"display_id\",12      \"display_name\": \"display_name\",13      \"domains\": [14        \"domains\"15      ],16      \"modified_date\": \"2023-01-01T12:00:00Z\",17      \"tier\": \"tier\"18    }19  ]20}"
    },
    {
        "id": "ART-1256",
        "dataset_source": "devrev-dev0",
        "title": "Get \u2013 DevRev | Docs (8)",
        "content": "GET$curl -G https://api.devrev.ai/accounts.get \\>     -H \"Authorization: <apiKey>\" \\>     -d id=ACC-12345Response1{2  \"account\": {3    \"external_refs\": [4      \"external_refs\"5    ],6    \"id\": \"id\",7    \"owned_by\": [],8    \"created_date\": \"2023-01-01T12:00:00Z\",9    \"description\": \"description\",10    \"display_id\": \"display_id\",11    \"display_name\": \"display_name\",12    \"domains\": [13      \"domains\"14    ],15    \"modified_date\": \"2023-01-01T12:00:00Z\",16    \"tier\": \"tier\"17  }18}"
    },
    {
        "id": "ART-1257",
        "dataset_source": "devrev-dev0",
        "title": "Get Post \u2013 DevRev | Docs (8)",
        "content": "POST$curl -X POST https://api.devrev.ai/accounts.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"ACC-12345\">}'Response1{2  \"account\": {3    \"external_refs\": [4      \"external_refs\"5    ],6    \"id\": \"id\",7    \"owned_by\": [],8    \"created_date\": \"2023-01-01T12:00:00Z\",9    \"description\": \"description\",10    \"display_id\": \"display_id\",11    \"display_name\": \"display_name\",12    \"domains\": [13      \"domains\"14    ],15    \"modified_date\": \"2023-01-01T12:00:00Z\",16    \"tier\": \"tier\"17  }18}"
    },
    {
        "id": "ART-1258",
        "dataset_source": "devrev-dev0",
        "title": "List \u2013 DevRev | Docs (8)",
        "content": "$curl -G https://api.devrev.ai/accounts.list \\>     -H \"Authorization: <apiKey>\" \\>     --data-urlencode created_date.after=2023-01-01T12:00:00Z \\>     --data-urlencode created_date.before=2023-01-01T12:00:00Z \\>     --data-urlencode modified_date.after=2023-01-01T12:00:00Z \\>     --data-urlencode modified_date.before=2023-01-01T12:00:00Z1{2  \"accounts\": [3    {4      \"external_refs\": [5        \"external_refs\"6      ],7      \"id\": \"id\",8      \"owned_by\": [],9      \"created_date\": \"2023-01-01T12:00:00Z\",10      \"description\": \"description\",11      \"display_id\": \"display_id\",12      \"display_name\": \"display_name\",13      \"domains\": [14        \"domains\"15      ],16      \"modified_date\": \"2023-01-01T12:00:00Z\",17      \"tier\": \"tier\"18    }19  ],20  \"next_cursor\": \"next_cursor\",21  \"prev_cursor\": \"prev_cursor\"22}"
    },
    {
        "id": "ART-1259",
        "dataset_source": "devrev-dev0",
        "title": "List Post \u2013 DevRev | Docs (8)",
        "content": "$curl -X POST https://api.devrev.ai/accounts.list \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'1{2  \"accounts\": [3    {4      \"external_refs\": [5        \"external_refs\"6      ],7      \"id\": \"id\",8      \"owned_by\": [],9      \"created_date\": \"2023-01-01T12:00:00Z\",10      \"description\": \"description\",11      \"display_id\": \"display_id\",12      \"display_name\": \"display_name\",13      \"domains\": [14        \"domains\"15      ],16      \"modified_date\": \"2023-01-01T12:00:00Z\",17      \"tier\": \"tier\"18    }19  ],20  \"next_cursor\": \"next_cursor\",21  \"prev_cursor\": \"prev_cursor\"22}"
    },
    {
        "id": "ART-1260",
        "dataset_source": "devrev-dev0",
        "title": "Update \u2013 DevRev | Docs (6)",
        "content": "POST$curl -X POST https://api.devrev.ai/accounts.update \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"ACC-12345\">}'Response1{2  \"account\": {3    \"external_refs\": [4      \"external_refs\"5    ],6    \"id\": \"id\",7    \"owned_by\": [],8    \"created_date\": \"2023-01-01T12:00:00Z\",9    \"description\": \"description\",10    \"display_id\": \"display_id\",11    \"display_name\": \"display_name\",12    \"domains\": [13      \"domains\"14    ],15    \"modified_date\": \"2023-01-01T12:00:00Z\",16    \"tier\": \"tier\"17  }18}"
    },
    {
        "id": "ART-1261",
        "dataset_source": "devrev-dev0",
        "title": "Service level agreement \u2013 DevRev",
        "content": "sla endpoint\n\u2139\ufe0f A service-level agreement (SLA) is a contract between you and your customers that sets the expectations for your service level. SLAs help ensure that your customers receive timely responses and resolutions to inquiries.\n\ud83d\udccc For more information about security tokens, refer to Service level agreement."
    },
    {
        "id": "ART-1262",
        "dataset_source": "devrev-dev0",
        "title": "Sla Trackers Get \u2013 DevRev",
        "content": "$curl -G https://api.devrev.ai/sla-trackers.get \\>     -H \"Authorization: <apiKey>\" \\>     -d id=id1{2  \"sla_tracker\": {3    \"id\": \"id\",4    \"metric_target_summaries\": [5      {6        \"metric_definition\": {7          \"id\": \"id\"8        },9        \"target_time\": \"2023-01-01T12:00:00Z\",10        \"warning_target_time\": \"2023-01-01T12:00:00Z\"11      }12    ],13    \"applies_to_id\": \"applies_to_id\",14    \"created_date\": \"2023-01-01T12:00:00Z\",15    \"display_id\": \"display_id\",16    \"modified_date\": \"2023-01-01T12:00:00Z\",17    \"sla\": {18      \"id\": \"id\",19      \"name\": \"name\",20      \"status\": \"archived\",21      \"display_id\": \"display_id\"22    },23    \"sla_policy_id\": \"sla_policy_id\",24    \"stage\": \"stage\",25    \"status\": \"status\"26  }27}"
    },
    {
        "id": "ART-1263",
        "dataset_source": "devrev-dev0",
        "title": "Sla Trackers Get Post \u2013 DevRev",
        "content": "$curl -X POST https://api.devrev.ai/sla-trackers.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"id\">}'1{2  \"sla_tracker\": {3    \"id\": \"id\",4    \"metric_target_summaries\": [5      {6        \"metric_definition\": {7          \"id\": \"id\"8        },9        \"target_time\": \"2023-01-01T12:00:00Z\",10        \"warning_target_time\": \"2023-01-01T12:00:00Z\"11      }12    ],13    \"applies_to_id\": \"applies_to_id\",14    \"created_date\": \"2023-01-01T12:00:00Z\",15    \"display_id\": \"display_id\",16    \"modified_date\": \"2023-01-01T12:00:00Z\",17    \"sla\": {18      \"id\": \"id\",19      \"name\": \"name\",20      \"status\": \"archived\",21      \"display_id\": \"display_id\"22    },23    \"sla_policy_id\": \"sla_policy_id\",24    \"stage\": \"stage\",25    \"status\": \"status\"26  }27}"
    },
    {
        "id": "ART-1264",
        "dataset_source": "devrev-dev0",
        "title": "Getting started with webhooks \u2013 DevRev",
        "content": "Webhooks allow you to build custom workflows in response to events on the DevRev platform.\nA webhook can be thought of as a \u2018reverse API\u2019 that\u2019s driven by events rather than requests. While APIs are used to pull data from the system, webhooks are a mechanism for the system to push data to a pre-configured endpoint.\nWebhooks allow you to receive notifications based on events without having to explicitly make a request.\nWebhook workflow\nYou must first set up an HTTP server that listens on a publicly accessible endpoint.\nWhen ready, you must register the endpoint\u2019s URL with DevRev by creating a webhook object that is\nassociated with your Dev org. After successful registration and verification of the endpoint,\nDevRev issues HTTP requests (that is, invoke the endpoint) for all events that match the event types\nthat the webhook is registered for. Your HTTP server receives an event\u2019s information,\nverify it using the event\u2019s provided metadata, and return a response indicating successful reception.\nThe types of events that can be received through webhooks are object mutation events (create, update, delete).\nEvents are delivered concurrently in a semi-ordered (but not guaranteed) manner,\nwhere object timestamps and versions enable you to determine the order of events for a particular object.\n\nWebhook event handling\nAll events are delivered to the same registered endpoint, and there is a single request schema to encompass all events that contains the following fields:\n\nwebhook_id: Identifies the webhook that the event is being delivered for.\ntimestamp: The timestamp for the event.\ntype: The event type. This is always followed by a field of the type\u2019s name that contains the event\u2019s data.\n\nEvent POST [json]\nEvent POST from DevRev to your endpoint\n\nSupported events include the standard create/update/delete operations. When providing objects in webhook payloads, the schema for the objects is the same as those from the OpenAPI specification, which enables interoperability between REST and Webhook events APIs.\nMultiple events may be invoked concurrently for the same webhook endpoint.\nIt\u2019s strongly recommended that the webhook endpoint respond immediately to webhook invocations such that any non-trivial processing is done asynchronously. If a response isn\u2019t returned within 3 seconds, the invocation will be aborted and retried at a later time.\nSteps to set up and receive webhooks\nLet us use an example to walk through how webhooks can be set up.\nYou are building a work distribution system, and would like to be notified anytime a new work item\nis created or deleted on DevRev.\nYou can start receiving event notifications using the following steps:\n\n\nSet up a secure HTTP server and expose a publicly accessible endpoint, which serves as the webhook invocation target.\nInsert your endpoint where the following is mentioned: your-webhook-endpoint-url.\n\n\nIdentify the events you want to monitor and the event payloads to parse.\nLook up the supported events and event payloads in our API Methods section.\nA general guideline here is to only subscribe to event types which you require in order\nto avoid overwhelming your HTTP server.\nIn the above example, you may be interested in work_created and work_deleted.\n\n\nRegister webhook endpoint\nBefore webhook events can be processed, you must inform DevRev of the URL where the events should be\ndelivered, along with the specific event types that you are interested in.\nAs a result of this registration, DevRev passes back a secret that is used to\nverify requests. This secret is never provided when invoking a webhook, only when you call into DevRev\n(using TLS), however the webhook request contains a derivative of the secret that you will use to verify\nDevRev as the originator.\nAPI Reference: Create Webhook\nYou will invoke DevRev webhook create with the following fields for our example:\n\n\nWebhook create request [bash]\n\nThe following response is sent by DevRev\nWebhook create response [json]\n\nAfter creation, DevRev sends a verify request to verify the endpoint is reachable and was intentionally\ncreated by the owner (that is, not a malicious client using a URL that they don\u2019t own).\nTo perform a successful verification, your endpoint must echo the provided challenge within 3 mins of the Create Request:\nVerify request [json]\n\nThe following response is expected from your endpoint\nEcho challenge [json]\n\nYou are all set.\nOnce verified, the status of the webhook is updated to be active and DevRev begins to deliver\nthe subscribed events to the webhook endpoint.\nThe APIs for standard CRUDL behavior for webhooks are found in the API methods section.\nWebhook failure handling\nTo mitigate intermittent and/or transient failures, DevRev retries unacknowledged webhooks invocations. By default, three attempts are made: the first immediately, the second after a 30-second delay, and the third after a three-minute delay. If sustained failures are encountered, the webhook service marks the webhook endpoint to be in a degraded state and it\u2019ll fail any queued events without invocation attempts. When in this state, verify requests are restarted to determine when the endpoint becomes healthy again and eventually promoted back to the active state.\nWebhook security\nA header signature X-DevRev-Signature is always provided, which is a hash-based message authentication code (HMAC) utilizing SHA256 consisting of the secret as the key and the raw request payload as the message. Any adversary that intercepts and modifies the request is unable to reproduce the proper signature, and therefore should be discarded by the webhook endpoint. Note that this method is still subject to replay attacks, such that an adversary could intercept the request and replay it at different points in time, however the timestamp should be used to validate the proximity of the request and be discarded if stale.\nThe webhook endpoint must handle duplicate deliveries of the same event."
    },
    {
        "id": "ART-1265",
        "dataset_source": "devrev-dev0",
        "title": "Restricted messages on a timeline \u2013 DevRev",
        "content": "Introduction\nIn this tutorial, you\u2019ll learn how to send restricted visibility messages on the timeline of an object by using the timeline-entries-create API. These messages are only visible to the specific users you give access to.\nThe timeline entries API is used to create discussions (comments) on the timeline of an object such as a ticket or issue. These messages can be sent by users or by a bot.\nYou can use this to send any information about a customer like their last logged in date and time, the last page they visited, or an error they encountered.\nSend a restricted visibility message\nTo send a restricted visibility message, follow the steps listed below:\nThe payload to make a request would look like given below:\n\n\nobject must be of type string and contains <partition>, <dev-org-id>, and <object-id>.\nbody is of type string and contains the actual message to be posted.\nvisibility is set to private in order for the message to be visible only to users, internal is visible with the Dev organization, external is visible to the Dev organzation and customers, and public is visible to all.\ntype should be timeline_comment.\n\n\nGet the object ID and object type where you want to send a message.\n\n\nExample: In issue ISS-69, 69 is the object ID and ISS indicates the object type issue.\n\n\n\nGet the dev-org-id and partition by making a call to the dev-users.self API.\n\n\nGet the display IDs of the users you want to send the private message to. Add these display IDs in the private_to array.\n\n\n\nExample: DEVU-1\n\n\nMake a POST request to (\u201chttps://api.devrev.ai/timeline-entries.create\u201d) and include the PAT created in the authorization header of the request along with the payload with replaced IDs.\n\nIn this example, you are using curl to make the requests but you can use any tool you prefer.\n\nYou receive the following json response.\n\nYou can check the object to which you sent a message in the UI. It\u2019s visible to the creator and the users you added in private_to.\n\nSummary\nIn this tutorial, you learned how to post a comment on the timeline of an issue/ticket using the timeline-entries.create API with different visibilities. You can now use this to create comments on timeline using automation or manually based on your use case."
    },
    {
        "id": "ART-1266",
        "dataset_source": "devrev-dev0",
        "title": "Overview \u2013 DevRev | Docs",
        "content": "SDKsPLuG SDKThe PLuG widget SDK is a powerful tool designed to further enhance our widget on your website or application. With the PLuG SDK, you can integrate DevRev\u2019s feature-rich widget, allowing you to create a dynamic and personalized user experience.\nBefore you dive into customization, take a quick detour to explore methods \u2013  they\u2019ll lay the groundwork for smooth customer interactions and effortless support using PLuG.\n\nIntegrate PLuG with your Android appIntegrate PLuG with your iOS app"
    },
    {
        "id": "ART-1267",
        "dataset_source": "devrev-dev0",
        "title": "Integrate PLuG with your Android app \u2013 DevRev",
        "content": "This guide will help you to integrate PLuG using DevRev SDK with your Android app.\nRequirements\n\nAndroid Studio 2022.1.1\nAndroid Gradle plugin version 7.4\nGradle version 7.6\nMinimum Android SDK 29\n\nSetup\nTo integrate the latest version of our SDK into your app, follow these steps:\n\nOpen your app\u2019s build.gradle.kts file and add the following dependencies to get the latest version of our SDK:\n\n\n\nTo access our SDK, hosted on mavenCentral, add it to your root\u2019s build.gradle.kts file.\n\n\nAfter completing these steps in your build.gradle.kts script, you should be able to import and use the DevRev SDK in your Android application.\nSetting up the DevRev SDK\nObtain credentials\n\n\nIn DevRev, go to\u00a0Settings\u00a0>\u00a0Support\u00a0>\u00a0PLuG Tokens\u00a0through the settings icon in the top-left corner.\n\n\nUnder the App Credentials section, generate the necessary credentials for SDK usage. Remember to save both the App ID and App Secret as they are required in SDK configuration.\n\n\nAcquire the  Your Unique App ID (referred to as supportID in the code) by visiting the PLuG Settings page.\n\n\nInitialization\nAfter you\u2019ve obtained the necessary credentials, proceed to configure the DevRev SDK within your app.\n\nTo configure the SDK, invoke the following method inside your Application class:\n\n\n\nIf you don\u2019t have a custom Application class, create one as shown below:\n\n\n\n\nIn the onCreate method of your application, configure the DevRev SDK using the credentials obtained earlier.\n\n\nEnsure that the custom application is specified in the AndroidManifest.xml, as shown below:\n\n\n\nUser identification\nBefore initiating the chat feature, user identification is required. Mobile applications can submit various arguments to identify the user. The following example adopts a simplistic approach, providing the minimum required arguments for successful user identification:\n\nUpon completing user identification, the chat dialog (conversations) supported by the DevRev SDK becomes accessible.\nTo open the chat dialog, the application should utilize the showSupport API, as shown below:\n\nSupport button\nThe mobile SDK also offers a support button that can be integrated into your application. To include it on the current screen, add the following code to your XML layout:\n\nThe support button accepts default parameters like:\n\nor\n\nThis allows customization according to your preferences. The button appears on your screen.\nAt this stage, you should be able to run the app and leverage all the features of the DevRev  SDK. Clicking the Support button navigates the user to the chat interface.\nSample app\nThe examples presented in this document are taken from the DevRev SDK sample app. The sample app showcases both functional and XML implementations and is included as part of the repository. It\u2019s recommended to run the sample app before integrating the  SDK into your target application.\nTroubleshooting\n\n\nIssue: Encountering problems with DevRev SDK integration.\nSolution: Verify the correct SDK dependency setup in the project. Ensure mavenCentral is accessible from the IDE, and confirm accurate detection of the selected DevRev PLuG SDK version.\n\n\nIssue: The showSupport() function or XML button is unresponsive.\nSolution: Confirm that user identification is performed before using the showSupport() function or XML button.\n\n\nIssue: Incorrect operation due to App ID and secret misconfiguration.\nSolution: Ensure correct functionality by double-checking that both App ID and secret values are accurately configured in your application or sample app.\n\n"
    },
    {
        "id": "ART-1268",
        "dataset_source": "devrev-dev0",
        "title": "Integrate PLuG with your iOS app \u2013 DevRev",
        "content": "This guide will help you to integrate PLuG using DevRev SDK with your iOS app.\nRequirements\n\nThe latest stable Xcode version, 14.0 or higher, available on the App Store\nSwift 5.7 or later\nSet the minimum deployment target for your iOS application as iOS 15\n\nSetup\nIntegrating DevRev SDK using Swift Package Manager (SPM).\n\nLaunch Xcode and open your existing project.\nGo to the menu bar and select File > Swift Packages > Add Package Dependency.\nIn the Add Package Dependency window, enter the https://github.com/devrev/devrev-sdk-ios URL in the Enter Package URL field.\nClick the Add Package button to fetch the DevRev SDK package.\nAfter successfully adding the package, navigate to the Build Phases tab of your app target.\nConfirm that the DevRevSDK is listed in the Link Binary With Libraries phase. If not, add it by clicking the + button and selecting DevRevSDK from the list.\nNow that the SDK is integrated, you can import and use it in your Swift code.\n\nSetting up the DevRev SDK\nObtain credentials\n\n\nTo use the DevRev SDK, you must obtain credentials from the DevRev app Settings pages. Go to Settings > Support > PLuG Tokens through the settings icon in the top-left corner.\n\n\nUnder the App Credentials section, generate the necessary credentials for SDK usage. Remember to save both the App ID and App Secret as they are required in the SDK configuration.\n\n\nAcquire the Your Unique App ID (referred to as supportID in the code) by visiting the PLuG Settings page.\n\n\nInitialization\nAfter obtaining the necessary credentials, proceed to configure the DevRev SDK within your application.\n\nInitialization of the SDK is accomplished by invoking the configuration method:\n\n\nFor example:\n\n\nFor UIKit apps, configure the SDK within the AppDelegate.application(_:didFinishLaunchingWithOptions:) method.\nFor SwiftUI apps, depending on your app\u2019s architecture, perform SDK configuration either at the entry point or in the initial view of the app.\n\nUser identification\nTo use specific SDK features, user identification is mandatory. Follow these steps to ensure proper user identification when using the DevRev SDK:\n\n\nUtilize the DevRev.identify(_:) function for user identification.\nThe function accepts the\u00a0DevRev.Identification\u00a0structure, with only user ID (userID) as a required property. All other properties are optional.\nThe\u00a0DevRev.identify(_:)\u00a0function is an asynchronous one ensure that you wrap it in a\u00a0Task when calling it from a synchronous context.\n\n\nFor example:\n\n\nPlace the identification function appropriately in your app, preferably after the user logs in. If user information is available at app launch, invoke the function following the DevRev.configure(appID:secret:supportID:) method.\n\nPLuG support chat\nUIKit:\nThe support chat feature in UIKit can be displayed either as a modal screen or pushed onto a navigation stack.\nTo show the support screen, use the overloaded method:\n\n\n\nIf a UIViewController is provided as the from parameter, the screen is presented modally.\n\n\nIf a UINavigationController is provided as the from parameter, the screen is pushed onto the navigation stack.\n\n\nFor example:\n\nSwiftUI:\nFor SwiftUI apps, a dedicated view is provided. Use the public view property:\n\nNew conversation callback:\nFor convenience, a callback closure is added, so the host app can access the conversation ID.\n\nFor example:\n\nAnalytics\nThe DevRev SDK supports sending custom analytic events using a name and a string dictionary.\nTo track these events, use the following function:\n\nFor example:\n\nSample app\nThe repository includes a sample app showcasing use cases for both UIKit and SwiftUI.\nBefore using the sample app, follow these steps to configure it with your Apple Developer team and DevRev credentials. For your convenience, the code is marked with compiler error directives (#error) at places that need attention.\n\nAdd your credentials to either ContentView.swift (SwiftUI) or AppDelegate.swift (UIKit).\nRemove or comment out the compiler error lines in the respective files.\nConfigure code signing for the sample target:\na. Open the project settings.\nb. Select the appropriate target.\nc. Navigate to the Signing & Capabilities tab.\nd. From the Team drop-down, select your development team.\n\nTroubleshooting\n\n\nIssue: Can\u2019t import the SDK into my app.\nSolution: Double-check the setup process and ensure that DevRevSDK is correctly linked to your application.\n\n\nIssue: How does the DevRev SDK handle errors?\nSolution: The DevRev SDK reports all errors in the console using Apple\u2019s Unified Logging System. Look for error messages in the subsystem ai.devrev.sdk.\n\n\nIssue: Support chat won\u2019t show.\nSolution: Verify that you have called the identification method (DevRev.identify(...)) correctly.\n\n"
    },
    {
        "id": "ART-1269",
        "dataset_source": "devrev-dev0",
        "title": "Track events \u2013 DevRev | Docs",
        "content": "Utilize the PLuG SDK for effective tracking of user interactions. This feature enables you to transmit customized events, defining how users engage with your product or website. Analyze these events to gain insights into product usage metrics, to deploy targeted campaigns, and to equip your customer experience team with precise information about customer interactions.\nThis functionality is currently in beta.\nHow to track user events using PLuG\nTo track user events through PLuG, employ the trackEvent method provided by the PLuG SDK, which automatically associates the event with the currently active user profile within the widget. To learn more about user identification in the PLuG widget, see Identify your users with PLuG.\n\nEvent name: Specify a meaningful name for the custom event, for example, added_to_cart, made_payment, or subscribed. Use alphanumeric symbols, underscores (_), or hyphens (-) in the event name.\nProperties (optional): Object containing metadata with additional context and information related to the captured event.\nDevRev doesn\u2019t recommend setting certain fields in the payload, such as devrev_source_identifier (event source), plugSessionId (UUID for tracking sessions), and is_devrev_internal_event (event auto-tracked by PLuG).\n\nPLuG user context: For each shared event, PLuG automatically includes user context properties. These properties encompass details such as event time, user browser information, locale, device specifications, timezone, operating system version, and the page URL from which the event originated.\nViewing user events: To review all events performed by a user, navigate to the user profile within your DevRev app and click on the \u201cUsage\u201d tab. The events displayed in the user profile are updated every 24 hours."
    },
    {
        "id": "ART-1270",
        "dataset_source": "devrev-dev0",
        "title": "Methods \u2013 DevRev | Docs",
        "content": "Our PLuG widget SDK is a powerful tool designed to further enhance our widget on your website or application. With our SDK, you can seamlessly integrate our feature-rich widget by empowering you to create a dynamic and personalized user experience. Let\u2019s get started.\nMethodDescriptionplugSDK.init()Initialize the PLuG widget.plugSDK.shutdown()End the user session which is currently initialized in PLuG widget.plugSDK.toggleWidget()Open/close the widget.plugSDK.onEvent()Perform specific actions based on the payload type received from the PLuG widget.plugSDK.toggleTheme('light/dark')Toggle PLuG widget theme.plugSDK.toggleWidget(true, 'create_conversation', {startConversationContent: 'Hi',});Start a conversation.\n\nCalling the init() method initializes the PLuG widget on your website. Initializing the PLuG widget is necessary for you to perform any other actions on the PLuG widget SDK.\n\nWhen React is using Strict mode, you might get a warning message from window.plugSDK.init() being called multiple times. These errors won\u2019t impact the installation and functioning of the widget.\n\nThe shutdown() method is helpful when you want to end the user session which is currently initialized in the PLuG widget. You can use this method to clear your users\u2019 conversations and tickets when they log out of your application.\n\nAfter calling the shutdown() method, you can call the init() method to reinitialize PLuG widget on your website if you wish to showcase the PLuG widget again in the logged out version of your application.\nOnce the shutdown() method is called, all the other functionality in the widget such as session recording or Nudges is also be stopped. You need to reinitialize the widget again to have these features active.\n\n\nTo control whether the PLuG widget launcher screen is open, you can use the togglewidget() method with a boolean value. Your code needs to listen to the event ON_PLUG_WIDGET_READY to call this method. If the widget isn\u2019t ready then this method won\u2019t make any action.\n\n\nTake actions from events\nThis method can be used to listen to events coming from the PLuG widget. The following are the different PAYLOAD_TYPES.\nEventMeaningON_PLUG_WIDGET_CLOSEDThe PLuG widget is closed.ON_PLUG_WIDGET_OPENEDThe PLuG widget is opened.ON_PLUG_WIDGET_READYThe PLuG widget is ready.ON_PLUG_WIDGET_UNREAD_COUNT_CHANGEThe user receives a new message to their PLuG. You can also listen to the number of unread messages and display that to your user.\n\n\nToggle theme\nThe toggle theme method allows you to dynamically modify the PLuG SDK\u2019s theme, even after initializing the PLuG widget. This functionality enables real-time adjustments to the PLuG widget\u2019s theme based on diverse themes preferred by your users.\nThe method accepts two inputs: light and dark.\n\nThe parameter is optional; calling toggleTheme() toggles the current theme, and specifying a theme as a parameter allows toggling for that specific theme.\nStart conversation\nThis method is utilized to open the PLuG widget with the conversation creation view activated. It essentially replicates the action of clicking the Send us a message button, launching the widget directly to the conversation initiation screen.\nThe method also accepts an optional input parameter, allowing you to pre-fill a message in the conversation creation screen. This provides your users with a prompt to initiate a conversation with your team.\n\nLooking for something more? Reach out to us through our own PLuG widget in the bottom right of this screen and we would be happy to assist you."
    },
    {
        "id": "ART-1271",
        "dataset_source": "devrev-dev0",
        "title": "Customization \u2013 DevRev | Docs",
        "content": "PLuG has a completely no-code way of changing the look and interaction of your widget. In case you wish to make your PLuG widget more interactive and customized to how your app is structured, you can use these customization properties to set up your widget.\nIf you have customized these properties of the widget through the PLuG settings page of DevRev, the values set in the initalization code take priority over those which you have updated in your PLuG settings.\nAll of these properties have to be passed as parameters while initializing the PLuG widget using plugSDK.init(). For details, refer to the PLuG SDK methods documentation.\nCustomizationDescriptioncustom_launcher_selectorCustomize the widget launcher to best fit your website or app.widget_alignmentAlign the widget to be placed either on the left or right side, relative to the launcher.enable_default_launcherShow/hide the default PLuG Widget launcher.themeSet the theme of the PLuG Widget.\nCode sandbox\n\nProperties\nPLuG launcher\nCustomize the widget launcher to best fit your website or app; or show or hide the default PLuG widget launcher.\nTo customize your PLuG launcher styles, specify the CSS selector in the custom_launcher_selector property. This CSS selector is the reference based on which your PLuG widget opens. This property accepts a string value. The selector can also be configured through the plug settings on app.devrev.ai.\n\nUse the enable_default_launcher property only if you are not using the custom launcher selector.\n\nThe default value is true.\nWidget alignment\nAlign the widget to be placed on the left or right of the launcher.\nThe widget can be set to open to the left or to the right of the custom launcher.\n\nThe default value is right.\nSpacing\nAdjust spacing of the PLuG widget.\nTwo properties are available to apply spacing.\n\n\nThe bottom property determines the padding from the bottom of the launcher.\nThe default value is 10px.\n\n\nThe side property determines the spacing of the widget from the launcher icon.\nThe default value is 0px.\n\n\n\n\nLight/dark theme\nSet the theme of the PLuG widget.\n\nThe default value is light.\n"
    },
    {
        "id": "ART-1272",
        "dataset_source": "devrev-dev0",
        "title": "Concepts \u2013 DevRev | Docs (0)",
        "content": "Snap-in platform\nA snap-in platform manages snap-in packages and installs snap-ins. It enables snap-ins to register, validate, and deploy functions, creating other DevRev objects, registering events/webhooks, and triggering actions enriched by context.\nSnap-in\nSnap-ins are collections of objects that extend DevRev\u2019s core platform value. These objects include automation, event sources, keyrings, custom types, and vistas. With snap-ins, developers can develop at \u201carms-length\u201d and without making any changes to DevRev\u2019s core platform.\nSnap-in developers interact with DevRev objects through APIs, get updates on DevRev objects through webhooks, and register an event source to subscribe to GitHub/Slack/any external events.\nSnap-in package\nA snap-in package is a collection of DevRev objects and their relationships that describe the functionality of the developed snap-in.\nIt doesn\u2019t reference an object within the installer\u2019s dev org. It\u2019s a parent object collecting snap-in versions. A good analogy for a snap-in package is an Andriod/iOS app which can house different versions of the code.\nSnap-in version\nA snap-in version is the definition of a snap-in. It doesn\u2019t belong to any dev org. It\u2019s equivalent to a snap-in source code. When a snap-in version is installed, it requires certain inputs from the installer, such as a PAT for GitHub, registering a URL on Bitbucket, or some configuration.\nThe snap-in developer can specify input configurations that the installer can use to customize the installed snap-in.\nAutomation\nIn automation, the event source is linked to a function, so whenever an event occurs on that event source, the function is triggered and the event payload is passed along. All keyrings configured by the installer are included in the payload passed to the functions, along with developer-level tokens.\nConnection\nA connection uses a keyring object to provide authentication, access token refreshment, and secret storage (access token, refresh token, PAT, API key, and more). Upon creating the connection, the platform automatically refreshes the OAuth access token whenever necessary. Objects can reference secrets to access external or DevRev-protected APIs. The platform may use a connection to automatically register the webhook URL with an external source. Automations may also use connections to pass secret values to corresponding functions.\nEvent source\nEvent sources collect events from webhooks, emails, and timer-based API calls. Events can also be manually published. DevRev supports the ingestion of webhooks from any source. Each event source is assigned to a dev org.\nFor example, if you want to collect webhook events from an organization\u2019s GitHub, create an event source that gives you a URL to subscribe to on GitHub. Webhook events published to this URL are available from this event source.\nFunction\nThe framework for executing code provided by users is functions. Currently, Javascript/TypeScript can be taken as input from the user and deployed as a function.\nConnection values can be passed to a function at runtime, enabling it to execute API calls to DevRev and external systems such as GitHub, Slack, Bitbucket, and Discord.\nInputs\nSnap-ins can be configured to enable and disable features, based on custom inputs defined by the developer and provided by the installer.\nCommands\nA user can trigger commands on different surfaces based on some parameters. Once a command is executed, a function is triggered.\nA developer can develop commands to be included in a snap-in version along with associated functions. These commands are installed when the snap-in is installed.\nAs part of the snap-in, commands have access to keyrings, global variables, and event sources.\nHooks\nHooks enable developers to invoke functions when various events in the lifecycle of a snap-in occur. Hooks can be used to perform various actions based on the event such as validating the snap-in inputs and keyrings when the configuration is updated, registering event sources and webhooks in external platforms when snap-in is activated, or setting custom fields to be used by the snap-in.\nDetailed documentation on hooks can be found in the hooks reference.\nStates\nThe snap-in can have the following states:\n\nDRAFT: The snap-in installation is in progress and the event sources, automations, and commands aren\u2019t created yet.\nACTIVATING: The snap-in is being activated, and the automations, commands, and snap-kit actions are paused. The snap-in can\u2019t be updated in this state.\nACTIVE: The snap-in is functioning, and the automations, commands, and snap-kit actions can be invoked.\nERROR: The snap-in isn\u2019t functioning, and the automations, commands, and snap-kit actions are paused. This state can be reached in case of any misconfiguration of the snap-in (such as invalid keyrings or inputs) or failure to activate the snap-in.\nDEACTIVATING: The snap-in is being deactivated, and the automations, commands, and snap-kit actions are paused. The snap-in can\u2019t be updated in this state.\nINACTIVE: The snap-in is paused by the user, and the automations, commands, and snap-kit actions are paused.\n\nACTIVATING and DEACTIVATING are transitory states and background processes and hooks move the snap-in from these states to a stable state.\nThe following diagram illustrates the transitions between different states.\n\nSnap-in resources\nSnap-in resources are user-level objects like keyrings, event sources, and inputs. These are set after an user updates their personal configuration for a snap-in and toggles Enable for me. Snap-ins can get resources for a user using the DevRev Beta API snap-ins.resources.\nSnap-kit\nSnap-kit defines UI customization components. It\u2019s defined in the snap-in package and used to display developer-defined components. A snap-kit component can display data to a user or collect input for triggering a function.\nMarketplace\nThe marketplace is a portal where DevRev and external developers can publish snap-ins and other extensions.\nSimilarly, developers can use private marketplaces to publish their own custom snap-ins that are scoped to their dev org.\nPersonas\nPublisher\nThe developer\u2019s dev org is responsible for publishing the snap-in to the marketplace. The publisher is responsible for supporting snap-in users.\nInstaller\nInstallers install the snap-in, provide configuration inputs, set up the necessary keyrings, and configure webhooks for external apps."
    },
    {
        "id": "ART-1273",
        "dataset_source": "devrev-dev0",
        "title": "Overview \u2013 DevRev | Docs (0)",
        "content": "Snap-in developmentTutorialsThe following tutorials provide a step-by-step guide to creating snap-ins:\n\nGetting started\nUsing a snap-in to perform a DevRev action\nSnap-in triggered by a DevRev event\nSnap-in triggered by an external source\nUsing snap-in to perform an external action\n"
    },
    {
        "id": "ART-1274",
        "dataset_source": "devrev-dev0",
        "title": "Getting started \u2013 DevRev | Docs (0)",
        "content": "Snap-in developmentTutorialsIn this tutorial, you\u2019ll learn to create and deploy a snap-in. Additionally, you\u2019ll learn to create a snap-in version, installing from a version, deploying, deleting and upgrading the snap-in.\nBackground context\nSnap-ins are collections of objects that extend DevRev\u2019s core platform value. These objects include automation, event sources, keyrings, custom types, and vistas. Snap-ins are packaged and installed separately from the DevRev core platform. To create your very own snap-in, create a dev org where you will be installing your snap-in.\nInstallation guide\nInstall DevRev CLI\nInstall jq\nLog in to DevRev for authenticationTo authenticate, run the following command:Initializing a snap-in templateTo initialize a snap-in template, run the following command:After the command runs, a new folder devrev-snaps-typescript-template is\ncreated in the filesystem.The command creates a folder devrev-snaps-typescript-template. This contains a manifest.yaml file and a code folder.\nmanifest file defines the resources to be created on the DevRev platform. For detailed information on the various components of a manifest file, see Snap-in Manifest.\ncode folder consists of sample starter code for snap-ins. For detailed information on how to get started, see starter example repo.\nCreating a snap-in packageTo create a snap-in package, run the following command:\nThe slug is globally unique. If the slug provided is already taken, a conflict error occurs. This can be resolved by provided a different slug.\nOn successful creation, the CLI automatically stores the package ID in its context corresponding to the slug. For more information, refer to the Snap-in Context.\nCreating a snap-in versionTo create a snap-in version, run the following command:Output:The CLI automatically stores the version ID in its context. Refer to the Snap-in Context section for more information.In a package that\u2019s not published to the marketplace, you can have only one snap-in version. If you have an existing snap-in version in the package, the following error message is shown:To list snap-in versions under the package, run the following command:To delete the snap-in version, run the following command:Installing a snap-in from a snap-in versionTo create a snap-in from a snap-in version, run the following command:To install the snap-in, you must be a member of the\u00a0Admins\u00a0group in the dev org.The CLI automatically stores the snap-in ID in its context. Refer to the Snap-in Context section for more information.Configuring the snap-inThe snap-in is installed in draft state. It may require some configuration before it can be deployed.You can access snap-in configuration by using the URL generated by the draft command, or by navigating to the snap-ins page in the DevRev app.Follow the configuration steps for the snap-in to setup keyrings and inputs if any.Private keyrings from other creators aren\u2019t listed.To make a connection available to other members in your organisation, create it with the visible to dev org option set to true while creating the connection in the DevRev app.Deploying the snap-inOnce you have provided the required configuration, the Deploy snap-in button is enabled on the UI. Click on it to deploy the snap-in.\nThat\u2019s it, the snap-in should now be active and ready to use.Deleting the snap-inThe snap-in can be deleted from the UI or run the following command:If any deactivate hook is specified, it\u2019s invoked with is_deletion=true.Upgrading the snap-inOnce you deploy and test your snap-in, you may want to make changes to it. The changes can be done using a single command.The above expects the manifest file to be present in the current directory by the name manifest.yaml and the code to be present in the code directory.Refer to upgrade command for more information."
    },
    {
        "id": "ART-1275",
        "dataset_source": "devrev-dev0",
        "title": "Using a snap-in to perform a DevRev action \u2013 DevRev",
        "content": "Snap-in developmentTutorialsIntroduction\nThe objective is to build a snap-in that creates a new ticket every 10 minutes.\nBackground context\nIn the Getting Started tutorial, you learned how to create a\nhello-world snap-in which prints a log message when a work item is created. In this tutorial, you will make the following changes to the snap-in:\n\nUpdate the trigger condition to run every 10 minutes instead of work\ncreation.\nCreate a ticket whenever the snap-in is triggered.\n\nEnsure that you have at least one part in your organization since every\nticket must be linked to a part and have an owner.\nSince a DevRev ticket is created whenever the function is triggered,\nDevRev APIs need to be called that allow this\nfunctionality. Although one can directly make HTTP requests to the endpoint,\nit\u2019s strongly suggested to use the\nDevRev TypeScript SDK\nsince it provides additional types and helper methods which ease development.\nInstallation guide\nInstall DevRev CLI\nInstall jq\nInstall DevRev SDK\nIf you did not follow the getting started tutorial then follow these steps to authenticate and initialize the snap-in TypeScript template:TriggerThe trigger condition for the snap-in is dictated by the\nEvent Sources\nsection in the manifest. The timer-events\nevent source is suitable for the use-case, since it allows trigger of snap-ins\nusing CRON expression.ActionThe hello-world snap-in prints a log message whenever the snap-in is triggered.\nHere, the snap-in should create a work-item of type ticket when triggered. To do\nthat, use the\nDevRev TypeScript SDK to\nmake API calls for creating the ticket.Creating the snap-inUpdating the manifestUpdate the manifest file to reflect the objective. Update the name, the\ndescription, and the service account\u2019s display name to better reflect the\nsnap-in\u2019s behavior.Next, update the event_sources section to use the timer-events event source.\nThe timer-events source type takes a config of type cron or\ninterval_seconds as mentioned in the\ndocumentation.\nThe cron config is used here.Finally, update the function name to better reflect the behavior and\nautomationname to use the event type corresponding to the timer-events event\nsource.After these changes, the final version of the manifest can be found\nhere.Renaming the functionNext, the function name in the src/functions folder needs to be renamed to\n\u2018ticket_creator\u2019 which is the one put in the manifest.These changes need to be reflected in the following files as well:\nsrc/function-factory.ts\nsrc/test-runner/example.test.ts\nsrc/functions/ticket_creator/index.test.ts\nEvent received by the snap-in functionIn the hello-world snap-in, the ID of the created work-item gets extracted from\nthe input event as such.The schema for a event received by the snap-in is:The payload differs by the event_source and the event_type received. There\nare two fields to be concerned about in the input payload:\ndevrev_endpoint the endpoint of the API call.\nservice_account_token which is a short-lived token provisioned by each\nsnap-in. This is required when making API calls to DevRev.\nUpdating the codeUpdate the code in src/functions/ticket_creator/index.ts to reflect the\nbehavior.Firstly, import the DevRev TypeScript SDK in the index.ts fileNext, update the run function in the hello-world example. Since the ticket\ngets created frequently, set some creation time in the title and the body. The\nexample uses the part as PROD-1 and keeps the owner as DEVU-1. Feel free to\nedit those values to actual IDs for parts and users in your dev org.The complete index.ts file looks like thisDeploying the snap-in to your organizationOnce satisfied with the code changes, move to the code folder, and runThis builds and packages your snap-in and creates a build.tar.gz. The tar.gz\nand manifest.yaml file is used when creating the snap-in version.Always remember to build and package the snap-in whenever there are code changes\nand it needs to be re-deployed.Steps for deploying this snap-in have been discussed in the\nGetting Started section.\nResources\nThe final snap-in code and manifest can be found\nhere"
    },
    {
        "id": "ART-1276",
        "dataset_source": "devrev-dev0",
        "title": "Using a snap-in to perform an external action \u2013 DevRev",
        "content": "Snap-in developmentTutorialsIntroduction\nIn this tutorial, you\u2019ll lean how to develop a snap-in that mirrors an issue from\nDevRev to GitHub. This requires addition of a command that can be run from\nthe Discussions tab of an issue in DevRev, which creates an issue in GitHub.\nBackground context\n\n\nGitHub APIs mastery:\n\nDelve into understanding GitHub APIs.\nLearn how to fetch details and perform actions using GitHub APIs.\n\n\n\nSecrets and keyrings in DevRev snap-ins:\n\nExplore the usage of secrets and refer to\nkeyrings in DevRev snap-ins.\n\n\n\nCommand creation and utilization in DevRev:\n\nGain proficiency in creating and using\ncommands in DevRev.\n\n\n\nInstallation guide\nInstall DevRev CLI\nInstall jq\nInstall DevRev SDK\nIf you did not follow the getting started tutorial then follow these steps to authenticate and initialize the snap-in TypeScript template:TriggerTo initiate the process of creating a GitHub issue directly from a DevRev issue,\na trigger mechanism is essential. In this context, the implementation involves\nthe introduction of a specialized command. This command is designed to be\nexecuted exclusively from the discussion section of a DevRev issue, serving as\nthe catalyst for replicating the issue on GitHub.ActionThe primary action involves leveraging the issue creation API provided by\nGitHub. This API is utilized to create the GitHub issue seamlessly from the\ncorresponding issue in DevRev.Creating the snap-inUpdating the manifestTo outline the structure of the snap-in, the initial step is to define key\nattributes in the snap-in\u2019s manifest. Begin by specifying the name, description,\nand account display name for the snap-in.KeyringsTo facilitate authentication for our API calls, the initial step involves\ncreating a Personal Access Token (PAT) in GitHub. This PAT can be stored as a\nconnection within DevRev. Subsequently, this\nconnection is employed within our snap-in in the form of keyrings.Functions and commandsHaving established the foundational configurations, the subsequent step is to\ndefine the functions and commands responsible for orchestrating the core logic\nof the snap-in.The command clearly states where you can use it. For example, in the\nDiscussions tab of issues.It also explains the different situations and\nways in which you can make use of this command.To utilize this command, execute /gh_issue OrgName RepoName in the Discussions\ntab of the issue. Within the function logic, validations are implemented to\nensure the correctness of both the organization name (OrgName) and repository\nname (RepoName) before proceeding with the issue creation.Function logicAfter creating the manifest and establishing the snap-in\u2019s logic, the next step is to define the function logic that handles business logic. Once you understand the payload structure of a command, you can proceed with its implementation.To proceed, define the handler function for command events.Within this handler, the initial step involves extracting the GitHub token\nprovided as input in the keyring. Subsequently, the Octokit, responsible for\nmanaging GitHub API requests, is initialized:To facilitate authentication for DevRev API calls, a DevRev token is required.\nThe initialization process for the DevRev SDK involves using the received\nendpoint.With the SDKs successfully initialized, the next step is to invoke the necessary\nAPIs.As a preliminary step, the required fields for creating a GitHub Issue, namely\ntitle and body, need to be extracted. These details are sourced from the issue.\nTo facilitate this, introduce a function defined for this specific purpose:Now, the function can be called within the handler function to obtain the\nnecessary issue details::Following this, the next step involves parsing the parameters Organization and\nRepository Name that were passed in the command:The GitHub REST API (https://docs.github.com/en/rest/orgs/orgs?apiVersion=2022-11-28#get-an-organization) is used to confirm the specified organisation name.Similarly, the\nGET Repository\nis used to validate whether the entered repository name is correct.After completing all the necessary verifications, the\nPOST create issue\ncan be invoked to create a new issue.The completion of functional logic is a key milestone in the process. After laying the framework, now you\u2019ll learn how to install this snap-in for your organization.Deploying the snap-in to your organizationOnce the code has been validated, the next steps involve creating the snap-in\nversion and subsequently creating the snap-in itself. Before installing the\nsnap-in, it\u2019s essential to set up a GitHub Personal Access Token (PAT) and add\nit to the connections in DevRev as a snap-in secret. Ensure that the secret is\nshared within the organization so that the snap-in can utilize it.Follow these steps to install the snap-in in your organization:Step 1: Create a GitHub personal access tokenGenerate a GitHub Personal Access Token (PAT) by following the steps outlined in the\nGitHub documentation.Step 2: Add PAT to DevRev connectionsAdd the generated PAT as a snap-in secret in DevRev. This secret will be used\nduring the installation of the snap-in. Ensure that the secret is shared within\nthe organization to allow the snap-in to access it.Step 3: Install the snap-inDuring the installation of the snap-in, utilize the shared secret to\nauthenticate and connect with GitHub. This ensures that the snap-in has the\nnecessary permissions to interact with GitHub APIs.\nResources\nThe final snap-in code and manifest can be found\nhere."
    },
    {
        "id": "ART-1277",
        "dataset_source": "devrev-dev0",
        "title": "Snap-in triggered by a DevRev event \u2013 DevRev",
        "content": "Snap-in developmentTutorialsIntroduction\nIn this tutorial, you\u2019ll learn to create a dynamic snap-in that responds to both DevRev Webhook events triggered by the creation of a work and specialized command within DevRev.\nThe focus is on the process of working with the payload associated with these events. The objective is to adeptly extract pertinent fields from the payload within the defined functions, subsequently executing a well-defined action. This action involves the addition of a comment to the object timeline, a feature that can be conveniently customized.\nBackground context\n\n\nWebhook event handling: Understand the intricacies of responding to a\nDevRev webhook event, specifically focused on work creation.\n\n\nCommand-based activation: Explore how the snap-in can be triggered by a\ndedicated command within the DevRev environment.\n\n\nPayload exploration: Delve into the payload structure, gaining insights\ninto how to efficiently extract essential fields from within the functions.\n\n\nAction execution: Become proficient in executing a specified action - adding\na customizable comment to the object timeline.\n\n\nTo learn more, refer to the Using a snap-in to perform a DevRev action tutorial.\nInstallation guide\nInstall DevRev CLI\nInstall jq\nInstall DevRev SDK\nIf you did not follow the getting started tutorial then follow these steps to authenticate and initialize the snap-in TypeScript template:TriggerTo invoke the snap-in, two distinct triggers are implemented:\n\nCreation of work item: This trigger is activated when new objects of type\nIssue or Ticket are created in DevRev.\n\n\nText command: This manual trigger is achieved by utilizing a slash\ncommand in the Discussions tab of the objects that support this feature.\n\nActionTo implement the desired action of adding a comment to the object timeline, it\nis essential to identify the appropriate [API]\nfor this task. In this scenario, the /timeline-entries.create API is the\ndesignated choice for executing the action of adding a text comment from the\nsnap-in. To accomplish this task, the DevRev SDK is employed.Creating the snap-inUpdating the manifestThe next step involves updating the manifest to define key attributes of\nthe snap-in. This includes deciding on the name and providing a descriptive\noverview that is visible to users, offering context about the snap-in\u2019s\npurpose.Event sourceFollowing the manifest update, the next step is to incorporate the event source.\nFor this scenario, events from DevRev are essential. Therefore, an event source\nof type devrev-webhook is added. In the configuration, the event type is\nspecified as work_created.Input fieldsTo enable users to configure specific comments, input fields must be defined.\nFor our use case, the following input fields are specified:\n\nInput field: This text field empowers users to input a custom message to\nbe added as a comment. The default value is set to \u201cMessage from the input\nfield.\u201d\n\n\nShould extra comment be added?: This boolean field determines whether an\nadditional comment should be included. The default value is set to true.\n\n\nList of extra names: This array field allows users to provide a list of\nnames to be added as comments. The default value is set to [\u201cname1\u201d,\n\u201cname2\u201d].\n\nBy incorporating these input fields, the snap-in becomes more adaptable and\nuser-friendly, enabling users to supply specific comments tailored to their\nneeds.FunctionsWith the groundwork laid out, the next crucial step involves defining the\nfunctions responsible for handling the logic in TypeScript to add comments using\nthe DevRev SDK. The actual implementation of these functions is added in\nthe subsequent step.AutomationsWith the building blocks in place, the final piece of the puzzle involves\ndefining automations. These automations encapsulate a trigger and a\ncorresponding function that executes when an event of a specified type occurs.CommandsTo accommodate the additional trigger, a command must be defined within the\nmanifest file:Function logicHaving established the architectural framework for the snap-in, identified its\ntriggers, and outlined the overall workflow, the next crucial phase involves\ncrafting the functions - function_1 and function_2. These functions serve as\nthe engines driving the business logic behind the snap-in\u2019s behavior.Getting the payloadTo kickstart the implementation process, understanding the structure of the\npayload is paramount. Whether dealing with a work creation event or a command\nevent, having insight into the payload\u2019s composition is crucial. In scenarios\nwhere the payload structure is known, implementation can proceed seamlessly.\nHowever, if the payload structure is uncertain or real data exploration is\ndesired, logging the entire payload becomes an invaluable step.To achieve this, the following code snippet can be added to the index.ts file:Handling DevRev eventHaving gained clarity on the expected payload structure, the next step involves\ncrafting custom code to handle the incoming events. In this context, the\nobjective is to print information based on the event type. The provided\nTypeScript snippet exemplifies a function, handleEvent, tailored for our use\ncase.This function illustrates the process of handling events, extracting necessary\ninformation from the payload, and utilizing the DevRev SDK to create a timeline\nentry comment. It serves as a foundational template that can be adapted based on\nspecific use cases and requirements.Handling command eventFor scenarios where a command event is triggered, a dedicated function,\nhandleCommandEvent, can be implemented to handle the event appropriately. The\nprovided TypeScript snippet outlines the structure of this function,\ndemonstrating how to extract relevant information from the event payload and\nutilize the DevRev SDK to create a timeline entry comment.Deploying the snap-in to your organizationUpon completing and validating the code changes, the next crucial step is\ndeploying the snap-in to your organization. Follow these steps for a seamless\ndeployment:\n\nNavigate to the code folder in your project directory.\n\n\nExecute the following commands in sequence to build, package, and create the\nnecessary artifacts:\n\n\n\nResources\nThe final snap-in code and manifest can be found\nhere"
    },
    {
        "id": "ART-1278",
        "dataset_source": "devrev-dev0",
        "title": "Snap-in triggered by an external source \u2013 DevRev",
        "content": "Snap-in developmentTutorialsIntroduction\nIn this tutorial, you\u2019ll learn how to create a snap-in that responds to an external\nsource, particularly GitHub. The objective is to seamlessly integrate commit\ncomments from GitHub into the DevRev platform.\nBackground context\n\n\nUnderstanding webhooks in GitHub: Explore the fundamentals of\nwebhooks and learn how\nto incorporate them into the GitHub repository. Gain insights into the\nmechanisms of triggering events and handling notifications.\n\n\nExtracting information from external payload: Delve into the external\npayload generated by GitHub and comprehend the process of extracting relevant\ninformation. Understand the structure and content of the payload to\nfacilitate seamless integration with DevRev.\n\n\nEncoding SHA-256 in the header with secret: Learn the technique of\nencoding SHA-256 in the header using a\nsecret key. Learn the security measures involved in ensuring the integrity\nand authenticity of data transmitted via webhooks from GitHub to DevRev.\n\n\nInstallation guide\nInstall DevRev CLI\nInstall jq\nInstall DevRev SDK\nIf you did not follow the getting started tutorial then follow these steps to authenticate and initialize the snap-in TypeScript template:TriggerThe main trigger for this snap-in is an\nexternal webhook, which necessitates\nregistration within GitHub. This ensures that the relevant payloads are\ndispatched to our designated endpoint.ActionThe primary action involves a straightforward process of examining our commit\nmessages and displaying them on the discussion tab of the specified Product\nsection. The configuration for this action can be customized through the input\nparameters of the snap-in.Creating the snap-inUpdating the manifestTo outline the structure of the snap-in, the initial step is to define key\nattributes in the snap-in\u2019s manifest. Begin by specifying the name, description,\nand account display name for the snap-in.ConfigurationTo enhance the flexibility and adaptability of the snap-in, configurable inputs\nneed to be incorporated. In this instance, organization-level inputs are\nintroduced to specify the product part for which comments should be added. This\nconfiguration allows users to customize the behavior of the snap-in by providing\na meaningful description of the product part where comments are intended to be\nadded.Event sourceTo establish the event source from which the snap-in will receive events, the\nflow-custom-webhook event is introduced. This event source serves as the\nconduit for receiving relevant events.Here, in the configuration, two crucial tasks are primarily addressed:\n\nExtracting request body for consumption: The configuration is designed to\nretrieve the body from the incoming request and forward it to the event,\nfacilitating seamless consumption by the handler function. This ensures that\nthe relevant data from the request is accessible for further processing.\n\n\nAuthentication of requests: The configuration plays a pivotal role in\nauthenticating incoming requests by validating the signature present in the\nheader. This validation process involves comparing the signature in the\nheader with the one sent by\nGitHub\nalong with its request body. Detailed setup instructions are provided within\nthe snap-in screen, allowing users to copy the URL and Secret. Subsequently,\nusers can employ this information when\ncreating the webhook\non GitHub. During webhook creation, users can specify the events for which\nthey intend to subscribe, with a focus on the events pertinent to this\nsnap-in: push.\n\nFunctions and automationsWith the foundational configurations in place, the next step involves defining\nthe functions and automations that orchestrate the core logic of the snap-in.\nThese automations serve as the bridge between triggers and functions, ensuring a\nseamless execution flow when specific events are detected.Function logicHaving established the manifest that outlines the overall logic of the snap-in,\nthe subsequent step involves defining the function logic responsible for\nhandling the business logic. The initial point of focus is understanding the\npayload structure of the event, which can be gleaned from the\nGitHub webhook event.Once acquainted with the payload structure, the function logic can be crafted to\nextract pertinent information and utilize the DevRev SDK for creating timeline\nentries on the relevant object.This involves a multi-step process:\n\nPayload structure exploration: Refer to the\nGitHub webhook event\ndocumentation to gain insights into the structure of the payload.\n\n\nInformation extraction: Derive essential information from the payload,\ndiscerning details crucial for the subsequent actions.\n\n\nDevRev SDK integration: Utilize the\nDevRev SDK\nto create timeline entries on the appropriate object, ensuring seamless\nintegration with the DevRev platform.\n\nBy adhering to this process, the function logic is poised to effectively handle\nthe business logic, responding dynamically to incoming events and enriching the\nobject timeline in DevRev.Deploying the snap-in to your organizationUpon completion and validation of the code changes, the subsequent crucial step\ninvolves deploying the snap-in to your organization. Execute the following steps\nfor a seamless deployment:\n\nNavigate to the code folder in your project directory.\n\n\nRun the following commands sequentially to build, package, and generate the\nnecessary artifacts:\n\n\n\nFollowing this, proceed to create your snap-in package and version as\ndescribed in the previous steps.\n\n\nDuring the installation of the snap-in, crucial inputs such as the product\npart description need to be provided. Additionally, it\u2019s imperative to\nregister the webhook in GitHub during this process.\n\n\nResources\nThe final snap-in code and manifest can be found\nhere."
    },
    {
        "id": "ART-1279",
        "dataset_source": "devrev-dev0",
        "title": "Install DevRev CLI \u2013 DevRev",
        "content": "Supported architectures:\nLinux amd64\nLinux arm64\nInstallationDownload the Debian package and install it using the following command:$sudo dpkg -i devrev_0.4.0-linux_amd64.debor$sudo dpkg -i devrev_0.4.0-linux_arm64.debRun the following command to install the completions:$wget https://raw.githubusercontent.com/devrev/cli/main/install_completions.sh && sh install_completions.sh /usr/local/bin/devrevThe Debian path /usr/local/bin/devrev may vary based on your Debian installation.Uninstallation$sudo dpkg -r devrev"
    },
    {
        "id": "ART-1280",
        "dataset_source": "devrev-dev0",
        "title": "DevRev CLI reference \u2013 DevRev",
        "content": "The following is a list of DevRev CLI commands:\nCLI version\nCheck the version of CLI:\n\nCLI help\nTo check all the available commands, run the following command:\n\nUse devrev [command] --help for more information about a command.\nAuthentication\nTo authenticate, run the following command:\n\nArguments:\n\n\n<DevOrg-slug-name>: The unique slug name of your DevOrg to which you want to log in.\n\n\n<your-email@example.com>: Your registered user email for profile.\n\n\nThe browser opens up and asks you to log in to DevRev. Once you log in, a local dev org profile is created and an access token is stored.\nAlternative\nTo set up authentication using the DevRev token, run the following command:\nUsing DevRev\u2019s interface, you can generate a DevRev token.\n\nIt enables CLI operations on the dev org.\nSnap-in package\nCreate a snap-in package\nTo create a snap-in package, run the following command:\n\nFor example:\n\nWhen the snap-in package is created, its ID is stored in the snap-in context. Run the following command to view the ID:\n\nFor example:\n\n[id] is optional. If not provided, it uses the snap-in package ID from the snap-in context.\nDelete a snap-in package\nTo delete a snap-in package, run the following command:\n\nFor example:\n\nIf id isn\u2019t provided, it picks up the snap-in package id from the snap-in context.\nList the snap-in package\nTo list the snap-in package, run the following command:\n\nFor example:\n\nLogs for the snap-in package\nTo view the snap-in package logs, run the following command:\n\nFor example:\n\nAdditional flags:\n\n--after string timestamp after which to fetch logs. For example, 2023-01-15T10:24:17Z. Defaults to 15 minutes earlier.\n--before string timestamp before which to fetch logs. For example, 2023-02-15T10:24:17Z. Defaults to now.\n--filters string Filters for the log message as a JSON. For example, {\"level\": {\"values\": [\"info\"]}, \"dev_org\": {\"exclude\": true, \"values\": [\"don:identity:<partition>:devo/<dev-org-id>\"]} }\n--limit uint32 Number of logs to fetch.\n\nSnap-in version\nCreate a snap-in version\nTo create a snap-in version, run the following command:\n\nFor example:\n\nOnce the snap_in_version is created, its ID is stored in the snap-in context too.\nAdditional flags:\n\n--package <id> : Optional. If not provided, it uses the id from the snap-in context.\n--manifest <path>: specify the path to the manifest.yaml file using this flag.\n--archive <path> : specify the path to the archive file (build.tar.gz) using this flag.\n--create-package: creates a new snap_in_package in interactive mode and then creates a snap-in version using the newly created snap-in package id.\n\nShow the snap-in version\nTo show the snap-in version, run the following command:\n\nFor example:\n\n[id] is optional. If not provided, it uses the snap_in_version id stored in the snap-in context.\nDelete the snap-in version\nTo delete a snap-in version, run the following command:\n\nFor example:\n\n[id] is optional. If not provided, it uses the id stored in the snap-in context.\nList the snap-in versions\nTo list the snap-in version, run the following command:\n\nFor example:\n\nAdditional flags:\n\n--package <id>: Optional. If not provided, it uses the id from the snap-in context.\n\nSnap-in\nCreate a snap-in draft\nTo create a snap-in draft instance, run the following command:\n\nFor example:\n\nAdditional flags:\n\n--snap_in_version [id]: Optional. If not provided, it uses the snap-in version ID from the snap-in context.\n\nOnce the snap_in draft command is successful, it also generates the interface link.\nUpdate the snap-in with keyrings and inputs\nTo update the snap-in with keyrings and inputs, run the following command:\n\nFor example:\n\n[id] is optional. If not provided, it uses the snap_in id stored in the snap-in context.\nFor non-interactive mode, use the following command with the appropriate values:\n\nActivate the snap-in\nTo activate a snap-in, run the following command:\n\n[id] is optional. If not provided, it uses the ID stored in the local profile.\nDeactivate the snap-in\nTo deactivate a snap-in, run the following command:\n\n[id] is optional. If not provided, it uses the ID stored in the local profile.\n--force flag deactivates the snap-in even if the deactivate hook fails. If the flag isn\u2019t specified, then the snap-in moves to the Error state if the deactivate hook fails.\nShow the snap-in details\nTo show the snap-in details, run the following command:\n\n[id] is optional. If not provided, it uses the ID stored in the local profile.\nList the snap-ins\nTo list the snap-ins, run the following command:\n\nFor example:\n\nDelete a snap-in\nTo delete a snap-in, run the following command:\n\n[id] is optional. If not provided, it uses the id stored in the snap-in context.\nThe --force flag deletes the snap-in even if the deactivate hook fails. If the flag isn\u2019t specified, then the snap-in moves to the Error state if the deactivate hook fails.\nSnap-in context\nThe CLI persists in the context of the CLI in a snap-in context. The context is used to store the following information per snap-in package slug:\n\nThe ID of the snap-in package owning the slug.\nThe ID of the last created/upgraded snap-in version, if any.\nThe ID of the latest deployed snap-in, if any.\n\nShow the snap-in context\nTo show the current snap-in context, run the following command:\n\nFor example:\n\nOutput:\n\nList the snap-in context\nTo list the snap-in context, run the following command:\n\nFor example:\n\nCheckout a snap-in context\nTo check a different snap-in context, run the following command:\n\nFor example:\n"
    },
    {
        "id": "ART-1281",
        "dataset_source": "devrev-dev0",
        "title": "Snap-in manifest \u2013 DevRev | Docs",
        "content": "Snap-in developmentReferencesThe following section is for version 2 of the manifest specification. For the previous version, see Manifest V1.\nThe snap-in manifest is what the developers write to define a snap-in. The manifest has the following sections:\nVersion\nThe version specifies the manifest version. The following documentation is for version 2 of the manifest. In the manifest, specify the following:\n\nKeyrings\nKeyrings are secret tokens used to make calls to external systems. They can be categorized either as organization scoped or user scoped. Keyrings are specified in the manifest with the following syntax:\n\nFor example:\n\nKeyrings defined in the manifest can be provided in the snap-in configuration screens and are made available to the function. The keyring type is used to determine the type of the keyring and restricts selection on the configuration screen to valid types.\nOrganization keyrings are common to the organization, while user keyrings are set per user. User keyrings are optional, so the developer must correctly handle cases where the keyring isn\u2019t found.\nTo view the supported connection types, see Keyrings.\nDeveloper keyrings\nDeveloper keyrings are provided by the snap-in version developer. They\u2019re available across all installations and hidden from the installer. Only the secret string type can be used as developer keyrings.\n\nFor example:\n\nSelect the developer connection while creating snap_in_version. The DevRev CLI automatically detects such keyrings in the manifest and asks for them:\n\nDeveloper keyrings can only be created in the UI. They\u2019re of the Snap-in Secret type.\nEvent sources\nEvent sources can be categorized as \u201corganization\u201d level and \u201cuser\u201d level. Event sources are specified in the manifest with the following syntax:\n\nRefer to Event sources for a checklist of supported event sources and their corresponding event types.\nRefer to the webhook event-request example for a list of supported webhooks:\n\nFor example:\n\nInputs\nInputs are implemented using per-object schemas, which is a customization technique to store custom schemas inline with the object. Each input\u2019s schema maps to a FieldDescriptor. Inputs, like keyrings and event sources, are organization and user scoped. Organization-scoped inputs are set by the admins of the organization and are common across all users. User inputs are set individually.\nInputs are defined as:\n\nInputs of type timestamp, date and array of booleans aren\u2019t supported.\n\nIn the manifest, pass the name and description of the tag.\nFor example:\n\nCommands\nIn the manifest, you need to specify the command\u2019s name, its namespace, and the surfaces where it can appear, such as comment discussions. It also specifies the UI description, usage hints, and the function to be triggered when the command is invoked.\n\nFor commands, the <name, namespace> pair should be unique across the Org in which it\u2019s installed.\nFunctions\nIn the manifest, pass the name and description of the functions.\n\nFor functions, you also need to provide the actual JS/TS code behind this function. Refer to the README in the provided template.\nAutomations\nAutomation refers to linking events from the event sources to your functions.\nAutomations are defined as:\n\nFor custom event sources, whatever event key you emit from your policy, the event name will be custom:<your event key>."
    },
    {
        "id": "ART-1282",
        "dataset_source": "devrev-dev0",
        "title": "Snap-in V1 manifest \u2013 DevRev",
        "content": "The following guide is for the version 1 of the manifest spec. For the latest version, refer to Manifest.\nThe snap-in manifest is what the developers write to define a snap-in. The manifest has the following sections:\nVersion\nThe version of the manifest. The below documentation is for version 1 and should be specified in the manifest as:\n\nConnections\nConnections are specified in the manifest with the following syntax:\n\nExample:\n\nService that stores these secrets and has the business logic to refresh tokens, when applicable. Here is the list of currently supported connection types - Connections\nDeveloper connections\nDeveloper connections are defined during the development by the snap-in developer. They are available across all installations and invisible to the installer.\nOnly snap-in secret string type is supported for developer connections.\n\nExample:\n\nThe developer connection can be selected while creating the snap_in_version. DevRev CLI detects the developer connections in the manifest and prompts for them:\n\nDeveloper connections can only be created in the UI. They are of type \u201csnap-in Secret\u201d.\nEvent sources\nEvent sources are specified in the manifest with the following syntax:\n\nHere is the list of supported event sources.\nExample:\n\nGlobals\nGlobals are implemented today using per-object schemas, which is a customization term to store custom schemas in line with the object. Each global\u2019s schema maps to a FieldDescriptor.\nThe definition of globals looks like this:\n\n\nDefine a tag by passing just the name and description of the tag.\nExample:\n\nCommands\nIn the manifest, you need to specify the name of the command, its namespace, the surfaces where it can show up (such as comment discussions), a description that can show up on the UI, usage hints, and the function to be triggered when the command is invoked.\n\nFor commands, the <name, namespace> pair should be unique across the Org in which it\u2019s installed.\nFunctions\nIn the manifest, all you need to tell is the name of the function, and its description, just like tags:\n\nFor functions, you also need to provide the actual JS/TS code behind this function, for that, you can refer to the README in the provided template.\nAutomations\nAutomation is where you would link events from the event sources to your function. The definition of automations looks like this:\n\nFor custom event sources, whatever event key you emit from your policy, the event name would be \u201ccustom:<your event key>\u201d."
    },
    {
        "id": "ART-1283",
        "dataset_source": "devrev-dev0",
        "title": "Keyrings \u2013 DevRev | Docs",
        "content": "Snap-in developmentReferencesKeyrings are a DevRev-specific mechanism for managing authentication with external services. Keyrings are called Connections in the DevRev app.\nKeyrings provides a secure way to store and manage credentials for external services within your DevRev snap-in. This eliminates the need to expose sensitive information like passwords or access tokens directly within your code or configuration files, enhancing overall security.\nFor more information, refer to Keyrings in the snap-in manifest. They can be categorized into two main types:\n\nDefault keyrings:\n\n\nOrganization scoped keyrings: These are secrets used by the entire organization, for example, a Slack token for a workspace.\nUser scoped keyrings: These are secrets for a single user, for example, the token to interact with a single person\u2019s Google Calendar.\n\nDuring installation, the user will be prompted to provide credentials for each keyring.\n\nBreakdown:\n\n\nname: A unique identifier for the keyring in the snap-in.\n\n\ndescription: A human-readable description of the keyring shown to the user at the time of snap-in installation.\n\n\ntypes: The list of possible keyring types that the user can provide.\n\n\ndisplay_name: The name that\u2019s shown to the user when they\u2019re asked to provide a keyring.\n\n\nAll user-scoped keyrings are optional in the snap-in, and developers must handle the case where a user-scoped keyring isn\u2019t found.\nIf you are using version 1 of the manifest, you can omit the organization key in the keyring definition and directly provide the keyring definition as a list. All keyring defined in manifest version 1 are organization-scoped.\nAdditionally, the keyword connections is used instead of keyrings in manifest version 1.\n\n\nDeveloper scoped keyrings: These are secrets accessible and usable only by the developer creating the snap-in, typically used for personal development workflows.\n\n\n\nBreakdown:\n\n\nname: A unique identifier for the keyring in the snap-in.\n\n\ndescription: A human-readable description of the keyring shown to the user at the time of snap-in installation.\n\n\ndisplay_name: The name that\u2019s shown to the user when they\u2019re asked to provide a keyring.\n\n\nEnable external service connections with keyring types\nWhile DevRev offers pre-defined keyring types for common services, you can leverage this mechanism further to create custom types for specific service integrations.\nPre-defined keyring types:\n\n\ndevrev-snap-in-secret: Stores simple string tokens utilized by the snap-in itself.\n\n\ndevrev-atlassian-jira-oauth: Facilitates OAuth connections for integrating with Jira.\n\n\n\ndevrev-slack-oauth: Facilitates OAuth connections for integrating with Slack.\n\n\n\ndevrev-google-oauth: Facilitates OAuth connections for integrating with Google.\n\n\n\ndevrev-github-oauth: Facilitates OAuth connections for integrating with GitHub.\n\n\n\ndevrev-zendesk-oauth: Facilitates OAuth connections for integrating with Microsoft.\n\nManifest Declaration:\n\n\n\n\n\nCustom keyring types for OAuth:\nDeveloper Keyring:\n\n\nThe developer_keyrings type allows the creation of keyrings that hold sensitive information like client IDs and client secrets required for OAuth authorization with external services. These keyrings are intended for development environments and should not be used in production due to security concerns.\nHere\u2019s an example configuration snippet demonstrating a developer_keyring named custom-oauth-credentials:\n\n\n\nTo create a developer keyring, follow these steps:\n\n\nReplace $CLIENT_CREDENTIALS in the following command with your actual OAuth client ID and client secret combined into a JSON string.\n\n\nExecute Command: Run the following command, replacing <name of the keyring> with your desired keyring name.\n\n\n\nThe keyring will be passed while snap_in_version is being created.\nKeyring usage in manifest:\n\n3.1. Reusing Predefined keyring_type with Custom Scopes:\nHere\u2019s an example of a custom keyring type for an existing OAuth2 keyring type while customizing the required scopes for your specific external service.\n\n3.2. Custom keyring type definition:\nThis approach defines a new, entirely custom keyring type with complete control over the OAuth flow configuration.\n\n\n\nDefine Basic keyring type:\nHere\u2019s an example of a custom keyring type for establishing secure Basic Auth connections within your snap-in:\n\n\n\nDefine Multi-filed keyring:\nHere\u2019s an example of a custom keyring type for establishing secure connections with multiple fields within your snap-in:\n\n\n\nSupported keywords in keyring_type configuration:\nThe supported keywords that can be dynamically inserted into URLs, headers, and query parameters within your custom keyring type configuration.\n[ACCESS_TOKEN]: The access token obtained during the OAuth flow.\n[REFRESH_TOKEN]: The refresh token obtained during the OAuth flow.\n[CLIENT_ID]: The client ID obtained from the OAuth client credentials.\n[CLIENT_SECRET]: The client secret obtained from the OAuth client credentials.\n[SCOPE]: The scope of the OAuth flow.\n[API_KEY]: The API key obtained from the basic flow.\n\nFor examples of how to use keyrings in your snap-in, refer to the Keyring API documentation."
    },
    {
        "id": "ART-1284",
        "dataset_source": "devrev-dev0",
        "title": "Event sources \u2013 DevRev | Docs",
        "content": "Snap-in developmentReferencesSupported event source types and their event types\nEvent source codeEvent source nameEvent type codeRemarksDocumentation URLdevrev-webhookDevRev webhookAll supported DevRev webhook event typesDevRev webhook events such as work_created and conversation_updatedDevRev Webhookflow-eventsFlow EventsConfigurableEvent sources schedule and publish events directly from a snap-in.Scheduled eventsflow-custom-webhookFlow Custom webhookConfigurableA generic webhook with a URL and configurable authentication logic.Generic event sourcestimer-eventsTimer Eventstimer.tickSends a timer.tick event based on a configured schedule.Timer-based event sourcesemail-forwardEmail Forwardemail.receiveUsed for receiving emails forwarded from an email inbox/mailing list.Email-based event source\nEvent source instructions\nYou can provide custom instructions for each event source. These instructions are shown to the user when installing the snap-in. The instructions are written in markdown and can be provided in the setup_instructions field of the event source.\nTo provide dynamic instructions, you can access some metadata from event source objects. The following fields are accessible:\n\n{{source.name}}: Name of the event source\n{{source.trigger_url}}: Webhook URL\n{{source.config.<field_name>}}: Fields from within the event source configuration\n\nFor example:\n\nDevRev Webhook\nThe devrev-webhook event source can be used to listen for events occuring on DevRev. These includes events like work_created and conversation_updated.\nThe payload of the events is defined by the Webhooks Event Schema.\nWebhook-event-request example:\n\nWebhook Filters\nTo limit the events being sent to a webhook, you can also specify a jq query as a filter. This filter is applied on the webhook before the event is dispatched. If no filter is specified, then all events are sent.\nThe jq query can reference the event payload as . and the user creating the webhook as $user. The $user object only contains one string field: the id of the webhook creator.\nThe filter must return a boolean value. If the filter returns true, the event is dispatched to the webhook. If the filter returns false, the event is not dispatched to the webhook.\nFor example, to create an event source which listens for issue creation and comments on issues, you can define the event source as follows:\n\nScheduled events\nflow-events are an event source that snap-ins can use to publish or schedule events directly. This event source can then be used to trigger another automation. This capability makes it ideal for building snap-ins that need to act later. For example, sending reminders to issues still in the Triage stage.\nYou create an event source of type flow-events, and from your snap-in, you call the DevRev API to schedule an event for this event source. The following example illustrates how this works:\nmanifest.yaml\n\nIn this example, the first automation schedules an event with a delay of 30 seconds for the event source scheduled-events.\nThe second automation then binds function_2 to this event source. So the scheduled event executes function_2 30 seconds after the work is created.\nIn function_1, you can publish the event as follows:\n\nIn function_2, you can use the payload of the scheduled event as follows:\n\n\nTo cancel scheduled events, you can utilize the /event-sources.unschedule API. For API details, see event-sources-delete-scheduled-event.\nGeneric event sources\nYou can create a generic event source if you need an event source not supported by DevRev. A generic event source includes a webhook URL and developer-provided code on how to validate the events coming on the URL.\nFor example, let\u2019s say you want to connect to a source that can publish events to a webhook URL, and it hashes the entire request payload with the shared secret and adds an HTTP header X-Signature-256 with value as the hash. Then, you can provide the custom code (currently in rego) to validate the payload with the same algorithm. You would also calculate the hash and verify with the value present in the header to avoid someone else tampering in between.\nTo create a generic event source in your manifest, you create an event source with the type flow-custom-webhook and config containing a key policy which contains the rego code.\nThe input passed to the policy is the following JSON:\n\nThe policy must return an object output in the following format:\n\nExample of a generic event source. This event source authenticates the incoming request by checking the header X-Signature-256.\n\nThe event_key output of the policy can be used to define an automation on the event custom:event_key. For example:\n\nHere, you are creating an event source with the name custom-webhook, and the policy validates that there should be a header X-Signature-256 with a value of HMAC-SHA256 of raw request body.\nA sample curl command to trigger this event source manually is:\n\nTimer-based event sources\nTimer-based event sources can be created to send events based on intervals and cron schedules. In the following example, you have two event sources, one emits events daily at 12:00am, the other every hour (3600 seconds). In the event payload, you see the JSON field metadata you specified in the event source configuration.\n\nThe automation event type for timer events is timer.tick. To initiate an automation based on timer events, use the following syntax in manifest.yaml:\n\nThe payload contains the metadata fields you specified in the event source configuration. For example, {\"event_key\": \"daily_events\"} for the daily-timer-source.\nEmail-based event sources\nYou can create an email-based event source that can be used to write automations on top of emails. For this, a sample of the YAML is shown below:\n\nThe event type of the events emitted by this event source is email.receive.\nWhen a snap-in using such an event source is deployed, the instructions show a unique email address. You have to set up forwarding in your original\nemail inbox or Google Group to this email address. In the example above, if the forwarding address is v1.abc.xyz@hooks.devrev.ai, you should set up email\nforwarding from test@company.com to v1.abc.xyz@hooks.devrev.ai.\nOnly emails forwarded from the allowlist of emails/domains are emitted as events. Hence, this event source should be used for email forwarding only, not as a direct mailbox to which anyone can send their emails. Emails received (either directly or by forwarding) from senders who aren\u2019t in the allowlist are dropped. There are a few exceptions to this like Google\u2019s forwarding confirmation emails.\nThe allowlist can either contain an email address or an entire domain. Strict matching is done for domains, meaning that subdomains are not included.\nThe email protocol regarding forwarding is not very well defined. We\u2019ve tested forwarding from common sources like Gmail, Google Groups, and Outlook Inbox. However, if you\u2019re having issues with email forwarding on other providers, feel free to contact us.\nPayload\nBelow is a sample payload of the events produced by the email event source:\n\nBelow is a brief description of the fields:\n\nemailBody: The plain text body of the email.\nhtmlBody: The HTML body of the email.\nfrom: List of from email addresses of the email.\nto, cc, bcc: List of recipient email addresses.\ninReplyToId: Message ID of the email (if received mail is a reply to some other previous mail).\nmessageId: Message ID of the received email.\nrawBodyArtifactId: Artifact ID for the raw email (in MIME format) received on the event source. You can use the artifact APIs to download this email if you need to.\nartifactIds: Artifact IDs for attachments in the email.\nreplyTo: Reply-To header of the email.\nsentOn: Timestamp when email was sent (in UTC).\nsubject: Subject of the email.\n"
    },
    {
        "id": "ART-1285",
        "dataset_source": "devrev-dev0",
        "title": "Inputs \u2013 DevRev | Docs",
        "content": "Snap-in developmentReferencesInputs are settings for a snap-in that allows behavior customization. They\u2019re\nscoped to either an organization or a user. Organization-scoped inputs remain\ncommon for the organization, while user-scoped settings need to be set for each\nuser. Each input\u2019s schema maps to field descriptor. Snap-ins don\u2019t support inputs\nof type date, timestamp or array of booleans.\nRefer to schema field descriptor example for other supported global types:\n\nFor example, if an organization input to select a part and a user input to select an array of enums need to be implemented:\n"
    },
    {
        "id": "ART-1286",
        "dataset_source": "devrev-dev0",
        "title": "Commands \u2013 DevRev | Docs",
        "content": "Snap-in developmentReferencesUsing commands, the end user can interact with the snap-in through any defined surface. Under the commands section of the snap-in manifest, commands are defined. For example, you can define a command called close that moves an issue and its children to the completed state as follows:\n\nThe description of the command\u2019s fields is as follows:\n\nname: This is the name of the command used by the user to trigger it.\nnamespace: it\u2019s used to distinguish commands installed from different snap-ins with the same name. Ensure the namespace is appropriate for your snap-in.\ndescription: Displayed when a list of commands is displayed to the user.\nusage_hint: A hint showing how to pass parameters to a command.\nfunction: When the command is executed, this function is triggered by the snap-in.\nsurfaces: The surface where the command is enabled. More details in below table:\n\nSurfaceObject typesRemarksdiscussionsissueEnable command on the Discussions tab of issuesticketEnable command on the Discussions tab of ticketsconversationEnable command on the Discussions tab of conversationspartEnable command on the Discussions tab of partsworkspacesEnable command on the Discussions tab of workspacesrev_userEnable command on the Discussions tab of rev_usersaccountEnable command on the Discussions tab of accountssnap-inEnable command on the Discussions tab of snap_insopportunityEnable command on the Discussions tab of opportunity"
    },
    {
        "id": "ART-1287",
        "dataset_source": "devrev-dev0",
        "title": "Functions \u2013 DevRev | Docs",
        "content": "Snap-in developmentReferencesUsing functions, you can provide custom code and link it to your event sources, automations, or snap-kit actions. Functions are written in JavaScript and can be used to transform events, send notifications, or perform any other custom logic including network calls.\nIn order to create a snap-in version, functions must be defined as shown in the code samples. Functions are packaged and provided as an artifact at the time of snap-in version creation and then used to deploy functions to snap-in versions. An artifact may contain multiple function definitions. The artifact is a zip file containing the following files:\n\nFunction manifest\nThe function manifest consists of the following fields:\n\n\nname: It is the function name that should match the corresponding function name in the folder.\ndescription: It describes the function.\n\nRefer to the function invocation for details about the exact payload of the function."
    },
    {
        "id": "ART-1288",
        "dataset_source": "devrev-dev0",
        "title": "Function invocation \u2013 DevRev | Docs",
        "content": "Snap-in developmentReferencesA function can be invoked synchronously or asynchronously.\nYou need to implement the run method in your function. The run method is called when the function is invoked. The run method signature is defined below:\n\nAs of now, it\u2019s safe to assume that only one event is passed to the function at a time. The function can be invoked multiple times for multiple events.\nThe value returned from the run method is passed back in synchronous execution modes, such as commands, snap kit actions, and event source synchronous execution. In asynchronous execution modes, such as automation execution, the return value is ignored."
    },
    {
        "id": "ART-1289",
        "dataset_source": "devrev-dev0",
        "title": "Hooks \u2013 DevRev | Docs",
        "content": "Snap-in developmentReferencesHooks enable developers to invoke functions when various events in the lifecycle of a snap-in occur. They can be used to validate inputs and keyrings, as well as to register, update, and deregister resources on external systems.\nHooks can be used to catch errors early in the deployment cycle of a snap-in and enable semantic validation.\nIn order to define hooks, you can add the following section to your manifest:\n\nThe above definition would register the hooks and invoke the provided functions alongside each hook. The functions can be defined in the manifest and provided in the code as explained in the functions reference.\nFor the event schema received by the function invocation, refer to the function invocation reference.\nThe event name is the identifier for the hook. The event name can be used to identify the hook that\u2019s being invoked. The identifiers are defined in the summary table below.\nThe following hooks are available: validate, activate, deactivate, and update.\nValidate hook\nThe validate hook is invoked when the snap-in user updates the inputs and keyrings of the snap-in or activates the snap-in. The snap-in can perform validation checks based on the inputs and keyrings provided by the user. If the validation fails, the process stops and the error message is shown to the user.\nThe event.payload field is an empty json object {}.\nAn error can be returned by throwing the following from the function\u2019s run method:\n\nActivate hook\nThe activate hook is executed when the user tries to activate the snap-in from the DRAFT, INACTIVE, or ERROR state. The snap-in moves to the ACTIVATING state and executes the hook function. If the function throws an error, the snap-in moves to the ERROR state. If all actions are completed, the snap-in moves to the ACTIVE state. Please note, the activate hook is triggered whenever the snap-in moves to the ACTIVE state, so ensure that the actions performed aren\u2019t duplicated and are idempotent.\nThe event.payload field is an empty json object {}.\nAn error can be returned by throwing the following from the function\u2019s run method:\n\nDeactivate hook\nThe deactivate hook is executed when the snap-in user tries to deactivate the snap-in from the ACTIVE or ERROR state. If the hook fails and throws an error, the snap-in fails to deactivate and moves to the ERROR state. If the hook succeeds, the snap-in moves to the INACTIVE state.\nThe hook is also executed when the snap-in is being deleted. If the hook fails and throws an error, the snap-in fails to delete and moves to the ERROR state. If the hook succeeds, the snap-in is deleted.\nIf the force flag was passed when deactivating or deleting the snap-in, then the hook failure is ignored, and the snap-in moves to the INACTIVE state or is deleted.\nThe event payload conforms to the following schema.\n\nAn error can be returned by throwing the following from the function\u2019s run method:\n\nUpdate hook\nThe update hook is executed when the snap-in is in the ACTIVE state and the user updates the snap-in configuration with validated inputs configuration. Based on the updated input values, the snap-in can perform some actions such as changing event-types required in external webhooks. If any action fails and throws an error, the snap-in configuration isn\u2019t updated and the error message is shown to the user. If all the actions are completed, the snap-in configuration is updated successfully.\nThe validate hook is executed before the update hook. If the validate hook fails, the update hook isn\u2019t executed.\nAn error can be returned by throwing the following from the function\u2019s run method:\n\nThe following diagram illustrates the state machine for a snap-in and the invocation of different hooks.\n\nThe following table summarizes the hooks.\nHook NameEvent IdentifierFrom StateTo StateAsynchronousvalidatehook:snap_in_validateDRAFT, ACTIVEACTIVATING, ACTIVEFalseactivatehook:snap_in_activateDRAFT, INACTIVE, ERRORACTIVE, ERRORTruedeactivatehook:snap_in_deactivateACTIVE, ERRORINACTIVE, ERRORTrueupdatehook:snap_in_updateACTIVEACTIVEFalse"
    },
    {
        "id": "ART-1290",
        "dataset_source": "devrev-dev0",
        "title": "Snapkit \u2013 DevRev | Docs",
        "content": "Snap-in developmentReferencesThis section explores how to create a custom user interface using snap-kit and DevRev.\nUnderstanding the structure\nThe snap-kit JSON has a top-level structure with object, body, type, and snap_kit_body fields. The snap_kit_body field contains information regarding snap-kit\u2019s structure.\nFor example:\n\nSnap-kit body\nThe snap_kit_body field has the following properties:\n\nsnap_in_id: A unique identifier for the snap-kit.\nsnap_in_action_name: The name of the action this snap-kit represents.\nbody: An object that holds the actual snap-kit content in the form of snaps.\n\nFor example:\n\nBody\nThe body field contains an array of snaps. Each snap can have a type, and depending on the type, it has different properties.\nSnaps\nThe following snap types are supported:\nBase types\n\nSnap\nAction\nFocusable\nPlaceholder\nDisabled\nHideable\nLayout\n\nUser interface elements\n\nButton\nDivider\nImage\nPlain Text\nRich Text\n\nForm elements\n\nCheckboxes\nInput\n\nPlain Text Input\nNumber Input\nEmail Input\nRich Text Input\n\n\nList Input\n\nString List Input\nNumber List Input\nEmail List Input\n\n\nStatic Select\nMulti Static Select\nRadio Buttons\nToggle Button\nUpload Input\n\nLayout elements\n\nActions\nCard\nContent\nForm\nLayout\nInput Layout\n\nData pickers\n\nPart Picker\nTag Picker\nUser Picker\n\nAction payloads\nSnap-kit generates payloads when a user interacts with an actionable snap. The payload is sent to the backend and can be used to perform actions. The following snaps generate payloads:\n\nButton\nCheckboxes\nInput and all its types (Plain Text Input, Number Input, Email Input, Rich Text Input)\nList Input and all its types (String List Input, Number List Input, Email List Input)\nStatic Select\nMulti Static Select\nRadio Buttons\nToggle Button\nUpload Input\nForm\nPart Picker\nTag Picker\nUser Picker\n\nBase Payload\nAll actionable snaps share the same base payload structure. The base payload has the following structure:\n\nBase Types\nMany elements share the same base properties. The base types these elements inherit from are described below.\nSnap\nA snap is the base type that all other snaps inherit from.\nProperties\n\ntype (required): Type of snap\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nAction\nBase interface for action components.\nAction types\nThere are two types of action:\n\nRemote action: It triggers a backend API and is handled by the backend.\nClient action: It triggers a client-side action and is handled by the client.\n\nProperties\n\naction_id (required): An identifier for the action. It should be unique in the snap.\naction_type (optional): Indicates whether the backend or client handles the action. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of snap.\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nFocusable\nBase interface for focusable components.\nProperties\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nPlaceholder\nBase interface for components that can have a placeholder.\nProperties\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nDisabled\nBase interface for components that can be disabled.\nProperties\n\ndisabled (optional): Indicates whether the element is disabled.\n\nHideable\nBase interface for components that can be hidden.\nProperties\n\nhidden (optional): Indicates whether the element is hidden.\n\nLayout\nControls how the layout is displayed. Similar to flexbox.\nProperties\n\ndirection (optional): The direction of the layout. Similar to flex-direction. Possible values: \"row\", \"column\".\nalignment (optional): The alignment of the layout. Similar to align-items. Possible values: \"start\", \"center\", \"end\", \"baseline\", \"stretch\".\njustify (optional): The justification of the layout. Similar to justify-content. Possible values: \"start\", \"center\", \"end\", \"between\", \"around\", \"evenly\".\n\nUser interface elements\nButton\nA button that can be clicked to trigger an action. Works with Actions and Form blocks.\nProperties\n\ntext (required): The text to be displayed on the button.\nstyle (optional): The style of the button. Defaults to \"default\". Possible values: \"default\", \"primary\", \"destructive\".\nvalue (required): The value associated with the button. It\u2019s sent along with the interaction payload.\nhref (optional): If the button is a link, this is the URL it links to.\ndisabled (optional): Disables the input and prevents changes to the value.\ndisabled_text (optional): The text that\u2019s shown on hover if the component is disabled.\n\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the button component, should be set to \"button\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action and is unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nExample\nButton variants are displayed in a row using the Card snap.\n\n\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"button\".\n\nExample payload\n\nDivider\nA divider component is used to separate blocks.\nProperties\nThe divider component does not have any properties of its own.\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the divider component, should be set to \"divider\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nExample\nDivider is used in a form to separate a name input and a multi-select input.\n\n\nImage\nAn image block that displays an image. Works with Content blocks.\nProperties\n\nimage_url (required): The URL of the image.\nalt_text (required): The alt text to be displayed when the image can\u2019t be displayed. This shouldn\u2019t contain any markup.\nfill_container (optional): Whether the image should stretch to fill the container while maintaining its aspect ratio.\n\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the image component, should be set to \"image\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nExample\nImage used in a card, with default display mode (fill_container not set).\n\n\nImage used in a card, with fill_container set.\n\n\nPlain text\nA plain text element is used to define unformatted text.\nProperties\n\ntext (required): The plain text content.\n\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the element, should be set to \"plain_text\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nExample\n\n\nRich text\nA rich text element is used to define formatted text.\nProperties\n\ntext (required): The rich text content.\n\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the element, should be set to \"rich_text\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nExample\n\n\nForm elements\nPlain text option\nPlain text options are a commonly shared component of different form elements. It\u2019s used to define an option in a form element.\n\ntext (required): A Plain Text element representing the option.\nvalue (required): A value assigned to the option.\ndescription (optional): An optional Plain Text element describing the option.\n\nCheckboxes\nA component that provides a group of checkboxes that allow a user to choose multiple items from a list of options. Works with Input Layout and Actions blocks.\nProperties\n\noptions (required): A list of options that appears in a stack of checkboxes, of type Plain Text Option.\ninitial_options (optional): The initially selected options.\n\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the checkbox group component, should be set to \"checkboxes\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\n\n\nAction payload\nInherits type, action_id, action_type, and timestamp from Base Payload, type is set to \"checkboxes\".\n\nExample payload\n\nInput\nThere are 4 supported input types:\n\nPlain Text Input\nNumber Input\nEmail Input\nRich Text Input\n\nProperties\nThe input component does not have any properties of its own. See specific variants below for their properties.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the input component. Should be set according to the input type, see below.\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nPlain text input\nA plain-text input, similar to the HTML <input> tag, creates a field where a user can enter freeform data. It can appear as a single-line field. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the input component, should be set to \"plain_text_input\".\n\nAdditional properties\n\ninitial_value (optional): The initial value in the input when it\u2019s loaded.\nmultiline (optional): Indicates whether the input should allow multiple lines of text. Defaults to false.\nmin_length (optional): The minimum text length, can\u2019t be greater than max_length.\nmax_length (optional): The maximum text length, can\u2019t be less than min_length.\nresize (optional): Indicates whether the input should be resizable. Defaults to false.\n\nExample\n\n\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"plain_text_input\".\n\nExample payload\n\nNumber input\nA number input, similar to the HTML <input> tag, creates a field where a user can enter numbers. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the input component, should be set to \"number_input\".\n\nAdditional properties\n\ninitial_value (optional): The initial value in the input when it\u2019s loaded.\nmin_value (optional): The minimum value, can\u2019t be greater than max_value.\nmax_value (optional): The maximum value, can\u2019t be less than min_value.\n\nExample\n\n\nAction payload\nInherits type, action_id, action_type, and timestamp from Base Payload, type is set to \"number_input\".\n\nExample payload\n\nEmail input\nAn email input, similar to the HTML <input> tag, creates a field where a user can enter email. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the input component, should be set to \"email_text_input\".\n\nAdditional properties\n\ninitial_value (optional): The initial value in the input when it\u2019s loaded.\n\nExample\n\n\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"email_text_input\".\n\nExample payload\n\nRich text input\nA rich text input shows a rich text editor where the user can enter formatted text (Markdown). Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the input component, should be set to \"rich_text_input\".\n\nAdditional properties\n\ninitial_value (optional): The initial value in the input when it\u2019s loaded.\n\nExample\n\nThe following video shows the rich text input in action.\n\n\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"rich_text_input\".\n\nExample payload\n\nList input\nThere are 3 supported list input types:\n\nString List Input\nNumber List Input\nEmail List Input\n\nProperties\nThe list input component does not have any properties of its own. See specific variants below for their properties.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the list input component. Should be set according to the list input type, see below.\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nString list input\nA string list input allows users to enter a list of text items. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the input component, should be set to \"string_list\".\n\nAdditional Properties\n\nmin_items (optional): The minimum number of items that can be added. Defaults to 1.\nmax_items (optional): The maximum number of items that can be added.\nmultiline (optional): Indicates whether the input should allow multiple lines of text. Defaults to false.\nmin_item_length (optional): The minimum text length of the inputs, can\u2019t be greater than max_item_length.\nmax_item_length (optional): The maximum text length of the inputs, can\u2019t be less than min_item_length.\ninitial_values (optional): The initial values in the inputs when they are loaded. This is an array of strings. If min_items or max_items are set, the length of the array should be within the range.\n\nExample\nStandard string list input with a minimum of 1 item, maximum of 3 items, minimum item length set to 3 and maximum item length set to 15.\n\n\nMultiline string list input with a minimum of 1 item and a maximum of 2 items.\n\n\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"string_list\".\n\nExample payload\nStandard string list input.\n\nMultiline string list input.\n\nNumber List Input\nA list of numbers input allows users to enter a list of numeric items. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the input component, should be set to \"number_list\".\n\nAdditional Properties\n\nmin_items (optional): The minimum number of items that can be added.\nmax_items (optional): The maximum number of items that can be added.\nmin_item_value (optional): The minimum value of the inputs, can\u2019t be greater than max_item_value.\nmax_item_value (optional): The maximum value of the inputs, can\u2019t be less than min_item_value.\ninitial_values (optional): The initial values in the inputs when they are loaded. This is an array of strings. If min_items or max_items are set, the length of the array should be within the range.\n\nExample\n\n\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"number_list\".\n\nExample Payload\n\nEmail List Input\nA list of email input allows users to enter a list of emails. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the input component, should be set to \"email_list\".\n\nAdditional Properties\n\nmin_items (optional): The minimum number of items that can be added.\nmax_items (optional): The maximum number of items that can be added.\ninitial_values (optional): The initial values in the inputs when they are loaded. This is an array of strings. If min_items or max_items are set, the length of the array should be within the range.\n\nExample\n\n\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"email_list\".\n\nExample Payload\n\nStatic Select\nA select menu that allows a user to choose one item from a list of options. Works with Input Layout and Actions blocks.\nProperties\n\noptions (required): A list of options that appear in the menu, of type Plain Text Option.\ninitial_selected_option (optional): The initial option that\u2019s selected when the element is loaded. A single option that exactly matches one of the options within options.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the static select component, should be set to \"static_select\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nA static select snap with 4 options.\n\n\nAction payload\nInherits type, action_id, action_type, and timestamp from Base Payload, type is set to \"static_select\".\n\nExample Payload\n\nMulti Static Select\nA select menu that allows a user to choose multiple items from a list of options. Works with Input Layout and Actions blocks.\nProperties\n\noptions (required): A list of options that appear in the menu, of type Plain Text Option.\ninitial_selected_options (optional): The initial options that are selected when the element is loaded. Each of them should exactly match one of the options within options.\nmax_selected_items (optional): The maximum number of items that can be selected.\n\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the multi-static select component, should be set to \"multi_static_select\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nA multi-static select snap with 4 options.\n\n\nAction payload\nInherits type, action_id, action_type, and timestamp from Base Payload, type is set to \"multi_static_select\".\n\nExample Payload\n\nRadio Buttons\nList of radio inputs that allow a user to choose one item from a list of options. Works with input layout and actions blocks.\nProperties\n\noptions (required): A list of options that appear in a stack of radio inputs, of type plain text option.\ninitial_selected_option (optional): The initial option that\u2019s selected when the element is loaded. A single option that exactly matches one of the options within options.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the radio button group component, should be set to \"radio_buttons\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nA radio button snap with 3 options.\n\n\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"radio_buttons\".\n\nExample Payload\n\nToggle Button\nToggles allow users to quickly switch between two possible states. Works with Input Layout and Actions blocks.\nProperties\n\ninitial_value (optional): The initial value of the toggle (a boolean).\ndescription (optional): A Plain Text element that defines the description shown below the toggle.\n\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the toggle button component, should be set to \"toggle\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\n\n\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"toggle\".\n\nExample Payload\n\nUpload Input\nA component that allows a user to upload a file. Works with Input Layout and Actions blocks.\nProperties\n\nupload_button (required): A button that can be clicked to upload files.\nmin_files (optional): The minimum number of files that can be uploaded.\nmax_files (optional): The maximum number of files that can be uploaded.\ninitial_artifacts_ids (optional): The initial artifacts that are selected when the element is loaded. A list of DONv2 IDs.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the upload input component, should be set to \"upload\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\n\n\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"upload\".\n\nExample Payload\n\nLayout Elements\nActions\nUsed when you want the user to interact without filling out a form. Similar to the Form block but without a submit button. It contains an array of elements.\nProperties\n\nelements (required): An array of elements. See the list of allowed elements below.\ndisable_on_action (optional): A boolean indicating whether all elements in the actions block should be disabled when one of the elements is interacted with. When the action is completed, the elements are re-enabled. Defaults to false. A use case for enabling this is if you have multiple actions that shouldn\u2019t be executed concurrently or are incompatible with each other. An example of this would be a snap-in for selecting a meal for a company event. When the user selects a meal, the other meal options should be disabled until the order is placed. After that, the Snap-kit can be updated with the information about the selection.\n\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the actions component, should be set to \"actions\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Layout:\n\ndirection (optional): The direction of the layout. Similar to flex-direction. Possible values: \"row\", \"column\".\nalignment (optional): The alignment of the layout. Similar to align-items. Possible values: \"start\", \"center\", \"end\", \"baseline\", \"stretch\".\njustify (optional): The justification of the layout. Similar to justify-content. Possible values: \"start\", \"center\", \"end\", \"between\", \"around\", \"evenly\".\n\nAllowed elements\nThe elements array can contain the following Snaps:\n\nButton\nCheckboxes\nRadio Buttons\nActions\nStatic Select\nMulti Static Select\nDivider\nTag Picker\nUser Picker\nPart Picker\nToggle Button\nUpload Input\n\nExample\n\n\nThe following video shows the behavior of the Actions block with disable_on_action set to true.\n\n\nCard\nA card is a container for various types of content. It contains an array of elements.\nProperties\n\nelements (required): An array of elements. See the list of allowed elements below.\ntitle (optional): The title of the card.\nis_collapsible (optional): Whether the card is collapsible or not. Defaults to false.\ndefault_collapsed (optional): Whether the card is collapsed by default or not. Defaults to false.\n\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the card component, should be set to \"card\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Layout:\n\ndirection (optional): The direction of the layout. Similar to flex-direction. Possible values: \"row\", \"column\".\nalignment (optional): The alignment of the layout. Similar to align-items. Possible values: \"start\", \"center\", \"end\", \"baseline\", \"stretch\".\njustify (optional): The justification of the layout. Similar to justify-content. Possible values: \"start\", \"center\", \"end\", \"between\", \"around\", \"evenly\".\n\nAllowed elements\nThe elements array can contain the following Snaps:\n\nActions\nContent\nForm\nDivider\n\nExample\nDefault and collapsible card example.\n\n\nContent\nA content block is used to hold various types of content. It contains an array of elements.\nProperties\n\nelements (required): An array of elements. See the list of allowed elements below.\n\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the content component, should be set to \"content\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Layout:\n\ndirection (optional): The direction of the layout. Similar to flex-direction. Possible values: \"row\", \"column\".\nalignment (optional): The alignment of the layout. Similar to align-items. Possible values: \"start\", \"center\", \"end\", \"baseline\", \"stretch\".\njustify (optional): The justification of the layout. Similar to justify-content. Possible values: \"start\", \"center\", \"end\", \"between\", \"around\", \"evenly\".\n\nAllowed elements\nThe elements array can contain the following Snaps:\n\nPlain Text\nRich Text\nImage\nContent\nDivider\n\nExample\n\n\nForm\nA form block that collects information from users.\nProperties\n\nelements (required): An array of elements. See the list of allowed elements below.\nsubmit_action (required): A button that can be clicked to submit the form.\n\nInherited properties\nInherited from Snap:\n\ntype (required): The type of the form component, should be set to \"form\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Layout:\n\ndirection (optional): The direction of the layout. Similar to flex-direction. Possible values: \"row\", \"column\".\nalignment (optional): The alignment of the layout. Similar to align-items. Possible values: \"start\", \"center\", \"end\", \"baseline\", \"stretch\".\njustify (optional): The justification of the layout. Similar to justify-content. Possible values: \"start\", \"center\", \"end\", \"between\", \"around\", \"evenly\".\n\nAllowed elements\nThe elements array can contain the following Snaps:\n\nInput Layout\nDivider\n\nExample\nA form composed of plain text inputs, number inputs, checkboxes, radio buttons, static select, and multi-static select snaps.\n\n\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"form\".\n\nExample payload\n\nInput layout\nA layout that holds the elements that the user can interact with in a form. Works with Form blocks.\nProperties\n\nelement (required): The input element. See the list of allowed elements below.\nlabel (optional): A Plain Text element that defines the label shown above the input element.\nhint (optional): A Plain Text element that defines the hint shown below the label.\noptional (optional): A boolean that indicates whether the input element may be empty when a user submits the modal. For toggle, if this value is false, then it needs to be always toggled (needs to be true). Defaults to false.\ndisabled (optional): Disables the input and prevents changes to the value.\ndisabled_text (optional): The text that\u2019s shown on hover if the component is disabled.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the input layout component, should be set to \"input_layout\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Hideable:\n\nhidden (optional): Indicates whether the element is hidden. You can use this to pass values to the backend without showing them to the user.\n\nAllowed element types\n\nInput\nCheckboxes\nRadio Buttons\nStatic Select\nMulti Static Select\nUser Picker\nPart Picker\nTag Picker\nToggle Button\nUpload Input\n\nExample\n\n\nData pickers\nPart picker\nA component that provides a list of parts that allows a user to choose multiple parts from a list. Works with Input Layout and Actions blocks.\nProperties\n\ninitial_parts_selected_options (optional): The initially selected parts, a list of DONv2 IDs.\nmax_selected_items (optional): The maximum number of parts that can be selected.\nallowed_part_types (optional): A list of part types that are selectable from the list of parts in the dropdown. Possible values: \"capability\", \"component\", \"custom_part\", \"enhancement\", \"feature\", \"linkable\", \"microservice\", \"product\", \"runnable\".\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the part picker component, should be set to \"part_picker\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nPart picker snap with 2 selected parts.\n\n\nAction payload\nInherits type, action_id, action_type, and timestamp from Base Payload, type is set to \"part_picker\".\n\nExample payload\n\nTag picker\nA component that provides a list of tags that allow a user to choose multiple tags from a list. Works with Input Layout and Actions blocks.\nProperties\n\ninitial_tags_selected_options (optional): The initially selected tags, a list of DONv2 IDs.\nmax_selected_items (optional): The maximum number of tags that can be selected.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the tag picker component, should be set to \"tag_picker\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nTag picker snap with 1 selected tag.\n\n\nAction payload\nInherits type, action_id, action_type, and timestamp from Base Payload, type is set to \"tag_picker\".\n\nExample payload\n\nUser picker\nA component that provides a list of users that allow a user to choose multiple users from a list. Works with Input Layout and Actions blocks.\nProperties\n\nuser_types (optional): The types of users that are allowed to be selected. Defaults to [\"rev_user\", \"dev_user\"]. Possible values: \"rev_user\", \"dev_user\", \"sys_user\".\ninitial_rev_users_selected_options (optional): The initially selected customers, a list of DONv2 IDs.\ninitial_dev_users_selected_options (optional): The initially selected dev users, a list of DONv2 IDs.\ninitial_sys_users_selected_options (optional): The initially selected sys users, a list of DONv2 IDs.\nmax_selected_items (optional): The maximum number of users that can be selected.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the user picker component, should be set to \"user_picker\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nUser picker snap with 1 selected user.\n\n\nAction payload\nInherits type, action_id, action_type, and timestamp from Base Payload, type is set to \"user_picker\".\n\nExample Payload\n\nExample snap-kit\nIn this updated JSON, the divider component is added to create a visual separation. The checkboxes component allows for selecting multiple options. The part_picker component allows for selecting parts, and the tag_picker component allows for selecting tags. You can customize the options, initial selections, and other values according to your requirements.\n"
    },
    {
        "id": "ART-1291",
        "dataset_source": "devrev-dev0",
        "title": "Snap-in resources \u2013 DevRev | Docs",
        "content": "Snap-in developmentReferencesSnap-in resources are objects specific to each user for a snap-in. These objects can be\n\nKeyrings\nInputs\nEvent sources\n\nFor a snap-in to access these resources, the user must configure My Settings of the snap-in config and enable it.\nThe snap-in can get these resources using the snap-ins.resources beta API by specifying the  snap-in ID in the id field and the user ID in the user field.\nThis API can only be called by the service account associated with the snap-in."
    },
    {
        "id": "ART-1292",
        "dataset_source": "devrev-dev0",
        "title": "Development best practices \u2013 DevRev",
        "content": "Act on specific webhook conditions\nWhen writing an automation that listens to a webhook event, ensure you check for the specific conditions you want to act on. For example, if you are writing an automation that checks if the conversation state is moved to archived, you should check for the conversation_updated webhook event and then check if the conversation_state is archived. In this case, the automation only triggers when the conversation state changes to archived, not in any other state.\nDebugging is easier when the conditions are specified and checked early in the code.\nUse the DevRev SDK\nThe DevRev SDK is a wrapper around the DevRev APIs, which makes them easier to use. It provides additional functionality such as retrying failed API calls. It\u2019s recommended to use the SDK instead of directly calling the APIs.\nCheck out our DevRev SDK for more information.\nThink from a snap-in installer perspective\nAvoid developing snap-ins that depend on other snap-ins. Currently, the platform doesn\u2019t allow bundling of snap-ins. Requiring users to install multiple snap-ins that depend on each other results in installation complexities.\nMost snap-in installers aren\u2019t developers, so consider the following tips when designing the configuration page:\n\nAvoid technical jargon for config names and descriptions.\nThe descriptions should be adequate to guide the installer if there are no configurations. For example, some slash command snap-ins.\nDon\u2019t require users to understand technical formats such as JSON or XML.\nPrefer sensible defaults over obscure advanced options.\nIn the config form, place the most important parameters at the top and use optional parameters when they aren\u2019t needed.\nUnless necessary for clarity, keep config names and descriptions concise.\nName configs in a way that\u2019s familiar to you.\n\nCoding tips\nIf you are using async functions, remember to use await while calling them in your snap-in function code.\nIf the promise returned by the Run function is rejected, the snap-in will retry itself.\n"
    },
    {
        "id": "ART-1293",
        "dataset_source": "devrev-dev0",
        "title": "Locally testing snap-ins \u2013 DevRev",
        "content": "To test out changes in snap-in locally, developers can create a snap-in version in test mode.\nA snap-in version created in test mode enables developers to specify a public HTTP URL to receive events from DevRev. This makes for\nquick code changes on the local machine without needing to repeatedly deploy the snap-in again for testing the changes.\nTo set up the framework, the developer needs to\n\nRun the server local server present in the template on the mentioned port.\nExpose this port to a public URL.\nCreate a snap-in version in test mode mentioning this URL.\n\nSetting up the server\nTo test out a snap-in version locally, follow the below steps:\n\nRun a server locally to ingest events from DevRev. The port parameter is optional. If not set, the server starts default on 8000.\n\n\n\nExpose the local port as a publicly available URL. We recommend using ngrok since it is free and easy to set up. The command for running ngrok tunnelling on port 8000:\n\n\nThis returns a public HTTP URL.\n\nCreate a snap-in version with the testing_url flag set\n\n\nHere, HTTP_URL is the publicly available URL from Step 2. The URL should start with http or https\n\nOnce the snap-in version is ready, create a snap-in, update, and activate it.\n\n\nUpdate the snap-in through UI or using the CLI:\n\nActivate the snap-in through UI or the CLI command:\n\nReceiving events locally\nAfter the snap-in has been activated, it can receive events locally from DevRev as a\nsnap-in would. If the snap-in is listening to work_created event type, then creating a\nnew work-item would send the event to the local server.\nIf utilizing ngrok, accessing the ngrok UI is possible by opening http://127.0.0.1:4040/ in the browser. This interface offers a neat way to review the list of requests and replay them if necessary.\nThe service account token included with the request is valid for only 30 minutes. Therefore, attempting to call the DevRev API with that token for events older than this timeframe will result in a \u2018401 Unauthorized\u2019 error.\nUpdating manifest or the URL\nThe code can be changed without the need to create a snap-in version or redeploy the snap-in. On any change to the\nsrc folder, the server restarts with the updated changes. However, on patch compatible updates to the manifest or the testing URL, we can upgrade the snap-in version.\n\nIn case of non-patch compatible updates, the force flag can be used to upgrade the version. However, this will delete any\nexisting snap-ins that have been created from this version.\n\nDo note that manifest must always be provided when upgrading a snap-in version."
    },
    {
        "id": "ART-1294",
        "dataset_source": "devrev-dev0",
        "title": "Debugging \u2013 DevRev | Docs",
        "content": "Retrieving logs for snap-in\nUsing DevRev CLI, you can retrieve build logs and runtime logs for your snap-ins.\nHow to retrieve logs using DevRev CLI\n\n\n\nTo retrieve logs for all snap-in packages/versions in your dev org after a particular timestamp, run the following command:\n\n\n\nTo retrieve logs between two timestamps and use a cursor for pagination, run the following command:\n\n\n\nBy default, not specifying --before lists all logs until the current timestamp in descending order (latest logs at the top).\n\n\nTo retrieve logs for a specific snap-in package, run the following command:\n\n\n\nTo retrieve logs containing the text \u201cfailed\u201d but exclude logs with level \u201cinfo\u201d, run the following command:\n\n\n\nThe JSON response fields are filterable. For example, to view snap-in version execution logs only, add the filter on process field to match function and run the following command:\n\nSimilarly, you can filter only for build logs by filtering for process = build.\nAfter creating the appropriate filters, to view the logs conveniently, run the following command:\nYou can customize the part before jq according to your filters.\n\nTroubleshooting\n\n\n\nYou are not an admin of the dev org where you want to create the snap-in."
    },
    {
        "id": "ART-1295",
        "dataset_source": "devrev-dev0",
        "title": "Quotas and limits \u2013 DevRev",
        "content": "The following table lists the restriction on number of snap-in packages and functions:\nItemQuotaSnap-in packages per dev org10Unpublished snap-in versions per snap-in package1Functions per snap-in version5Functions per dev org15Snap-ins per snap-in version in an org1\nIn order to increase the limits, contact DevRev Support by clicking PLuG icon in your dev org or write to marketplace@devrev.ai.\nRestrictions on event sizes for automations\nFor automation, the event payload size shouldn\u2019t exceed 256KB. If the event payload exceeds 256 KB, automation isn\u2019t executed."
    },
    {
        "id": "ART-1296",
        "dataset_source": "devrev-dev0",
        "title": "Upgrade snap-ins \u2013 DevRev | Docs",
        "content": "The platform supports upgrading snap-in versions and corresponding snap-ins that haven\u2019t been published to the marketplace.\nUpgrades can be performed using the upgrade subcommand of snap_in_version.\nFor example:\n\n\nYou can pass only the manifest if that\u2019s the only thing that has changed. If you have changed the source code of the snap-in functions, you can pass the path to the directory containing the manifest file and the source code. The path to the archive file containing the functions can also be passed if you have already created it.Only one path, either directory containing the manifest file or archive should be passed.\nThe actual snap-in version to be upgraded is specified using the --version flag.\nUpgrade behavior\nThe upgrade command checks if the updated version is compatible with the existing version. If it isn\u2019t compatible, the upgrade fails. If you want to force an upgrade, you can use the\u00a0--force\u00a0flag.\nIf the upgrade is compatible, the upgrade command does the following:\n\nCreate a new snap-in version with the new manifest and source code. If either of them isn\u2019t provided, the existing manifest or source code is used.\nUpgrade the snap-in to use the updated version.\nDelete the old snap-in version.\n\nIf the upgrade isn\u2019t compatible, the upgrade command does the following:\n\nFail if the --force flag isn\u2019t used.\nDelete the existing snap-in if the --force flag is used.\n\nVersion compatibility\nThe following table shows compatibility between snap-in versions:\nComponentCompatibility checkKeyringsFor existing keyrings:  - The description can be changed.  - The display name can be changed.  - New values for allowed types under that connection could be added, but existing allowed types can\u2019t be removed.   Any existing connection can be removed  A new connection can\u2019t be added.Event sourcesFor existing event sources:  - The description can be changed.  - The display name can be changed.  - Type can\u2019t be changed.  - Connection can\u2019t be changed but can be removed.  - Config can change whether or not changes reflect depending on the event source type. Test if you change the config.  - Instructions can change.   An existing event source can\u2019t be removed.  A new event source can be added.TagsFor existing tags:  - The description can be changed.   A new tag can be added.  Any existing tags can be removed.AutomationsFor existing automations:  - The description can be changed.  - The source can be changed.  - Allowed event types can be changed.  - The function to execute can be changed.   Any existing automation can be removed.  A new automation can be added.HooksFor existing hooks:  - The function to execute can be changed.   Any existing hooks can be removed.  A new hook can be added.FunctionsFor existing functions:  - The description can be changed.  - Actual code can be changed.   Any existing function can be removed.  A new function can be added.CommandsFor existing commands:  - All properties can be changed.   Any existing command can be removed.  A new command can be added.Snap-kit actionsFor existing snap-kit-actions:  - The description can be changed.  - The function can be changed.   Any existing snap-kit-action can be removed.  A new snap-kit-action can be added.Service accountThe display name of the service account can be changed.InputsInputs can\u2019t be changed.\nExample scenarios\nThe following are some examples of when you might need to run these upgrades:\n\nChanging the source code of a function used in the snap-in\nAdding a new automation\nAdding a new command\nChanging the description of a snap-in\nChanging the identity of a snap-in (changing the service account)\n\nIdempotency\nIf you run the upgrade command for the same snap-in version multiple times, the command does the following:\n\nReturns an already existing error if an upgrade is currently in progress or completed for the same snap-in version.\nWhen the previous upgrade failed, starts another upgrade if the manifest is different or if the --archive or --path parameter is passed to the upgrade command.\n\nChecking status of the upgrade\nWhen you run devrev snap_in_version list for the same package after the upgrade succeeds, you should see the updated snap-in version. In the list, you might see the old snap-in version and the updated snap-in version while the upgrade is in progress. In the case of a failure, you only see the old snap-in version."
    },
    {
        "id": "ART-1297",
        "dataset_source": "devrev-dev0",
        "title": "Code Samples \u2013 DevRev | Docs",
        "content": "The following are some code samples:\n\nStarter\nNotify owner on ticket to prod assist\nGiphy template\nHello world snap-in\n\nSnap-in from scratch: Create your first hello-world  snap-in\n"
    },
    {
        "id": "ART-1298",
        "dataset_source": "devrev-dev0",
        "title": "Event Sources Schedule Event \u2013 DevRev",
        "content": "POST$curl -X POST https://api.devrev.ai/event-sources.schedule \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"event_type\": \"event_type\",>  \"id\": \"id\",>  \"payload\": \"payload\">}'"
    },
    {
        "id": "ART-1299",
        "dataset_source": "devrev-dev0",
        "title": "For Developers \u2013 DevRev | Docs (0)",
        "content": "\ud83d\udc49 Getting started\nIf you are new to DevRev, we would recommend learning about our core concepts before getting started.\nOnce you have a DevRev account, you can access the APIs with a personal access token (PAT) that you create in the DevRev app.\nA brief tutorial shows you how to access the APIs.\n\ud83e\uddec Methods\nSpecifications covering the supported APIs are based on OpenAPI Specification 3.0. You can download the specs to use an OpenAPI 3.0-compliant tool to perform a variety of actions, including rendering them in UI and generating SDKs. Two versions of the DevRev API are available: public and beta (early access). Use the drop-down menu in the upper-left corner of this site to switch between versions.\nTo take action based on events from the DevRev platform, webhooks are also supported.\n\n\ud83e\udde9 Snap-ins\nNumerous snap-ins are available on the DevRev Marketplace. The snap-in framework is available for you to create your own snap-ins for automation of DevRev workflows or integration with other system.\n\ud83d\udcbb SDKs\n"
    },
    {
        "id": "ART-1300",
        "dataset_source": "devrev-dev0",
        "title": "Create \u2013 DevRev | Docs (7)",
        "content": "$curl -X POST https://api.devrev.ai/accounts.create \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"display_name\": \"display_name\">}'1{2  \"account\": {3    \"external_refs\": [4      \"external_refs\"5    ],6    \"id\": \"id\",7    \"owned_by\": [],8    \"artifacts\": [9      {10        \"id\": \"id\"11      }12    ],13    \"created_date\": \"2023-01-01T12:00:00Z\",14    \"custom_fields\": {15      \"custom_fields\": {16        \"key\": \"value\"17      }18    },19    \"custom_schema_fragments\": [20      \"custom_schema_fragments\"21    ],22    \"description\": \"description\",23    \"display_id\": \"display_id\",24    \"display_name\": \"display_name\",25    \"domains\": [26      \"domains\"27    ],28    \"modified_date\": \"2023-01-01T12:00:00Z\",29    \"stock_schema_fragment\": \"don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>\",30    \"subtype\": \"subtype\",31    \"tags\": [32      {33        \"tag\": {34          \"id\": \"id\",35          \"name\": \"name\"36        }37      }38    ],39    \"tier\": \"tier\"40  },41  \"default_rev_org\": {42    \"id\": \"id\",43    \"account\": {44      \"id\": \"id\",45      \"display_id\": \"display_id\",46      \"display_name\": \"display_name\"47    },48    \"artifacts\": [49      {50        \"id\": \"id\"51      }52    ],53    \"created_date\": \"2023-01-01T12:00:00Z\",54    \"custom_fields\": {55      \"custom_fields\": {56        \"key\": \"value\"57      }58    },59    \"custom_schema_fragments\": [60      \"custom_schema_fragments\"61    ],62    \"description\": \"description\",63    \"display_id\": \"display_id\",64    \"display_name\": \"display_name\",65    \"domain\": \"domain\",66    \"external_ref\": \"external_ref\",67    \"modified_date\": \"2023-01-01T12:00:00Z\",68    \"stock_schema_fragment\": \"don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>\",69    \"subtype\": \"subtype\",70    \"tags\": [71      {72        \"tag\": {73          \"id\": \"id\",74          \"name\": \"name\"75        }76      }77    ]78  }79}"
    },
    {
        "id": "ART-1301",
        "dataset_source": "devrev-dev0",
        "title": "Delete \u2013 DevRev | Docs (7)",
        "content": "Deletes an account.RequestThis endpoint expects an object.idstringRequiredThe ID of account to delete.ResponseThis endpoint returns a map from strings to anyPOST$curl -X POST https://api.devrev.ai/accounts.delete \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"ACC-12345\">}'Response1{2  \"string\": {3    \"key\": \"value\"4  }5}"
    },
    {
        "id": "ART-1302",
        "dataset_source": "devrev-dev0",
        "title": "Export \u2013 DevRev | Docs (1)",
        "content": "$curl -G https://api.devrev.ai/accounts.export \\>     -H \"Authorization: <apiKey>\" \\>     --data-urlencode created_date.after=2023-01-01T12:00:00Z \\>     --data-urlencode created_date.before=2023-01-01T12:00:00Z \\>     --data-urlencode modified_date.after=2023-01-01T12:00:00Z \\>     --data-urlencode modified_date.before=2023-01-01T12:00:00Z1{2  \"accounts\": [3    {4      \"external_refs\": [5        \"external_refs\"6      ],7      \"id\": \"id\",8      \"owned_by\": [],9      \"artifacts\": [10        {11          \"id\": \"id\"12        }13      ],14      \"created_date\": \"2023-01-01T12:00:00Z\",15      \"custom_schema_fragments\": [16        \"custom_schema_fragments\"17      ],18      \"description\": \"description\",19      \"display_id\": \"display_id\",20      \"display_name\": \"display_name\",21      \"domains\": [22        \"domains\"23      ],24      \"modified_date\": \"2023-01-01T12:00:00Z\",25      \"stock_schema_fragment\": \"don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>\",26      \"subtype\": \"subtype\",27      \"tags\": [28        {29          \"tag\": {30            \"id\": \"id\",31            \"name\": \"name\"32          }33        }34      ],35      \"tier\": \"tier\"36    }37  ]38}"
    },
    {
        "id": "ART-1303",
        "dataset_source": "devrev-dev0",
        "title": "Export Post \u2013 DevRev | Docs (1)",
        "content": "$curl -X POST https://api.devrev.ai/accounts.export \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'1{2  \"accounts\": [3    {4      \"external_refs\": [5        \"external_refs\"6      ],7      \"id\": \"id\",8      \"owned_by\": [],9      \"artifacts\": [10        {11          \"id\": \"id\"12        }13      ],14      \"created_date\": \"2023-01-01T12:00:00Z\",15      \"custom_schema_fragments\": [16        \"custom_schema_fragments\"17      ],18      \"description\": \"description\",19      \"display_id\": \"display_id\",20      \"display_name\": \"display_name\",21      \"domains\": [22        \"domains\"23      ],24      \"modified_date\": \"2023-01-01T12:00:00Z\",25      \"stock_schema_fragment\": \"don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>\",26      \"subtype\": \"subtype\",27      \"tags\": [28        {29          \"tag\": {30            \"id\": \"id\",31            \"name\": \"name\"32          }33        }34      ],35      \"tier\": \"tier\"36    }37  ]38}"
    },
    {
        "id": "ART-1304",
        "dataset_source": "devrev-dev0",
        "title": "Get \u2013 DevRev | Docs (9)",
        "content": "$curl -G https://api.devrev.ai/accounts.get \\>     -H \"Authorization: <apiKey>\" \\>     -d id=ACC-123451{2  \"account\": {3    \"external_refs\": [4      \"external_refs\"5    ],6    \"id\": \"id\",7    \"owned_by\": [],8    \"artifacts\": [9      {10        \"id\": \"id\"11      }12    ],13    \"created_date\": \"2023-01-01T12:00:00Z\",14    \"custom_fields\": {15      \"custom_fields\": {16        \"key\": \"value\"17      }18    },19    \"custom_schema_fragments\": [20      \"custom_schema_fragments\"21    ],22    \"description\": \"description\",23    \"display_id\": \"display_id\",24    \"display_name\": \"display_name\",25    \"domains\": [26      \"domains\"27    ],28    \"modified_date\": \"2023-01-01T12:00:00Z\",29    \"stock_schema_fragment\": \"don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>\",30    \"subtype\": \"subtype\",31    \"tags\": [32      {33        \"tag\": {34          \"id\": \"id\",35          \"name\": \"name\"36        }37      }38    ],39    \"tier\": \"tier\"40  }41}"
    },
    {
        "id": "ART-1305",
        "dataset_source": "devrev-dev0",
        "title": "Get Post \u2013 DevRev | Docs (9)",
        "content": "$curl -X POST https://api.devrev.ai/accounts.get \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"ACC-12345\">}'1{2  \"account\": {3    \"external_refs\": [4      \"external_refs\"5    ],6    \"id\": \"id\",7    \"owned_by\": [],8    \"artifacts\": [9      {10        \"id\": \"id\"11      }12    ],13    \"created_date\": \"2023-01-01T12:00:00Z\",14    \"custom_fields\": {15      \"custom_fields\": {16        \"key\": \"value\"17      }18    },19    \"custom_schema_fragments\": [20      \"custom_schema_fragments\"21    ],22    \"description\": \"description\",23    \"display_id\": \"display_id\",24    \"display_name\": \"display_name\",25    \"domains\": [26      \"domains\"27    ],28    \"modified_date\": \"2023-01-01T12:00:00Z\",29    \"stock_schema_fragment\": \"don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>\",30    \"subtype\": \"subtype\",31    \"tags\": [32      {33        \"tag\": {34          \"id\": \"id\",35          \"name\": \"name\"36        }37      }38    ],39    \"tier\": \"tier\"40  }41}"
    },
    {
        "id": "ART-1306",
        "dataset_source": "devrev-dev0",
        "title": "List \u2013 DevRev | Docs (9)",
        "content": "$curl -G https://api.devrev.ai/accounts.list \\>     -H \"Authorization: <apiKey>\" \\>     --data-urlencode created_date.after=2023-01-01T12:00:00Z \\>     --data-urlencode created_date.before=2023-01-01T12:00:00Z \\>     --data-urlencode modified_date.after=2023-01-01T12:00:00Z \\>     --data-urlencode modified_date.before=2023-01-01T12:00:00Z1{2  \"accounts\": [3    {4      \"external_refs\": [5        \"external_refs\"6      ],7      \"id\": \"id\",8      \"owned_by\": [],9      \"artifacts\": [10        {11          \"id\": \"id\"12        }13      ],14      \"created_date\": \"2023-01-01T12:00:00Z\",15      \"custom_schema_fragments\": [16        \"custom_schema_fragments\"17      ],18      \"description\": \"description\",19      \"display_id\": \"display_id\",20      \"display_name\": \"display_name\",21      \"domains\": [22        \"domains\"23      ],24      \"modified_date\": \"2023-01-01T12:00:00Z\",25      \"stock_schema_fragment\": \"don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>\",26      \"subtype\": \"subtype\",27      \"tags\": [28        {29          \"tag\": {30            \"id\": \"id\",31            \"name\": \"name\"32          }33        }34      ],35      \"tier\": \"tier\"36    }37  ],38  \"next_cursor\": \"next_cursor\",39  \"prev_cursor\": \"prev_cursor\"40}"
    },
    {
        "id": "ART-1307",
        "dataset_source": "devrev-dev0",
        "title": "List Post \u2013 DevRev | Docs (9)",
        "content": "$curl -X POST https://api.devrev.ai/accounts.list \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'1{2  \"accounts\": [3    {4      \"external_refs\": [5        \"external_refs\"6      ],7      \"id\": \"id\",8      \"owned_by\": [],9      \"artifacts\": [10        {11          \"id\": \"id\"12        }13      ],14      \"created_date\": \"2023-01-01T12:00:00Z\",15      \"custom_schema_fragments\": [16        \"custom_schema_fragments\"17      ],18      \"description\": \"description\",19      \"display_id\": \"display_id\",20      \"display_name\": \"display_name\",21      \"domains\": [22        \"domains\"23      ],24      \"modified_date\": \"2023-01-01T12:00:00Z\",25      \"stock_schema_fragment\": \"don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>\",26      \"subtype\": \"subtype\",27      \"tags\": [28        {29          \"tag\": {30            \"id\": \"id\",31            \"name\": \"name\"32          }33        }34      ],35      \"tier\": \"tier\"36    }37  ],38  \"next_cursor\": \"next_cursor\",39  \"prev_cursor\": \"prev_cursor\"40}"
    },
    {
        "id": "ART-1308",
        "dataset_source": "devrev-dev0",
        "title": "Update \u2013 DevRev | Docs (7)",
        "content": "$curl -X POST https://api.devrev.ai/accounts.update \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"ACC-12345\">}'1{2  \"account\": {3    \"external_refs\": [4      \"external_refs\"5    ],6    \"id\": \"id\",7    \"owned_by\": [],8    \"artifacts\": [9      {10        \"id\": \"id\"11      }12    ],13    \"created_date\": \"2023-01-01T12:00:00Z\",14    \"custom_fields\": {15      \"custom_fields\": {16        \"key\": \"value\"17      }18    },19    \"custom_schema_fragments\": [20      \"custom_schema_fragments\"21    ],22    \"description\": \"description\",23    \"display_id\": \"display_id\",24    \"display_name\": \"display_name\",25    \"domains\": [26      \"domains\"27    ],28    \"modified_date\": \"2023-01-01T12:00:00Z\",29    \"stock_schema_fragment\": \"don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>\",30    \"subtype\": \"subtype\",31    \"tags\": [32      {33        \"tag\": {34          \"id\": \"id\",35          \"name\": \"name\"36        }37      }38    ],39    \"tier\": \"tier\"40  }41}"
    },
    {
        "id": "ART-1309",
        "dataset_source": "devrev-dev0",
        "title": "Count \u2013 DevRev | Docs",
        "content": "Get count of articles matching given filter.Query parametersThe ancestor directory of the articles.applies_to_partsstringOptionalFilters for articles belonging to any of the provided parts.authored_bystringOptionalFilters for articles authored by any of the provided users.Filters for articles created by any of the provided users.Filters for articles owned by any of the provided users.ResponseThis endpoint returns an objectThe total number of articles matching the filter.$curl https://api.devrev.ai/articles.count \\>     -H \"Authorization: <apiKey>\""
    },
    {
        "id": "ART-1310",
        "dataset_source": "devrev-dev0",
        "title": "Follow-up ticket",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nPrerequisities Installation\nFollow-up ticket.\n\nThe Follow-up ticket snap-in automatically creates follow-up tickets if a customer comments on permanently closed tickets. It allows you to configure the time after which a ticket stage should be marked as closed and creates a new follow-up ticket along with all the attachments and a custom message to let the customers know that the ticket is permanently closed automatically if required.\n\nFor more information, refer to the Follow-up ticket snap-in on the DevRev marketplace.\n\nLet\u2019s say your ticket has the following stages under the Closed state: Resolved , Archived , Accepted , Canceled. Archived is the terminal stage. Now if a customer sends a new email or adds a new comment on the archived ticket from the customer portal, the archived ticket remains archived and a follow-up ticket is created. A message is added to the archived ticket automatically based on your configuration. The follow-up ticket will have the reference of the archived ticket in the first message so that your customer knows why a new ticket was created. The following fields are automatically set on the follow-up ticket based on the archived ticket:\n\nOwner. Title. Customer. Reported By. Tag. is_followup In addition, the tag has_followup is added to the archived ticket.\n\nPrerequisities.\n\nBefore you install this snap-in, you need to set the Stage. in closed state as a terminal stage or permanently closed stage. That is, once the ticket is moved to this stage, it cannot be reopened.\n\nNone of the default stages are terminal stages.\n\nTo create a new terminal stage, contact DevRev via the PLuG widget (chat bubble) on the bottom left of your home screen of the DevRev app. Just say \u201cI would like to add a terminal stage on my tickets\u201d and we will get it done.\n\nIf no terminal stage is set, tickets will reopen on new comments from customers if Reopen Closed Tickets on customer message. is enabled in the convergence snap-in. The tickets move to the In Progress state by default.\n\nIf you connected your support email address with DevRev, it is recommended that you enable the Allow automations to send email. in your email integration snap-in. This is to ensure that your customer receives an email about the follow-up ticket creation.\n\nInstallation.\n\nIn DevRev, go to Settings. > Snap-ins. and click Explore Marketplace. in the top-right corner.\nIn the DevRev marketplace, find Follow-up ticket. and click Install..\nPrevious Descope identity validation Next Link preview\nOn this page\n\nPrerequisities Installation\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1311",
        "dataset_source": "devrev-dev0",
        "title": "Harness",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Installation\nHarness.\n\nThe Harness snap-in connects the development and deployment process between DevRev, GitHub, and the Harness platform. It automatically updates the issues' status based on the progress of CI/CD pipelines, removing the need for manual interventions. This snap-in also offers visibility into deployment pipeline stages directly within related issues.\n\nInstallation.\n\nGo to the Settings. > Integrations. > Snap-ins..\n\nClick Explore Marketplace..\n\nSearch for Harness. and click Install. next to the snap-in.\n\nUpdate the snap-in configurations as needed.\n\nDeploy the snap-in.\n\nPrevious GitHub Next Instabug\nOn this page Installation\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-1312",
        "dataset_source": "devrev-dev0",
        "title": "For Developers \u2013 DevRev | Docs",
        "content": "\ud83d\udc49 Getting started\nIf you are new to DevRev, we would recommend learning about our core concepts before getting started.\nOnce you have a DevRev account, you can access the APIs with a personal access token (PAT) that you create in the DevRev app.\nA brief tutorial shows you how to access the APIs.\n\ud83e\uddec Methods\nSpecifications covering the supported APIs are based on OpenAPI Specification 3.0. You can download the specs to use an OpenAPI 3.0-compliant tool to perform a variety of actions, including rendering them in UI and generating SDKs. Two versions of the DevRev API are available: public and beta (early access). Use the drop-down menu in the upper-left corner of this site to switch between versions.\nTo take action based on events from the DevRev platform, webhooks are also supported.\n\n\ud83e\udde9 Snap-ins\nNumerous snap-ins are available on the DevRev Marketplace. The snap-in framework is available for you to create your own snap-ins for automation of DevRev workflows or integration with other system.\n\ud83d\udcbb SDKs\n"
    },
    {
        "id": "ART-1313",
        "dataset_source": "devrev-dev0",
        "title": "Count Post \u2013 DevRev | Docs",
        "content": "Get count of articles matching given filter.RequestThis endpoint expects an object.The ancestor directory of the articles.Filters for articles belonging to any of the provided parts.\nFilters for articles authored by any of the provided users.\nFilters for articles created by any of the provided users.\nFilters for articles owned by any of the provided users.list of maps from strings to anyOptionalFilter for articles based on intended audience.ResponseThis endpoint returns an objectThe total number of articles matching the filter.$curl -X POST https://api.devrev.ai/articles.count \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{}'"
    },
    {
        "id": "ART-1314",
        "dataset_source": "devrev-dev0",
        "title": "Create Article \u2013 DevRev | Docs",
        "content": "$curl -X POST https://api.devrev.ai/articles.create \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"applies_to_parts\": [>    \"applies_to_parts\">  ],>  \"owned_by\": [>    \"owned_by\">  ],>  \"resource\": {},>  \"title\": \"title\">}'1{2  \"article\": {3    \"applies_to_parts\": [],4    \"id\": \"id\",5    \"created_date\": \"2023-01-01T12:00:00Z\",6    \"description\": \"description\",7    \"display_id\": \"display_id\",8    \"extracted_content\": [9      {10        \"id\": \"id\"11      }12    ],13    \"modified_date\": \"2023-01-01T12:00:00Z\",14    \"num_downvotes\": 1,15    \"num_upvotes\": 1,16    \"parent\": {17      \"id\": \"id\",18      \"display_id\": \"display_id\"19    },20    \"rank\": \"rank\",21    \"resource\": {22      \"artifacts\": [23        {24          \"id\": \"id\"25        }26      ],27      \"url\": \"url\"28    },29    \"title\": \"title\"30  }31}"
    },
    {
        "id": "ART-1315",
        "dataset_source": "devrev-dev0",
        "title": "Delete Article \u2013 DevRev | Docs",
        "content": "Deletes an article.RequestThis endpoint expects an object.idstringRequiredThe ID of the article to delete.ResponseThis endpoint returns a map from strings to anyPOST$curl -X POST https://api.devrev.ai/articles.delete \\>     -H \"Authorization: <apiKey>\" \\>     -H \"Content-Type: application/json\" \\>     -d '{>  \"id\": \"ARTICLE-12345\">}'Response1{2  \"string\": {3    \"key\": \"value\"4  }5}"
    },
    {
        "id": "ART-1316",
        "dataset_source": "devrev-dev0",
        "title": "Get Article \u2013 DevRev | Docs",
        "content": "$curl -G https://api.devrev.ai/articles.get \\>     -H \"Authorization: <apiKey>\" \\>     -d id=ARTICLE-123451{2  \"article\": {3    \"applies_to_parts\": [],4    \"id\": \"id\",5    \"created_date\": \"2023-01-01T12:00:00Z\",6    \"description\": \"description\",7    \"display_id\": \"display_id\",8    \"extracted_content\": [9      {10        \"id\": \"id\"11      }12    ],13    \"modified_date\": \"2023-01-01T12:00:00Z\",14    \"num_downvotes\": 1,15    \"num_upvotes\": 1,16    \"parent\": {17      \"id\": \"id\",18      \"display_id\": \"display_id\"19    },20    \"rank\": \"rank\",21    \"resource\": {22      \"artifacts\": [23        {24          \"id\": \"id\"25        }26      ],27      \"url\": \"url\"28    },29    \"title\": \"title\"30  }31}"
    },
    {
        "id": "ART-718",
        "dataset_source": "devrev-dev0",
        "title": "Build",
        "content": "\n  \n\n\nThe Build quadrant is the first stage in the lifecycle and focuses on building new things (e.g., companies, skills, new features, etc.) or the evolution of existing ones (e.g., enhancing features).\n\nDuring this phase, companies may (should) conduct market research to understand their customers\u2019 needs and desires, identify potential competitors, and assess the feasibility of the product. Upon completion of this initial research, work begins on the design (product requirements definition (PRD), UI/UX designs, etc.) and then the build of a prototype or first iteration. Once the prototype is tangible, the product is tested and refined to ensure that the product meets the needs of the target market. NOTE: while some things may not call for a prototype, gathering feedback and iterating to enhance the product is imperative. For example, think about the alpha of a product and how much it changes before general availability.\n\nWhile we may focus on the product/services related to actual goods (software, service, goods), the build piece is equally as crucial for building the company and its internal services (e.g., founding, HR, training, finance, etc.)\n\nFor example, when we started DevRev, we initially focused on building the company (trademarks, branding, funding, ideation/value-prop), then started to focus on building the product. Ensuring focus on both is extremely important.\n"
    },
    {
        "id": "ART-719",
        "dataset_source": "devrev-dev0",
        "title": "Operate",
        "content": "The Operate quadrant is where the product is made available to some target market (internal or external), is monitored, and must be operational. During this stage, companies may focus on creating some awareness of the product and building brand recognition. They need to identify the most effective marketing channels to reach their target audience and create a compelling message that resonates with them.\n\nWhen anything bad happens, the team must work to restore services back to normal. These disruptions are commonly referred to as incidents. An incident is any event that has a potential customer impact. This could include things like service outages, performance problems, or anything else impacting the customer (internal or external).\n\nTypically incidents will have a notion of \u2018impact,\u2019 which is used to determine the effect of the problem. These could range from minor items that are transparent, to issues with workarounds, to total service outage.\n"
    },
    {
        "id": "ART-720",
        "dataset_source": "devrev-dev0",
        "title": "Support",
        "content": "\n  \n\n\nThe Support quadrant is where companies provide ongoing maintenance and support for the product. This involves addressing any technical issues customers may have, troubleshooting any problems, and escalating certain items development (some may kickoff the Build quadrant to resolve a bug/defect or to provide new functionality).\n\nSupport is where you\u2019re working with your customers/consumers and helping them if need be. This is one of the most important aspects of any company, as you can fix a bad product with good support, but not vice-versa. When talking about support, this doesn\u2019t just mean support agents. Support is more of a theme where everyone from Sales to PM to Support needs to work together in a coordinated manner to help the customer.\n"
    },
    {
        "id": "ART-721",
        "dataset_source": "devrev-dev0",
        "title": "Grow",
        "content": "The Grow quadrant is where companies focus on expanding their product\u2019s reach, visibility and increasing sales. This involves identifying new markets and target audiences, growing in existing markets, cross-selling/up-selling, and developing partnerships and collaborations with other companies.\n\nTraditionally the marketing and sales teams are often siloed, with marketing focusing on generating leads and sales on closing deals. This can lead to a lack of coordination and alignment, resulting in lost opportunities and inefficiencies.\n\nWe believe these teams need to operate as a much more uniform and cohesive unit to drive better efficiency and more revenue.\n"
    },
    {
        "id": "ART-722",
        "dataset_source": "devrev-dev0",
        "title": "Busting silos, the WHY of DevRev",
        "content": "Start With \u2018WHY\u2019\n\nIn order to understand the Why of DevRev, it\u2019s essential to understand the history and lessons of the past.\n\nWhen Nutanix was founded, we started with everyone co-located in the same room which was easy to keep everyone coordinated due to the benefit of locality. At the time it was just engineering and we were all on the same Jira system (yeah, I know). However, as we grew, we added new teams (e.g., support, marketing, sales), each bringing their own tools (e.g., support brought Zendesk, sales brought SFDC, marketing with Marketo). As these teams grew, we also became physically isolated (e.g., sales had their own office, same for marketing, etc.).\n\nThis led to the formation of data (knowledge) and organizational silos, which became exacerbated as we grew.\n\nThe following figure shows an example of what this looked like:\n\n\n\nWe felt the pain of engineering not having access to the support system and context from customer discussions. We felt the pain of product management not having all the context to define and prioritize clearly. We felt the pain of sales reps not having clarity on their customers\u2019 tickets, engineering roadmaps, and the status of items relevant to them. We felt the pain of support not having access to information like customer details and the status of pipeline opportunities. Lastly, we felt the pain of having to \u2018ask\u2019 for access or context instead of natively having it in the context of the work.\n\n\n  Why not just give everyone access to everything? Cost All of these have per-seat licensing, so it was not fiscally possible.\n\n\n\n  Why not just build a ton of integrations to replicate all data everywhere? Opportunity Cost. Integrations take time and each of these would have to be done point-to-point which doesn\u2019t scale and/or work when things change.\n\n\nWe pondered if this was just isolated to us, however, after many discussions with our peers and established corporations; we found it is something that is rampant across many organizations, big and small alike.\n\nPerturbed by this inefficiency and understanding the impact this had on ourselves and others alike, we had enough and knew there had to be a better way, hence the beginnings of what led to DevRev.\n\nTo learn about why these silos can be detrimental to a business, check out Why Silos Must be Busted.\n\nStarting From Zero\n\nAt our previous company (including our current), we went through all of the phases from the initial ideation of the product and founding of the company, its design, and prototyping, getting something working in the hands of customers and eventually scaling the product and company.\n\nIn retrospect, four core phases of this lifecycle, or fundamental tenants, became apparent:\n\n\n  Build\n  Operate\n  Support\n  Grow\n\n\nAt a high-level something similar to the following figure:\n\n\n\nWe challenged these in different scenarios. Did it work for products? What about companies? What about our people? In all cases, we found it to be relevant and an excellent framework to structure how we thought about things and guide our decision-making and execution.\n\nMore information about this lifecycle can be found HERE\n\n\n\nWe sought to re-imagine what people building, supporting, operating, and growing products needed. Could we be everything to everyone? No. But for the 80% we will do our best to fix things.\n\nHere\u2019s what we imagined:\n\n\n  A single platform replacing some systems, augmenting others\n  A platform that related everything back to product\n  Integrated with systems to gather events/context (e.g., monitoring alerts, git events, etc.)\n  A modern browser interface\n  Fully integratable with APIs (benefits for both headed and headless modes)\n\n\nThe following figure shows how we imagined and are building this:\n\n\n\nSilos are bad for most businesses; this is not an unknown thing. However, by enabling everyone to have the same context, we can enable everyone to work in unison towards a common goal; driving a much more efficient and productive experience for all.\n\nWe understand this is a journey, and greenfield scenarios aside; some products may fit in some of these spots today.\nWhile we would love to displace all, the platform doesn\u2019t require you to do so. For example, you may use us for build and support today in conjunction with Salesforce CRM.\n\nIn that vein, our goal isn\u2019t to sell products. Instead, it is to enable people to build, operate, support and grow products more effectively.\n"
    },
    {
        "id": "ART-738",
        "dataset_source": "devrev-dev0",
        "title": "DevRev | Built for AI (not by AI... yet)",
        "content": "With all of the buzz around ChatGPT, LLMs, and AI, everyone is hopping on the bandwagon with \u201csupport.\u201d But how much of this is fluff vs. reality?\n\nWhen we initially thought about the company, AI was a foundational focus for the product. This is why we chose devrev.ai when we registered our domain in 2020 (far before this recent hype).\n\nWe aren\u2019t just now hopping on the bandwagon; we\u2019ve been preparing for it.\n\nDomain Name: devrev.ai\nRegistry Domain ID: 982682_nic_ai\nRegistry WHOIS Server: whois.nic.ai\nCreation Date: 2020-06-07T22:25:10.749Z\n\n\nSo what are some of the items that make the platform well-positioned to leverage and embrace AI fully? Let\u2019s check them out.\n\nJust want to see some good examples of how we\u2019re using? Check them out below:\n\n\n  \n\n\n\n\nIt\u2019s all about the context\n\nFor AI models they are only as good as the context (e.g., training data, fine-tuning data and embeddings) they have. For example, both Chat GPT 3.5 and 4.0 were trained on the publicly available internet data as of September 2021, but they lack context about the current state. AutoGPT and others will help with this giving it the ability \u201cfetch\u201d additional context it may be lacking, however\u2026\n\n\n  That\u2019s not the key, the key is in the data that you have that the models don\u2019t have access to.\n\n\n\n\nDevRev: built atop a badass knowledge graph\n\nAt its core, DevRev was built to converge the events, products and people (customers, partners and employees) focused around building, operating, supporting, and growing of products. Through the linkage between these objects, we were able to build a powerful knowledge graph that is used to drive every piece of the system.\n\nWith the ability to triangulate across these vertices, we can do some really amazing things and provide much more understanding and insight. This is applicable to not only correlation, or clustering (similarity), but brings the power of AI to things like analytics, trend analysis, and prioritization, as well as many more.\n\nBy converging things and having a common context, all teams are using; the goal is to enable them to operate as a much more cohesive unit with much higher efficiency and satisfaction.\n\nThe following figure is a high-level example of this idea:\n\n\n\nThe following figure (I know, it\u2019s a lot) shows a real-world example of how we can correlate between product, people (contributors, customers), support, build, opportunities, docs, and a whole plethora of other objects:\n\n\n\nHow does this compare to others?\n\nIf we compare the types of data in the DevRev system to other point-based solutions, it is clear there\u2019s a large gap in data between them:\n\n\n  DevRev\n    \n      Products\n      Customers\n      Conversations\n      Tickets\n      Incidents\n      Issues\n      Opportunities\n      Leads\n      Accounts\n      Events (e.g., GitHub, DataDog, etc.)\n    \n  \n  SFDC\n    \n      Opportunities\n      Leads\n      Contacts\n    \n  \n  ServiceCloud\n    \n      Tickets\n      Customers\n    \n  \n  Intercom\n    \n      Conversations\n    \n  \n  ZenDesk\n    \n      Tickets\n      Customers\n    \n  \n  JIRA\n    \n      Issues\n    \n  \n\n\n\n\nUnless someone builds integrations between these systems, they will not have the full context for fine-tuning or embedding. We tried to integrate these systems at our previous company and failed; it\u2019s not an easy problem to solve.\n\nOk, but why should I care?\n\nWhen it comes to making decisions or gathering insight, the more context you have the better the decision you can make. Just think about this in real-world scenarios\u2026\n\nWhen you buy a car do you just consider the features of the car? No, you consider the features, your finances, practicality, terms, what the spouse will say, etc. When you purchase a product, you consider the need, cost, runway, future needs, etc.\n\nNow, say you want to prioritize which work you should focus on and deliver in the next sprint. You\u2019d need information about other items in-flight, staff workload, customer impact of items, dependent opportunities, and a lot of additional data.\n\nWith DevRev, we have the full context and can use that to feed into the models. With the other point systems, you\u2019d need to consolidate somewhere manually or lose valuable context which the models need.\n\nWould you trust something making decisions without full context?\n\nWe are built to leverage\n\nComing from Nutanix, we saw a lot of customers looking to move from monolithic systems to those of a more scalable, converged nature.\n\nBecause we knew AI would be a crucial part of the system, this impacted how we designed our platform. Affecting things like our service design, delivery architecture, change tracking, object model, analytics and almost everything we\u2019ve done in the system; even the way we designed our interface and UX was built to embrace this.\n\nWhat are some examples of how we architected things differently?\n\n\n  We built a badass knowledge graph\n    \n      This is at the core of the DevRev platform and is used by every piece of the system\n      We have defined links between objects which allows us to keep track of various relationships between objects\n      Given this, we are able to easily create graphs of relationships (edges) between objects (nodes)\n      This allows us to triangulate and correlate between items (can also be used in vector DB scenarios)\n      Using this constructed vector DB we can easily cluster objects across various dimensions (we use this to cluster similar events into an incident, for example)\n      We can also triangulate between a customer, product, ticket, issue, and developer allowing us to feed \u201cevents\u201d between objects that may be relevant\n    \n  \n  We used a flexible document DB instead of traditional relational systems\n    \n      Using this structure, we have a ton of flexibility in the document structure, the ability to annotate and extend\n      Relational systems can be very rigid and can quickly get messy with a ton of constraints, especially if you haven\u2019t built a ton of abstractions into the data model\n      This was key enabler for the next point (customization)\n    \n  \n  We built customization in from the start\n    \n      We knew extensibility would be key for any platform\n      Given the simplicity of customization, we can easily extend our object model with new annotations or context that can be used and fed into models\n      This means, that a customer or vendor, can easily extend our object model with new data on objects which can be used by models, new object types, or with the output of a model\n    \n  \n  We built multi-tenancy into the object\n    \n      Rather than physically segmenting tenant data, we built tenancy into the objects using specific attributes which act as partitions\n      This allows us to create macro partitions (e.g., customer) or extremely granular partitions (e.g., user level)\n      This gives us a ton of flexibility as all data is in one place and the granularity can range from macro to micro\n    \n  \n  We designed our services for the cloud\n    \n      Being built in the \u201cera of cloud\u201d we had a lot of very nice tools available to us (e.g. K8s, Lambda, edge computing, WASM, etc.)\n      We fully embraced these methodologies allowing us to create a set of very flexible [micro, function, edge]-based services\n      This allows us to rapidly scale resourcing (e.g. scale-up/down) and iterate quickly\n      Also, by leveraging edge logic and WASM (client-side), we can do some really amazing things (more to come here)\n    \n  \n  We are built to iterate quickly\n    \n      AI evolves faster than we can imagine; being able to iterate quickly is quintessential to ensure customers get the value of this evolution\n      Given the granularity of our services, teams can operate with much more autonomy and speed\n      We were also built during the CI/CD era, meaning we have fully continuous integration and delivery. As an example, we deploy hundreds of changes daily\n      With monolithic systems, changing things can be complicated as you need to build things at a much more macro level\n      Also, some vendors who didn\u2019t grow up in the \u201cas a service\u201d era will need to change processes to embrace CI/CD (some may have)\n      A good ask here is how frequently changes are deployed\n      When something new comes out, we can react and enable rapidly; others may be slower to enable, leading to a gap between when something is \u201cavailable\u201d and \u201creally available\u201d\n    \n  \n\n\nMost of the available items and concepts we had weren\u2019t even ideas when a majority of the other vendors were created. Having gone through a great deal of platform re-architecture, it is a nightmare (if it works).\n\nThis means that those vendors can\u2019t simply \u201cbolt-on\u201d AI, or if they do I would question the efficiency of this.\n\nChallenges legacy vendors will have\n\nI think all of these vendors can and will have great potential with AI. However, I see them taking some time and hitting some challenges, some of which they can overcome and others they cannot. Like with everything in life, always perform a litmus test; commonly, the \u201cmarketing fluff\u201d looks great, but the reality is far different.\n\nHere are some examples of challenges they may face:\n\n\n  The lack of full context will hurt their results (they can\u2019t fix what data they don\u2019t have, this is key)\n  Inability to adapt quickly enough (it\u2019s a lot harder to move a tanker ship than a small boat)\n  Extensive re-design of the UI and backend systems (this will vary between vendors; however, work needs to be done)\n  Infighting and politics (having worked for large companies, everyone will want a piece of the pie)\n\n\nHow are we using AI today?\n\nWe\u2019ve been using AI models internally for a great deal of time. The following are some examples of areas it is currently in use:\n\n\n  part discovery\n  deflection\n  auto part assignment for work items\n  summarization\n  rephrasing or suggestions\n  similar work items\n  customer sentiment\n\n\nTL;DR\n\n\n  Differentiate between fluff and reality\n  DevRev was built to leverage AI fully\n  At its core, DevRev built a badass knowledge graph used by all actions and models in the system\n  AI will provide great benefits for embracing vendors\n  Available data (context) will severely impact the results\n  Meaning, systems that only contain a subset of context will have diminished results\n\n"
    },
    {
        "id": "ART-785",
        "dataset_source": "devrev-dev0",
        "title": "DevRev Documentation",
        "content": "Explore DevRev's features and usageSearch for anythingCMD\u00a0+\u00a0KOneCRMLearn about DevRev to enable next-generation customer support and software development.SupportCreate a culture of support: track work requested by customers and drive product decisions with development teams to delight them.BuildPlan product development activities with now/next/later and sprints.GrowGrow customers, not departments, with a common platform where all teams can collaborate to optimize customer lifetime value.Snap-insConnect tools, automate work, and extend your experience with add-on modules provided by DevRev.DeveloperEnabling developers to create tools for the future with DevRev APIs."
    },
    {
        "id": "ART-786",
        "dataset_source": "devrev-dev0",
        "title": "OneCRM platform",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\n\ud83d\udd17 Platform \ud83d\udee0\ufe0f Apps \ud83e\udde9 Snap-ins\nOneCRM.\n\nIn the DevOps era, developers are now working closer with operations using modern tools for observability and pager duty. However, they still lack a direct connection with end-users, including onboarding, in-app search, self-service, knowledge, crash capture, and feedback. By establishing this link, product development can become more customer-centric.\n\n\ud83d\udd17 Platform.\n\nDevRev's platform seamlessly connects identities (user, developer, support engineer, PM) and parts (product, capabilities, features, APIs) by interweaving design and artificial intelligence. This results in intelligent routing, classification, and prioritization of all work, including conversations, tickets, issues, enhancements, and opportunities ( glossary ), maximizing productivity and minimizing customer churn.\n\nThis is OneCRM: Connected. Intelligent. Agile.\n\n\ud83c\udfa5 Video: DevRev OneCRM Overview \ud83d\udee0\ufe0f Apps.\n\nDevRev\u2019s platform integrates all departments with a customizable CRM, serverless workflow engine, and a bot-supported collaborative experience comprising two native apps : Support and Build.\n\nStreamline customer support with product-centric customer support , featuring an in-app GPT bot, semantic search, clustering for noise reduction, product and user analytics, and real-time notifications for seamless collaboration between teams and end-users.\n\nRevolutionize your product development with customer-centric software development powered by real-time pathways between GitHub transactions, backend issues, product enhancements, customer tickets, and user conversations. Our platform makes product teams more efficient and customer-centric and syncs seamlessly with Jira's legacy issues.\n\n\ud83e\udde9 Snap-ins.\n\nAdd-on modules for DevRev, called snap-ins , are available on the Marketplace. Snap-ins are one of three types. Integrations let you connect DevRev with existing systems such as Slack and Jira. Automations perform tasks within DevRev based on events, like responding to customer conversations and linking tickets and issues. Airdrop helps you bring data from external sources to DevRev and keep them in sync.\n\nWhile numerous snap-ins are available and more are in development, you can create your own using DevRev APIs.\n\nPrevious Introduction Next Core concepts\nOn this page\n\n\ud83d\udd17 Platform \ud83d\udee0\ufe0f Apps \ud83e\udde9 Snap-ins\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-787",
        "dataset_source": "devrev-dev0",
        "title": "Apps",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nConversations Tickets Issues Work/state relationships Work item linkage\nApps.\n\nThe Support. and Build. apps on the DevRev platform enable customers to coordinate with the product or service builders (dev org) and the different parts of the dev org to coordinate with each other. Between every integration hop and side conversation in traditional fragmented systems, important details that help define the why behind work is lost.\n\n\ud83c\udfa5 Video: Convergence: Bringing work together\n\nBy linking work items\u2014conversations and tickets for support, issues and enhancements for build\u2014together, DevRev preserves context. That context defines the problem and requirements for anyone who works on this issue. Moreover, both tickets and issues are always associated with rev parts , tying them to the overall product context.\n\nThe following figure shows a high-level view of the relationship between revenue-generating and product-delivery work.\n\nConversations.\n\nConversations refer to the communication chains you have with your external users. They begin in the DevRev PLuG widget , which enables live chat within customers' apps with just a few lines of code, or through a snap-in for email, WhatsApp, or Slack. Unlike most platforms, customer conversations are no longer siloed to just support, sales, and customer success staff. Instead, they are accessible to everyone in the dev org through the PLuG inbox. The service-level metric for a conversation is time to response.\n\nExample: \"I have a problem with product X.\"\n\nYou can add a title to your conversations as well as members from your own dev org and other members from the user's workspace without starting a new thread or email chain. Because there can be many tickets attached to a single conversation, there is no need to start a new thread for new topics either.\n\nWe recommend closing the conversation whenever you feel the interaction has reached a natural end. Closing the conversation does not close the tickets and your external users are still able to see them in the widget.\n\nTickets.\n\nA conversation is typically started by an external user. It may be a short interaction, such as a quick question about a sale, that does not require a ticket. If a conversation takes more than 5 mins to close, we recommend that you open one or more tickets. A conversation could also contain one or more items that you would want to capture in a ticket. A ticket is used to capture anything that you may need to follow up on from a conversation, which could be bugs, feature requests, or anything in between. A ticket is associated with a part of the product and can come from either an internal or an external user.\n\nExample: \"User reported a problem using product X. They need a workaround for this problem.\"\n\nWhen a support ticket is filed, it's a commitment that the concern will be addressed or resolved. The service-level metric for tickets is time to resolution.\n\nYou might have seen systems (such as Intercom) that have just conversations or systems (such as Zendesk) that just have tickets. Although a lot of customer problems can just be solved with a conversation, some of them do require more work. Those workflows of solving a customer problem are much better represented in the ticket where customer-facing and product-delivery teams collaborate.\n\nFor example, if an external user wrote in and reported a crashing behavior, asked for an enhancement to an existing feature, and asked for entirely new functionality, you would likely create three tickets all linked to the same conversation. This means you do not need to ask your external users to write in separately about each topic they'd like to discuss, while the dev org can still track each item separately.\n\nIn the DevRev app, a support engineer can create a ticket based on a conversation they had with someone using the PLuG widget. This ticket and conversation are linked.\n\nA ticket should describe what the external user is experiencing in a language that's familiar to them. Developer-specific language is reflected in issues.\n\nIssues.\n\nLater on, a software engineer may start work on this ticket by creating an issue and breaking that issue into smaller pieces with tasks. An issue describes what the developer will work on and is created or accepted by someone who owns or works on the associated part of the product. This distinction allows developers to break up a ticket from an external user into issues as they see fit and delegate the work to other team members as necessary.\n\nExample: \"Feature A on product Y exhibited unexpected behavior. This is a defect and needs to be fixed.\"\n\nTickets and issues are linked in many-to-many relationships. It may require multiple issues to resolve a ticket, or one issue may resolve multiple tickets if different external users experience and describe the same behavior in different ways.\n\nWork/state relationships.\n\nThe following figure shows how the various work object types relate.\n\nWork item linkage.\n\nOnce your organization has implemented a mechanism for customers to start conversations, all customer conversations can be tracked within DevRev and any Conversations can be immediately linked to a ticket, a ticket to an issue and subsequently to a part (product capabilities and features).\n\nLink Control Conversation \u2192 Ticket Open the conversation and click Tickets > + Link tickets.. Either create a new ticket or select an existing ticket. Ticket \u2192 Issue Open the ticket and click Issues > + Link issues.. Either create a new issue or select an existing issue. Issue \u2192 Ticket Open the issue and click Tickets > + Link tickets.. Either create a new ticket or select an existing ticket. Issue \u2192 Issue Open the issue and click Issues > + Link issues.. Either create a new issue or select an existing issue.\n\nConversation Ticket Issue >\n\nTo delete a ticket or issue, select the work item in the list view and click the Delete. icon in the taskbar that appears.\n\nPrevious Core concepts Next Groups\nOn this page\n\nConversations Tickets Issues Work/state relationships Work item linkage\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-788",
        "dataset_source": "devrev-dev0",
        "title": "Vistas",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nCreate a vista Delete a vista Best practices for vistas\nVistas.\n\nIn DevRev, a vista is a list of objects (such as conversations, tickets, and issues) that can be sorted, grouped, customized, saved, and shared. Notable vistas are Support > Inbox. and Tickets. , Build > Issues. and Now, Next, Later. , and Product > Parts.. Depending on the type of object there are different options for querying, sorting, customizing, and grouping.\n\n\ud83c\udfa5 Video: Applying filters to Vistas Create a vista.\n\nSelect the object you want to make a list of, for example, tickets.\nMake a change to the default view of the object by applying a filter, sorting, grouping, or customizing. A Save as. button appears in the upper-right corner after you make a change.\n\nYou can also apply Actions. > Smart Clustering. if the tickets or issues are under 1000. This isn't available for conversations.\n\nClick Save as.. You can give the list a name, and description and save it which causes it to show up in the My list. section at the bottom of the left-side nav bar.\n\nEveryone in the dev org has read permission by default, you can share the vista URL if you only want to bring it to their attention. If you want to grant someone else write permission, select the vista from My list. and click Share..\n\nTo export vistas to CSV or JSON, click Actions. and select the format in which you want to export the vista. This allows you to export this data with the filters applied (segmented by owners or some filters). Cross-functional teams can collaborate on this data or import it into other platforms.\n\nDelete a vista.\n\nSelect the vista you want to delete from My list. and click the edit button next to the name of your vista.\nClick Remove access..\nClick Delete. to confirm.\nBest practices for vistas.\n\nBy creating customized views of your customer data based on specific dimensions, you can identify areas of opportunity or risk and prioritize your customer interactions.\n\nHere are some best practices for using vistas to improve your customer relationships.\n\nDefine your goals. : Before creating a vista, define what you want to achieve with the vista. For example, do you want to segment by high-potential customers, prioritize urgent customer requests, or track customer satisfaction levels? By defining your goals, you can create a vista that's tailored to your specific needs and objectives.\n\nKeep it uncomplicated. : Avoid overcomplicating your vista with too many criteria or filters. A cluttered vista can be difficult to navigate and may not provide you with the insights you need. Focus on one particular dimension that your business would benefit from.\n\nCollaborate with your team. : Vistas can facilitate collaboration between different teams or departments within your company. The Share. button on the top right allows you to share your vistas with your larger team. This can be shared with your team and encourage them to provide input and insights. Your team can gain a more holistic view of your customer data and make more informed decisions.\n\nContinuously monitor and adjust. : Keep vistas relevant to and effective in changing business requirements and customer demands.\n\nPrevious Parts & trails Next Customers\nOn this page\n\nCreate a vista Delete a vista Best practices for vistas\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-789",
        "dataset_source": "devrev-dev0",
        "title": "Core concepts",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nIdentity Parts Work Attachments\nCore concepts.\n\nDevRev bridges silos by connecting three core objects: identity, parts, and work. By connecting work to parts and parts to customer and developer identity, we bring devs closer to their revs.\n\nIdentity.\n\nDev refers to you and your team, the provider of a product or service.\nRev refers to your customer, the consumer of the product or service you provide.\n\nParts.\n\nA part is a piece of a product and can be made of rev parts and dev parts.\n\nRev parts relate to how a product is consumed by your customers, with three main types: product, capability, and features.\nDev parts are the code, service, or components built or used by the developer.\nRev parts are often served by one or more Dev Parts.\n\nOne of your first experiences in the app is in DevRev trails. Build your trail, create Rev and Dev Parts, and connect them to enable your teams to be customer-centric.\n\nVisit the parts & trails page to learn more about creating parts and trails.\n\nWork.\n\nA work item is any artifact in the system that requires some activity to be performed by a human or machine. They have associated owners and require some level of effort. Work commonly leads to other work of the same or different type. In that sense, work can be linked together and have parent/child relationships. For example, a high-level issue may spawn multiple child issues/tasks which may each have their own owner as well as their own child items.\n\nA conversation is a synchronous or near-synchronous discussion that may be escalated to a ticket. Conversations are part of the Support app.\nA ticket is a work item created by the customer or consumer. Tickets are part of the Support app.\nAn issue is a work item created by the builder or maintainer. Issues are part of the Build app.\nAn enhancement is the parent of multiple issues that lead to a desired change to the product. Enhancements are part of the Build app.\nA task is a work item used to break down larger work into smaller pieces. Tasks can be part of tickets and issues.\n\nIn traditional systems of record, duplicate work is rampant, and maintenance of the backlog can be an entire job itself. Huge engineering backlogs can have detrimental effects on developers' morale and work velocity.\n\nDevRev helps you avoid duplication during the work creation process. As you're creating a new work item, the Similar work modal appears and presents potential duplicates. You can also use this modal to link the work you're creating to other work items if appropriate.\n\nAttachments.\n\nFiles can be attached to conversations, tickets, issues, and enhancements. The maximum file size is 25 MB.\n\nUnsupported file types\n\nThese file types are not supported as attachments:\n\n.7z.ade.adp.apk.appx.appxbundle.aspx.bat.cab.cmd.com.cpl.dll.dmg.exe.gz.hta.ins.ipa.iso.isp.jar.js.jse.jsp.lib.lnk.mde.msc.msi.msix.msixbundle.msp.mst.nsh.pif.ps1.scr.sct.shb.sys.tar.vb.vbe.vbs.vxd.wsc.wsf.wsh octet-stream\n\nPrevious OneCRM platform Next Apps\nOn this page\n\nIdentity Parts Work Attachments\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-790",
        "dataset_source": "devrev-dev0",
        "title": "Customers",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nConcepts Add new customers Bulk import customer records External reference Identity ingestion\nCustomers.\n\nYour customers and their identity are a crucial part of the DevRev offering and ecosystem. Conversations on DevRev rely on rev identity to capture information about the customer initiating the conversation. Similarly, tickets on DevRev can capture who the ticket was reported by (or reported for).\n\nConcepts.\n\nCustomer identity in DevRev includes the following important constructs:\n\nExternal User/contact. : Your end user or customer or users associated with organization Accounts or Workspaces.\n\nAccount/workspace. : Any logical grouping that an external user is part of. It could represent a customer account for your B2B product (for example Stripe as a customer of Slack) or a workspace in your software product (such as a Slack workspace).\n\nAdd new customers.\n\nTo create a new customer record:\n\nGo to Customers > + Account..\nFill in the following fields as Add Display Name, Description, Domains, Tags, Tiers..\nClick Create..\n\nWhile creating new customer records, be sure to specify the External Reference. so customer information coming from other channels (like PLuG, email, and WhatsApp) can be matched to the right customer record.\n\nBulk import customer records.\n\nTo bulk import a customer record from platforms such as Zendesk, Salesforce, Jira, and Linear:\n\nGo to Customers > Upload CSV..\n\nSelect the accounts or users you want to import in the Import contacts. dialog and click Upload CSV file..\n\nSelect the CSV file from your device. If the file contains any unsupported field name then it's reflected in the Import contacts. dialog. If you go forward with this file unedited, only the fields that are in the schema are uploaded. To verify the required fields, you can download a sample CSV file by clicking Download Sample CSV..\n\nClick Import.. A successful import message is displayed if the file is valid.\n\nIf validation errors are found in a row entry, then that row isn't ingested. An error notification is shown in the bottom left corner providing information about the number of successful imports and the number of errors found.\n\nBy clicking Learn More. in this notification, a sidebar opens listing all rows along with their errors.\n\nNewly created accounts/users are reflected in the customer list. If not, refresh the website for the new accounts/users to be visible.\n\nIf any one of the values isn't in accordance with the field requirement, then the account/user against that row entry isn't created. Some of the fields are mandatory for validating the file. To understand which fields are required, refer to the downloaded sample CSV. Mandatory fields have mandatory in their sample row entry.\n\nCustomer records offer a place to do the following:\n\nFind all conversations and tickets linked to a customer in one view.\nHave internal discussions related to a customer.\nAdd description or notes about a customer.\nAssign an owner or tags to the customer.\n\nApart from customer records that get automatically created from your PLuG integration , new customer records can be created through the app.\n\nExternal reference.\n\nWhile ingesting customer identity into DevRev, customer information coming across channels must be matched to the same record. For example, a customer record created by you using APIs should get resolved and matched when the same customer engages with you on the PLuG widget for a support interaction.\n\nThis is achieved by using the external reference provided by you when creating customer identity.\n\nExternal reference for a customer. user_ref A unique identifier for an end user from your primary customer record. The system uses this to resolve a newly created customer with customers already in the system. If none is available, a good alternative is the email address or phone number that could uniquely identify the user. If none is specified, a system-generated identifier is assigned to the user.\n\nExternal reference for a workspace. org_ref A unique identifier for the customer organization from your primary customer record. If none is available, a good alternative is the customer\u2019s company domain. If none is specified, a system-generated identifier is assigned to the organization.\n\nFor ingestion channels where providing an external reference isn't possible, the system relies on custom logic to identify and match incoming customer identity.\n\nExample: The Slack and Email integration uses a combination of the customer email and workspace domain_name values. WhatsApp uses the WhatsApp number and associated name.\n\nIdentity ingestion.\n\nThe identity of your customers can be brought to the DevRev system in multiple ways.\n\nPLuG. Your PLuG integration automatically brings customer identity to DevRev with each widget conversation.\n\nWorkspace and external user information provided as part of the PLuG integration identifies or creates corresponding customer identity in the DevRev system and links it to PLuG conversations.\n\nIntegrations. DevRev's integrations like Slack , Email for conversations , WhatsApp are additional channels available with DevRev's Omnichannel Support offering. Integrating these channels automatically brings customer identity to DevRev.\n\nAPIs or UI. Apart from automatic ingestion, new customer records can also be created manually using APIs or UI. With DevRev's APIs , you can create automations to ensure your customer records in DevRev stay in sync with your primary customer data.\n\nPrevious Vistas Next Tasks\nOn this page\n\nConcepts Add new customers Bulk import customer records External reference Identity ingestion\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-791",
        "dataset_source": "devrev-dev0",
        "title": "Tasks",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nTasks.\n\nTasks are lightweight work items (like personal to-dos) that DevRev offers in addition to the more complex and richer work management records like issues, tickets, and opportunities. Unlike the mentioned work objects, tasks have been designed purposefully to be very simple. You can break down any work item in DevRev into a bunch of tasks to track your daily progress on it. Tasks may be owned by the owner of the work item or by someone else. They may be created automatically from GitHub or by a dev user.\n\nYou can also create personal tasks under My Tasks. that are not linked to any work item and live outside independently like studying some topic, setting up a meeting, or following up with someone.\n\nYou can use this to get your job done, organize your day, and ensure the highest priority work items are always front and center for you. The page has two tabs to show all your open tasks and completed/closed tasks.\n\nUse tasks to:\n\nSet due dates for tasks if needed to denote deadlines by when they should be completed.\nMaintain a checklist of tasks inside a work record or outside and mark the checkbox next to them to denote that they are completed.\n\nFor example, if your issue is tracking the work of adding a new API in a service, your tasks linked to that issue can be:\n\nRead up on the code of the service\nClarify doubts with the tech lead\nWrite the core logic\nWrite unit tests for it\nRaise a PR\n\nYou cannot assign personal tasks to others. Tasks associated with a work record can be assigned to others.\n\nUse child issues and dependency issues for more heavy work assignments to others that are related to your work. Use tasks only for lightweight things like reviewing your work. ::: You cannot see the linked work item (issue, ticket, or opportunity) for a task and can navigate to it directly from there.\n\nPrevious Customers Next Updates\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-792",
        "dataset_source": "devrev-dev0",
        "title": "Updates",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nFollow conversations Filtering updates Daily email digest\nUpdates.\n\nUpdates. help you stay on top of all your activity on DevRev.\n\nConversations, tickets, and issues for which you are an owner, member, or creator; have commented on; or have been @mentioned are automatically shown in your updates. A group can also be mentioned here which will send a notification to all the members of the group. For other tickets and issues, you can follow them to receive some or all updates through the bell icon \ud83d\udd14 on the work item and you can unfollow work items to stop updates by unchecking all or some update types.\n\nBoth discussions and field updates show up as participation updates. Participation updates are the most frequent. You can unfollow them to reduce noise in your updates.\n\nFollow conversations.\n\nTo receive updates about conversations in the PLuG inbox, you must be a member of the support group. To manage membership of the support group go to Settings. > Groups..\n\nFor more information about groups, refer to Groups.\n\nFiltering updates.\n\nAny activity on a work item can trigger an update. You can filter and sort work item updates by Type. and Object..\n\nTo reduce noise, we have prioritized tabs Important. and Others.. High-priority items like mentions, assignments, and new comments on work items that matter the most go to Important..\n\nNotifications are organized into clusters which appear only under the specific object or bot.\n\nDaily email digest.\n\nDevRev sends a daily email digest with a summary of unread updates. The updates in the email are not comprehensive but give you a snapshot of what you might have missed. Clicking the link in the email takes you to the Updates. page in DevRev where you can see all the latest items.\n\nPrevious Tasks Next Customer email notifications\nOn this page\n\nFollow conversations Filtering updates Daily email digest\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-793",
        "dataset_source": "devrev-dev0",
        "title": "Groups",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nAdmin privileges Creating a new group Managing group members Inviting users to groups Updating a group Assigning and revoking roles\nGroups.\n\nA group is a collection of users. Groups can either be internal or external user groups. Access control ensures that only authorized individuals or entities can perform specific actions or view certain information while restricting access for others.\n\nInternal user groups have an owner associated with the group. Groups can also exist independent of any roles.\n\nThe following are the default groups in an org:\n\nAdmins:. All organization admins.\n\nPlatform Users:. All internal members of the organization. Any new member in the organization is added to this group by default.\n\nSupport:. All members of the support team. This may include customer success and sales. Only members of this group receive updates about conversations in the PLuG inbox.\n\nCustomers:. All external members (customers) of the organization. Any new customer is added to this group by default.\n\nCustomer Admins:. Users who can manage the customer inquiries of their workspace. Other customer admins and admins of their workspace can add customers to this group.\n\nAdmin privileges.\n\nAdmins have access to everything on the app by default.\n\nAdmins have the authority to configure access for different user groups by assigning or revoking roles. These roles determine the level of permissions and privileges granted to a group, allowing them to perform particular tasks or access specific features.\n\nOnly an admin can grant admin privileges to another user.\n\nCreating a new group.\n\nYou need to be an admin to create a group.\n\nGo to Settings > User Management > Groups. and click +..\nFill in the group details and add users to the group by using their email or name.\n(Optional) You can also change the owner and add the description of your group.\nManaging group members.\n\nAdmins. possess the capability to add or remove members from any group.\n\nOwners. of groups can't be removed from their respective groups.\n\nTo add a member to a group, go to Settings. > User Management. > Groups..\nSelect the group in which you want to add a user.\nClick the Users. tab and add a new member using the +User..\nInviting users to groups.\n\nOnly admins of an existing group can invite users to a group by the following steps:\n\nGo to User Management. > Invitations..\n\nClick +Invite..\n\nIn the To. field, enter the email addresses of the users to invite.\n\nIn the Add to groups. field, add the required group. The user\u2019s current group Platform Users. is pre-filled by default.\n\nYou won't be able to see the Invite. button if you are not an admin.\n\nClick Send Invite. to send out the invitations.\n\nUpdating a group.\n\nOnly custom groups can be updated by admins.\n\nAssigning and revoking roles.\n\nAdmins can configure what access a certain group has, by assigning and revoking roles for a group.\n\nTo assign/revoke roles for a group, go to User Management > Groups. , and click the group in which you want to make changes.\nClick the Privileges. tab and select your target object or category (Support, Build, Grow, Analytics).\nCurrently, available targets are:.\n\nTicket\nIssue\nOpportunity\nAccount\nWorkspaces\nContacts\n\nClick Edit. and toggle on the roles that you want for your group. Roles contain privileges like create, read, update, and delete.\n\nWhen you create a new org, a few default roles are already added for you to play around with. You can change a group's access by assigning and revoking these roles as shown below.\n\nRefer to roles for more information.\n\nPrevious Apps Next Parts & trails\nOn this page\n\nAdmin privileges Creating a new group Managing group members Inviting users to groups Updating a group Assigning and revoking roles\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-794",
        "dataset_source": "devrev-dev0",
        "title": "Roles",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nTargets Privileges Caveats Create custom roles Add caveats to a role\nRoles.\n\nAn actor is an entity performing an action in the app. It could be an org member, a customer, a system user, or a service account. Roles provide the ability to control what access an actor has on the app, portal, and PLuG. Org admins can control what actors can see or interact with on the app using roles. Roles are assigned to groups. Users in the organization get access to the app by being members of various groups.\n\nA role consists of the following:\n\nTargets\nPrivileges\nCaveats\n\nTargets.\n\nA target represents the object type on which the role is applied. Every role comes with a single target. List of currently available targets:\n\nIssues Tickets Conversations Opportunities Account WorkSpaces Contacts Dashboard\n\nFor example, in a content management system (CMS), different user roles may be assigned specific access to various targets, such as tickets. The access control system can have roles like Customers , Admin and, Support each with distinct permissions related to the tickets target. Support may have the ability to create, edit, and delete pages, customers could be limited to creating and editing their tickets, while admins would have full control over all pages, including the ability to delete them.\n\nPrivileges.\n\nPrivileges represent the operations/actions that the role allows you to perform on the target object. A role can have more than one privilege. List of supported privileges:\n\nCREATE. : to create the target object.\nREAD. : to read the target object.\nUPDATE. : to update the target object.\nDELETE. : to delete the target object.\n\nCaveats.\n\nA caveat specifies conditions under which a role applies. Roles may or may not include caveats.\n\nWhen defining roles, you can use targets and privileges to grant specific permissions. For instance, a role might have the privilege to \"Allow READ on tickets\". However, there could be cases where you need the role to be more specific, such as \"Allow READ on tickets when the actor is the owner\". This is where caveats become important. Roles with caveats only grant privileges when the specified conditions are met, allowing for fine-grained access control in the application.\n\nCaveats can be applied to the attributes of the actor (the user) or the target (the resource being accessed). Each caveat consists of three elements: a key (attribute of the actor or target), an operator (for example, belongs to), and a value (for example, target.participants).\n\nCreate custom roles.\n\nYou can create custom roles in your org if you are an admin of the group.\n\nGo to Settings. > User Management. > Groups..\nSelect the group in which you want to create roles.\nGo to Privileges.. You can see the categories Support. , Build. , Grow. , Analytics..\nSelect the desired category, open the drop-down menu, and select a target for which you want to create custom roles.\nClick Add privileges. > Custom Roles. tab.\nClick + New Role..\nSelect the required privileges for the role.\nClick Create..\n\nYou can also add caveats to the role.\n\nAdd caveats to a role.\n\nCreate a new custom role.\n\nClick + Caveats. to add a caveat for the role.\n\nSpecify the user field, operator, and part.\n\nAvailable operators are equals to. and belongs to..\n\nExample: When the user belongs to owners.\n\nHere, Tickets. is a target that consists of a role with privileges READ and CREATE. The conditions like \"When User belongs to Owners\" and, \"When User workspace is equal to Ticket workspace\" are caveats. Actors get access to perform actions only when those conditions are satisfied.\n\nCaveats can be added to the following objects:\n\nTicket\nIssue\nAccount\nOpportunity\nAccount\nWorkSpaces\nContacts\n\nPrevious Customer email notifications Next Access control\nOn this page\n\nTargets Privileges Caveats Create custom roles Add caveats to a role\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-795",
        "dataset_source": "devrev-dev0",
        "title": "Access control",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nAccess control.\n\nAccess control in DevRev is a system that authorizes an actor to perform actions on different targets within the application. In this context, an actor is any entity that interacts with the app, such as an organization member, a customer, a system user, or a service account.\n\nWhen an actor attempts to carry out an action, such as creating an issue, the access control system checks the actor's role to determine if the actor has the necessary privileges to perform the desired action.\n\nEach role consists of two essential parts: caveats and privileges. Caveats represent specific conditions that must be met for the role to be applicable. Privileges outline the actions or operations that the actor is granted when those caveats are satisfied. If at least one role provides the necessary privilege, for example, the CREATE privilege, the actor is granted permission to proceed with the action, allowing them to create the issue.\n\nThe process of checking access is as follows:\n\nFetch all the user's groups.\nFetch roles associated with the particular target from the user groups, which in this case would be the \"Issue\". Caveats represent specific conditions that must be met for the role to be applicable, while privileges outline the actions or operations that the actor is granted when those caveats are satisfied. Each role consists of two essential parts: caveats and privileges.\nThe system evaluates the caveats of all the roles associated with the target. If at least one role provides the necessary privilege, say \"CREATE\" privilege, the actor is granted permission to proceed with the action, allowing them to create the issue.\n\nIf a user attempts an action they're not authorized to perform, they see a message which says \"You are not authorized to perform this action\". Relevant buttons may be inactive. Users can contact the organization's admins to enable access in that case.\n\nPrevious Roles Next Glossary\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-796",
        "dataset_source": "devrev-dev0",
        "title": "Glossary",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nGlossary.\n\naccount capability connection contact conversation customer dev DevRev engagement enhancement environment feature identity issue linkable marketplace opportunity part PLuG product rev runnable snap-in task ticket trail user vista workspace\n\naccount\nA customer organization, including its name, address, industry, domain, and website address. Terms related to account :\n\ncustomer workspace\n\nRead more about account\ncapability\nA collection of features that enable a customer to achieve a use case. Capability is a unit of licensing and entitlement for the persona driving a particular use case. As a collection of features, capabilities are grouped into different buckets for tiered use cases (for example, starter-professional-enterprise). Terms related to capability :\n\nfeature product\n\nRead more about capability\nconnection\nAn integration with an external system. Connectors synchronize entities between systems, either bi-directionally or by creating objects in the source system. Terms related to connection : snap-in\ncontact\nIndividual prospects or users associated with an organization's workspaces or accounts. Contacts can be associated with an account or workspace, but not always. Terms related to contact :\n\naccount workspace\n\nRead more about contact\nconversation\nAn interaction between the builder and consumer that may be escalated to a ticket. Terms related to conversation : ticket Read more about conversation\ncustomer\nThe consumer of a product or service, whether internal (dev) or external (rev). Terms related to customer :\n\ndev rev\n\nRead more about customer\ndev\nA DevRev user who develops, builds, or provides products or services to a customer (rev). Terms related to dev : rev dev-users API reference\nDevRev\nA platform that brings developers (devs) closer to customers (revs) by providing a single system of record for development, customer-facing, and product teams. DevRev's mission is to leverage design, data engineering, and machine intelligence to empower engineers to embrace their customers. Read more about DevRev\nengagement\nInteractions between employees and customers, encompassing communications across various channels and touchpoints. DevRev links accounts, contacts, and employees to engagements. Additionally, they can be linked to opportunities if they are relevant to a specific opportunity. Read more about engagement\nenhancement\nA change to a part in the form of addition, deprecation, or transformation. Terms related to enhancement : part Read more about enhancement\nenvironment A run time, either the customer's (for example, a browser) or the dev org's product or service.\nfeature\nA thing that your product does, that should contribute to solving the overall problem the product is trying to solve. It is an individual experience or element of functionality. Features are the smallest unit of entitlement (user) or deployment (developer, DevOps) that can be switched on or off, based on which tier the user is licensed to use, or which feature flag has been toggled in the production cloud. Features comprise sub-features and APIs. Terms related to feature :\n\ncapability part product\n\nRead more about feature\nidentity\nThe mechanism to ensure that internal users (devs) get access to the correct data and have a personalized experience and to ensure that an organization can accurately maintain a system of record for their leads, customers, and users. Terms related to identity : part Read more about identity dev-users API reference\nissue\nA work item created by the builder or maintainer of a part or by automation. \"Autonomous issues\" are created by automation. Terms related to issue :\n\nticket part\n\nRead more about issue works API reference\nlinkable\nA unit of functionality that is designed to be part of a system or application and not used directly. These commonly refer to things like libraries or utilities that may be leveraged by multiple runnables. Terms related to linkable :\n\npart runnable\n\nRead more about linkable\nmarketplace\nAn app store for DevRev where creators and consumers come together to create, interact, and transact. Read more about marketplace\nopportunity\nA potential source of revenue for your organization. Opportunities feature customizable states and stages that communicate their position within the sales pipeline. Read more about opportunity\npart\nA component of a product. A part can be made of other parts. Events and work items can be specific to any type of part. Rev parts are related to how a product is expressed, integrated, or consumed. Dev parts are those built internally related to code or something the developer relies on or builds, or a service provided by an organization. Terms related to part :\n\nidentity trail\n\nRead more about part parts API reference\nPLuG\nThe part of the DevRev platform that directly enables communication with an understanding of your end users, including your customer success and support teams. Read more about PLuG\nproduct\nThe entity around which a business is organized and its profit and loss (PnL) is monitored. Businesses may have multiple products. Terms related to product :\n\ncapability feature\n\nRead more about product\nrev\nThe customer of a product or service developed, built, or provided by a developer (dev). Terms related to rev : dev\nrunnable\nA dev part that can be instantiated or do something and that has some direct execution or lifespan. These commonly refer to things like macroservices, microservices, or functions (lambdas). A runnable may serve one or more features or capabilities. Terms related to runnable :\n\nlinkable part\n\nRead more about runnable\nsnap-in\nA mechanism to extend DevRev's value by connecting with external systems, automating workflows, or personalizing your experience. Read more about snap-in\ntask\nA work item that requires an owner and a single action to be performed. Terms related to task :\n\nissue ticket\n\nRead more about task\nticket\nA record of a customer's request for assistance or support. When a customer contacts a company with a problem or issue, the company creates a ticket to track the request and ensure that it is addressed in a timely and satisfactory manner. Also known as a \"customer ticket\" or \"support ticket\". Terms related to ticket :\n\nconversation issue\n\nRead more about ticket works API reference\ntrail\nConnects dev parts (the code, service, or components built or used by the developer) and rev parts (how a product is expressed, integrated, or consumed). Terms related to trail : part Read more about trail\nuser\nA member of a dev or rev organization. Terms related to user : workspace Read more about user dev-users API reference\nvista\nA list of objects in DevRev that you can sort, categorize, and share. Read more about vista\nworkspace\nThe customer of a product or service. Read more about workspace rev-orgs API reference\nPrevious Access control Next Search\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-797",
        "dataset_source": "devrev-dev0",
        "title": "Accessing DevRev",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nAccessing DevRev.\n\nYou can access DevRev on the web, mobile, and tablets.\n\nComputer iOS Android\n\nIntegrate all departments with a customizable CRM and get connected with customers with DevRev.\n\nSupported browsers.\n\nChrome\nSafari\nFirefox\nEdge\n\nView history.\n\nTo view the previous record you were looking at, use the back button of the browser < to go back. If you want to come back to where you were, use the forward button >.\n\nPrevious People insights Next External identity provider setup\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-798",
        "dataset_source": "devrev-dev0",
        "title": "External identity provider setup",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nBefore you begin Identity providers\nExternal identity provider setup.\n\nDevRev can be configured to use external identity providers for SSO.\n\nIf you want DevRev to use an external identity provider, follow the instructions for your organization\u2019s provider, then file a support ticket for DevRev to complete the setup.\n\nBefore you begin.\n\nTo register DevRev as a SAML 2.0 application, you need the slug for your dev org. You can find it in DevRev under Settings > General..\n\nFor example, if your DevRev App URL is https://app.devrev.ai/myorgslug , then the value of the slug is myorgslug. In the configuration instructions, replace <DEV_ORG_SLUG> with your org's slug.\n\nIdentity providers.\n\nYou can register DevRev as an identity provider in any of the following services.\n\nAzure AD Google Workspace Jump Cloud Okta\n\nLog in to Azure Active Directory and select Enterprise applications > + New application..\n\nSearch for \"Azure AD SAML Toolkit\" in the Browse Azure AD Gallery. and select it.\n\nEnter DevRev as the name and click Create..\n\nSelect Single sign-on > SAML..\n\nEdit the Basic SAML Configuration. and enter the following parameters.\n\nIdentifier. (Entity ID): urn:auth0:tf-devrev-prod:<DEV_ORG_SLUG>\nReply URL. (Assertion Consumer Service URL): https://auth.devrev.ai/login/callback?connection=<DEV_ORG_SLUG>\nSign on URL. : https://app.devrev.ai/<DEV_ORG_SLUG>\n\nGo to Copy > SAML Certificates. and save the App Federation Metadata URL..\n\nIn the Azure portal, go to the application named \"DevRev\" that you created earlier under Enterprise applications. Within the application, go to Users and Groups. and assign the users who can access the app.\n\nOnce the above steps are completed, file a DevRev support ticket with the SAML metadata, downloaded certificate, or the IdP URL. DevRev customer success completes the setup in your DevRev instance.\n\nPrevious Accessing DevRev Next Support\nOn this page\n\nBefore you begin Identity providers\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-799",
        "dataset_source": "devrev-dev0",
        "title": "Snap-ins",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nSnap-ins.\n\nAdd-on modules for DevRev, called snap-ins, are available on the Marketplace.\n\nSnap-ins are of the following types:\n\nIntegrations. let you connect DevRev with existing systems such as Slack and Jira.\nAutomations. perform tasks within DevRev based on events, like responding to customer conversations and linking tickets and issues.\nAirdrop. helps you bring data from external sources to DevRev and keep them in sync.\n\nWhile numerous snap-ins are available and more are in development, you can create your own using DevRev APIs.\n\nSupport.\n\nAuto parts to conversation Calendly Salesforce Auto-reply Email Zendesk Auto-routing Google Calendar ZoomInfo Bulk ticket uploader Slack Rocketlane Convergence WhatsApp Confluence CSAT on conversation Instabug CSAT on ticket Sentiment evaluator SLA change notifier Slash commands Smart import KBs Smart sprint Work duration\n\nAutomate Integrate Airdrop\n\nBuild.\n\nConvergence GitHub Jira Work duration Linear Ticket age in engineering\n\nAutomate Integrate Airdrop\n\nGrow.\n\nAutomate opportunities Calendly Salesforce Google Calendar Hubspot ServiceNow\n\nAutomate Integrate Airdrop\n\nPrevious Grow snap-ins Next Automate\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-800",
        "dataset_source": "devrev-dev0",
        "title": "Support",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\n\ud83d\udc49 Getting started \ud83d\udcac PLuG \ud83d\udce8 Inbox \ud83c\udfab Tickets \ud83d\udcc8 Insights\nSupport.\n\nThe role of customer support teams is evolving. In the post-GPT era, powered by AI and analytics, customer support is no longer just a first line of response to customer queries. Customer support is truly shaping to be the interface between the customer and development teams, driving product decisions through a precise understanding of customers' voices.\n\nThe DevRev Support app is an AI-powered tool for live chat and ticket management that fosters a culture of support in your company.\n\n\ud83c\udfa5 Video: Support Overview \ud83d\udc49 Getting started.\n\nThe most important first step in getting started with any DevRev app is to describe the structure of your product in Trails. Because all work is associated with a part, you need to define the parts of your product.\n\nVistas are lists of objects that can be sorted, grouped, customized, saved, and shared. Updates show activity on objects that are relevant to you. These are general capabilities of DevRev that are useful for Support as well as for other purposes.\n\n\ud83d\udcac PLuG.\n\nThe PLuG platform offers a GPT-powered chatbot that provides the first line of response from articles uploaded into your knowledge base with the Smart import KBs snap-in.\n\nYou can also customize the PLuG widget to make announcements or highlight something to your customers.\n\n\ud83d\udce8 Inbox.\n\nThe Support Inbox is where conversations started by your customers appear\u2014whether they use PLuG, email, Slack, or another integration.\n\nThe Auto-routing snap-in enables you to set keyword-based rules about who is assigned ownership of conversations as they come in.\n\nSlash commands are available in conversations to provide AI assistance to customer experience engineers. To get a list of the available commands, type / in a conversation response text box.\n\n\ud83c\udfab Tickets.\n\nThe benefit of OneCRM is that conversations can be linked to support tickets , and tickets can be linked to build issues. This linkage means that all work can be traced back to customer concerns or requests.\n\nSlash commands are available in tickets to provide AI assistance to customer experience engineers. To get a list of the available commands, type / in a ticket discussion text box.\n\n\ud83d\udcc8 Insights.\n\nThe Support Insights vista collects and displays data about conversations and tickets. You can use this visualization to identify trends and concerns in your customer support process.\n\nPrevious External identity provider setup Next Inbox\nOn this page\n\n\ud83d\udc49 Getting started \ud83d\udcac PLuG \ud83d\udce8 Inbox \ud83c\udfab Tickets \ud83d\udcc8 Insights\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-801",
        "dataset_source": "devrev-dev0",
        "title": "Inbox",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nInbox.\n\nThe Inbox at Support > Inbox. is a vista where conversations started by visitors or existing users are found.\n\nCustomers can start conversations from the PLuG widget installed on your website/app or through other channels (such as email and Slack ) if you have set them up.\n\nCustomer experience engineers can respond to conversations from the Inbox. Their responses are sent through the same channel as the customer used to start the conversation.\n\nThe Inbox sorts conversations into three categories:\n\nPrimary. : Conversations started by verified customers.\nGuest. : Conversations started by a user that is not verified as a customer.\nSpam. : Conversations that appear to be malicious, fraudulent, or otherwise invalid. If a conversation is erroneously categorized as spam, you can open it and mark it as Not spam..\n\nSlash commands are available inside conversations to assist customer experience engineers with managing the conversation. To get a list of the available commands, type / in the response text box in a conversation.\n\nPrevious Support Next Support analytics\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-802",
        "dataset_source": "devrev-dev0",
        "title": "Conversations",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Stages\nConversations.\n\nA conversation is an object type that's used to track any synchronous or near-synchronous discussions. A conversation maybe started by a customer, a dev user, or a system (auto-created).\n\nA new conversation is routed to the customer org's default owner unless it matches keywords in the support routing snap-in configuration.\n\nConversations from new or unidentified customer orgs have lower priority than existing customer orgs.\n\nTags. [ values ]\n\nStalled\nPriority/Escalated\nFast/Slow Moving\nBlocked\nResolution: [ value ]\n\nStages.\n\nThe following figure shows the state machine for conversations.\n\nOpen.\n\nNew\n\nThe initial stage for all valid conversations. In certain cases, spam may get past the filter and end up in new which would be moved to suspended. When someone from the support team responds, the status changes to waiting on user as they need a response from the user to take the next step towards addressing the user's concern.\n\nSuspended\n\nThe initial stage for all invalid conversations, which may include spam or otherwise suspicious inquiries. This stage is used to minimize noise in the support inbox. If, upon review, the suspended item is deemed valid, it's transitioned to the new stage.\n\nIn-progress.\n\nWaiting on user (WOU)\n\nSomeone from the support team has responded and is waiting on a response from the user. For the initial response, the stage transitions from new to waiting on user. When a customer responds back to support, the stage transitions to needs response.\n\nTowards the end of the conversation when the resolution is expected to be valid, the customer experience engineer asks the customer to acknowledge their concerns have been resolved. When the customer experience engineer asks this question the stage transitions to waiting on user , and if they validate it moves to needs response for the customer experience engineer to verify resolution. Once verified the customer experience engineer moves the stage to resolved. If the user does not validate the resolution, the customer experience engineer responds back to the user and the process continues.\n\nTo calculate the time to initial response you can look at the duration between the conversation created timestamp and the time the stage transitions from new to waiting on user. Another method is to see how long the conversation was in the new stage.\n\nNeeds response (NR)\n\nThe customer has responded; the customer experience engineer needs to review the item and respond or resolve the issue if the user requests or validates the fix. When a customer experience engineer responds the stage transitions to waiting on user.\n\nIn certain cases it may be necessary to escalate the item internally where the conversation may depend on tickets, issues, or a response from someone other than themselves. In this case the stage transitions to hold since the customer experience engineer is blocked by a dependent item.\n\nConversations which need a response from the customer experience engineer shows a Reply. button in the inbox.\n\nHold (H)\n\nThe resolution is waiting on some dependent item. Dependencies may include review from someone other than the customer experience engineer (for example, SME, manager, PM, developer) or the completion of other work items (tickets or issues).\n\nWhen the dependencies have been completed the stage transitions to needs response to bring to the customer experience engineer's attention. Upon review they may put the conversation back on hold to re-escalate the item. If the dependencies seem to be resolved the customer experience engineer responds to the customer and the stage transitions to waiting on user.\n\nClosed.\n\nResolved (R)\n\nThe final target stage for conversations. It means that the customer's concerns which led to the conversation have been addressed.\n\nA conversation set to resolved still shows in the end-user's widget. If they respond again, it reopens the conversation and set the status to needs response.\n\nArchived\n\nThe final stage for conversation.\n\nPrevious Conversations dashboard Next Tickets\nOn this page Stages\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-804",
        "dataset_source": "devrev-dev0",
        "title": "Tickets",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nCreate a ticket Tags Stages Turing suggests\nTickets.\n\nA ticket is a record of a customer's request for assistance or support. When a customer contacts a company with a problem or issue, the company creates a ticket to track the request and ensure that it's addressed in a timely and satisfactory manner. For example, if a user calls in and files a ticket for a problem they're facing any progress would be communicated to them through the ticket.\n\nTickets are associated with a part (product or service) and can come from both internal and external users. Tickets are also used to communicate progress to the user or other impacted party.\n\nThere may be cases where mass communications (broadcast) are necessary in the event of lots of impacted or related parties (such as service status updates). In this scenario, the ticket would be used to broadcast and handle communications among multiple parties, including across multiple workspaces. Broadcast can also be used to engage customers for feedback/ideas (such as new feature ideas). Scoping is important for broadcast tickets as there needs to be a differentiation between broadcast (all revs) vs. multicast (particular revs).\n\nViews of tickets can be found under Support. in the DevRev app.\n\nYou can export views to CSV or JSON by selecting Actions. in the upper-right corner and choosing the format.\n\nCreate a ticket.\n\nGo to Support. > Tickets. from the sidebar on the left.\n\nClick New Ticket. on the top-right corner of your screen.\n\nAdd a title and description for your new ticket. You can also attach files related to the ticket in the description.\n\nSelect which part of the company/product this ticket is related to.\n\nEnter other attributes for the ticket: change the assignee or accept the default; enter the severity; add any relevant tags to help employees identify any relevant traits of the ticket; select the workspace that the ticket pertains to.\n\nIf there are other tickets or issues that relate to this ticket, click Link Records. and select the relevant items.\n\nIf you would like to immediately create another ticket, select Create multiple..\n\nClick Create..\n\nTags.\n\nStalled\nPriority/Escalated\nFast/Slow Moving\nBlocked\nResolution: [ value ]\nImpact: [ value ]\nReason: [ value ]\n\nStages.\n\nThe following figure shows the state machine for tickets.\n\nOpen. Queued (Q) The initial stage for all tickets. When a new ticket is created, it's automatically put into the queued stage, which indicates that it needs to be picked up by a customer experience engineer.\nIn-progress.\n\nWork in progress (WIP)\n\nWork on the concern reported by the user has begun. When a customer experience engineer starts work on a ticket, the ticket's stage changes to work in progress. When they require more information, they may ask the customer for additional detail (such as logs or context), in which case the stage would change to awaiting customer response until the customer responds.\n\nIn certain scenarios, the customer experience engineer may be able to resolve the customer's concern. If that's the case, they would ask the customer if their resolution has resolved their concern and the stage would move to the awaiting customer response. Once the concern is resolved and the customer acknowledges the resolution, the stage may move to resolved. If the concern isn't resolved, the stage may change back to work in progress as the customer experience engineer continues to work on it.\n\nAwaiting product assist (APA)\n\nThe customer experience engineer is waiting for a response or feedback from someone internally. They may need to escalate the ticket to get a response from someone internally. There may be a corresponding issue created to fix the defect, which would transition the stage to awaiting development.\n\nAwaiting customer response (ACR)\n\nThe customer experience engineer requires more detail or another response from a user. In certain cases where the ticket depends on some fix (issues) the stage may go from in development to awaiting customer response when the corresponding issues have been resolved and the fix needs to be validated with the user.\n\nIn certain cases, the customer experience engineer may be able to solve directly (without any required issues) which may change the stage from work in progress to awaiting customer response to validate they have solved the problem. If either has resolved the customer's concern the stage can move to resolved.\n\nAwaiting development (AD)\n\nThe issues on which the user's concern relies for resolution are planned but not active. When development on the issue begins the stage transitions to in development.\n\nIn development (ID)\n\nThe issues on which the user's concern relies for resolution are actively being worked on. Once the development process begins, the stage may go from in development to awaiting customer response to validate the fix with the user and then to resolved. If the user wants to cancel the ticket then the stage moves to canceled.\n\nClosed.\n\nCanceled (C)\n\nThe ticket is determined to be invalid either by the user or the customer experience engineer. In certain scenarios, a ticket may have been created by accident and may be canceled by the creator. In other scenarios, garbage tickets may be created through automation or because of spam. Automation or the customer experience engineer can directly close and cancel such tickets.\n\nAccepted (A)\n\nThe ticket requires a new feature development on the platform for resolution. However, there is no active work on the ticket but the feature addition required to meet the ticket will be done in the future. This stage is added to ensure that feature requests do not linger in the APA queue and to ensure that the right features are prioritized during roadmap planning.\n\nResolved (R)\n\nThe goal target stage for tickets. Resolved means that the customer's concerns which led to the ticket have been addressed.\n\nTuring suggests.\n\nTuring suggests is designed to aid customer experience engineers in resolving current tickets more efficiently. Each time a ticket is viewed, Turing AI proactively presents a curated selection of similar tickets and related knowledge articles. Additionally, this system includes a feedback mechanism. This allows users to contribute to the continual learning and enhancement of the AI, ensuring an increasingly effective and refined support experience over time. This advancement is a valuable tool in streamlining your support workflow and enhancing overall service quality.\n\nIn case you want it to learn and help you better in the future, don\u2019t forget to give \"\ud83d\udc4d\" on the suggestion if you like it or \"\ud83d\udc4e\" to dislike it.\n\nPrevious Conversations Next Routing\nOn this page\n\nCreate a ticket Tags Stages Turing suggests\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-805",
        "dataset_source": "devrev-dev0",
        "title": "Support best practices",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nConfigure the DevRev app Monitor the inbox Respond to conversations Conduct daily health checks Manage tickets\nSupport best practices.\n\nConfigure the DevRev app.\n\nInstall and configure the support convergence, auto-response, and article suggestion snap-ins so that customer conversations are acknowledged automatically.\nEnsure that every customer org record in DevRev contains the following:\n\nPain points and primary use cases\nSuccess plan for the account\nMeeting notes and meeting recordings\nNext steps and action items\n\nDefine a small number of tags to help categorize tickets. For example, at DevRev we have the following: bug , feature-request , other-request , question , and incident.\nDesignate one or more customer experience engineers to be on call. Add them to the Support. group inside Settings > Groups. and as default owner in the Support Routing. snap-in. Default owners are notified through email and the DevRev app as soon as a new conversation is started.\n\nMonitor the inbox.\n\nPeriodically group the Inbox. by stage and make sure there conversations only in hold or awaiting customer response stages.\nLet the customer know when a ticket linked to a conversation is closed and request their verification.\nOnce all tickets of a conversation are resolved and the customer is satisfied, resolve the conversation.\nMove new tickets to the awaiting product assist stage.\n\nRespond to conversations.\n\nRespond as fast as possible to any new conversation. Respond within 1 hour to new messages on existing conversations. Change the stage of conversation to awaiting customer response as soon as you have responded.\nIn Updates. , filter by Type. > Mentioned.. Respond to those updates first.\nCreate a ticket if you aren't able to resolve the conversation in 20 minutes. As soon as the ticket is opened, move it to the escalate stage. The owner of the ticket is the owner of the customer org where the conversation originated, usually someone from customer success or sales.\nAsk follow-up questions to get the full context of the problem.\nIf the article suggestion didn't help the user, search in the customer-facing documentation or knowledge base and share any relevant results.\nIf you judge that a message that starts a conversation is invalid (such as spam), mark the user record with the spammer tag and move the conversation stage to archived.\nIf you are tagged on a conversation of which you are not the owner, let the owner know to respond. It's beneficial to retain the same point of contact for the duration of the conversation unless the owner refers some another user.\nIf the conversation has a customer org that's unidentified or is new, add yourself (the customer experience engineer) as the owner of the ticket. Try to find the appropriate owner for the customer org and update the customer record accordingly.\nChange the stage of the conversation to hold if there are tickets linked. This means that support is asking for help from engineering.\n\nConduct daily health checks.\n\nOn a daily basis all ticket owners should triage tickets to make sure they're well-maintained and that appropriate actions are taken.\nMove new tickets from queued to the awaiting product assist.\nTrack the default Team Activity. vista for tickets owned by everyone and navigate to your tickets. Ensure the correct owners are assigned; tickets should be assigned only to revenue team members.\n\nManage tickets.\n\nRegularly follow up with the customer on any ticket in the awaiting customer stage. If no response is forthcoming in a reasonable amount of time as defined by your SLA, mark the ticket as resolved.\nCritically assess the severity of the ticket according to the impact on the customer\u2019s business. Blockers are those tickets that are critical to customer adoption or operations. Each account should have some balance of high, medium, and low severity issues.\nIf the customer states any new concerns or requests in the course of discussions on a ticket, open new tickets and create associations.\nIf the customer does not confirm the resolution, move the ticket back to in development and let the engineering/PM team know of the feedback.\nProvide regular updates to customers on open/in-progress tickets. The proper update frequency is determined by the severity of the ticket.\nMake sure all tickets have the customer org field populated.\nCancel any internal ticket without a customer org that has been created by a developer. Ask them to create an issue instead.\nIf a customer raises a feature request that aligns with the product strategy, but needs significant development effort and will not be delivered in the near future, move it to the accepted stage, rather than keeping the ticket open. Inform the customer accordingly.\nIf a customer reports a concern that the documentation on the public site is incorrect, missing, or insufficient, open a ticket so that the part owner can update the documentation or route the report to someone who can.\n\nPrevious Routing Next Customer portal\nOn this page\n\nConfigure the DevRev app Monitor the inbox Respond to conversations Conduct daily health checks Manage tickets\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-806",
        "dataset_source": "devrev-dev0",
        "title": "Customer portal",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nBenefits of using the customer portal Features Ticket creation, tracking, and team collaboration Conversations and messaging Article search Getting started Customer roles and permissions Setting up customer admins Integrating your knowledge base articles Troubleshooting Customize the customer portal\nCustomer portal.\n\nThe customer portal is an online platform that enables your customers to interact with your support team, create support tickets, track the progress of their requests, and engage in conversations related to their issues. It serves as a centralized hub for managing customer support inquiries efficiently.\n\nBenefits of using the customer portal.\n\nEnhanced customer experience. : Customers can access self-service options, track their tickets, and receive timely updates, leading to improved satisfaction.\nEfficient ticket management. : The portal streamlines the ticket creation, assignment, and tracking process, ensuring faster resolution times.\nSeamless, timely, and transparent communication. : Customers and support teams can engage in threaded conversations within the portal, eliminating the need for scattered email chains.\nImproved collaboration. : Customer admins can access and manage tickets from their team, enabling seamless collaboration and knowledge sharing.\n\nFeatures.\n\nTicket creation, tracking, and team collaboration.\n\nCustomers can create tickets with relevant details, such as issue description, priority, and category.\nTo create a ticket, go to + Ticket.. Enter a title and description for the ticket and click Submit..\nTicket tracking allows customers to monitor the progress of their requests and view updates in real-time.\nCustomer admins can access all tickets created by their team members, facilitating collaboration and knowledge sharing.\n\nConversations and messaging.\n\nCustomers can engage in threaded conversations with support representatives, providing additional information or seeking clarification regarding their tickets.\nSupport teams can respond to customer inquiries, ensuring effective communication.\n\nArticle search.\n\nYour customers can search across your articles and self-serve themselves on their queries. This empowers your customers to find answers on their own instead of waiting for your support team to get back to them.\nGetting started.\n\nYour customer portal is by default hosted on the following URL: support.devrev.ai/<your_org_slug>.\nYour customers can log in on the portal by entering their registered email address and OTP sent to that email address.\n\nCustomer roles and permissions.\n\nThe customer portal has two levels of customer roles and permissions:\n\nCustomers. : Customers who can log in on the portal and see the tickets that they have created.\nCustomer admins. : Customers who can log in on the portal and see not just their own tickets but also all the tickets raised by the other users from their organization. You can add multiple customer admins from the same customer organization.\n\nSetting up customer admins.\n\nTo set up customer admins, follow these steps:\n\nLog in on your DevRev app with your registered email address and go to Settings. > User management. > Groups > Customer Admins..\nSelect the Add User. option in the top-right corner to search for the customer whom you want to designate as a customer admin.\nIntegrating your knowledge base articles.\n\nYou have the option to upload your articles or provide us with links to those articles, which can be hosted on your website or any other publicly accessible platform. To upload articles, navigate to Settings. > Support. > Knowledge base. > Articles. and click +Articles.. From there, you can either add a link to your article or upload articles directly from your device. Once you have added the articles, you can specify their status as either Draft , Published , or Private. Once the articles are published, your customers are able to search for them on the customer portal by entering their queries in the search bar.\n\nTo know more, refer to articles\n\nTroubleshooting.\n\nThe customer isn't able to log in to the customer portal.\n\nThis could be because the email address from which you are trying to log in isn't registered as a customer on the DevRev application. You can check if the email address is registered or not by logging into your DevRev account and searching if a customer exists with that email or not.\nThis could also be because your customer hasn't logged in.\n\nCustomer isn't able to view the tickets they have created.\n\nCheck if there are any reported tickets by that customer. You can do so by logging into your DevRev app and then going into the tickets section. Here you can filter based on reported by. and see if any tickets have been reported by the customer who isn't able to view the tickets.\n\nCheck if the customer has logged in on the correct URL and not on the support portal of some other customer.\n\nCustomer admin isn't able to see all the tickets of the organization.\n\nThis could happen if the customer isn't logged in on the correct URL. If the customer is logged in on the correct URL, then check if there are any tickets that are reported by the other customers in that organization or not. Check if the customer is added as a customer admin or not by logging in to your DevRev application.\n\nYou are not able to add customer admin.\n\nIf you do not see the option of adding a customer as a customer admin then this could be because you might not have admin access to your instance of the DevRev application. Reach out to your admin to help you with this.\n\nCustomize the customer portal.\n\nYou can customize the look of your support portal to match your branding goals.\n\nGo to Settings. > Support. > Portal Settings..\nUnder Configuration. , enter your site name and upload your company logo.\n\n(Optional) You can enable the footer and add your social media and text links in their respective fields.\n(Optional) You can enable Turing Search. to get Turing answers in search results.\n\nUnder Styling. , you can upload a banner image which should be in the ratio of 6:1. You can also set light/dark mode for appearance and select your accent color.\nUnder Tabs. , you can turn on Enable ticket creation. if you want to enable customers to create tickets from the portal. Assign default owner and part.\nTurn on the Enable banner. toggle, and craft your own title and description.\nClick Set live. to make the changes visible on your portal.\nPrevious Support best practices Next Question & answers\nOn this page\n\nBenefits of using the customer portal Features Ticket creation, tracking, and team collaboration Conversations and messaging Article search Getting started Customer roles and permissions Setting up customer admins Integrating your knowledge base articles Troubleshooting Customize the customer portal\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-807",
        "dataset_source": "devrev-dev0",
        "title": "Turing bot",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSuggestion mode Auto response mode\nTuring bot.\n\nThe Turing bot is an AI-powered chatbot that can be used to deflect user queries in conversation or to suggest articles for resolving tickets.\n\nFor Turing bot to suggest articles, you need to upload articles to your DevRev instance. Refer to articles for more information.\n\nOnce you have added your knowledge base, Turing can be switched on in two modes: either suggestion or auto-response mode. You can configure Turing in Settings > Turing Answers. and turn on the Turing Answers. toggle.\n\nSuggestion mode.\n\nTuring only suggests an answer to the user query. You can accept the answer and send it to the user or make edits.\n\nAuto response mode.\n\nTuring automatically replies to the user query before it gets assigned to support. It goes through the knowledge base, generates an answer, and checks with the user if the answer is useful or not. If useful, it resolves the conversation. If not, either it creates a ticket or routes the conversation using the specified routing rule. If Turing doesn't understand the query, it gives the user an option to rephrase the question and ask again. Turing asks the user if they have more questions before resolving the conversation.\n\nPrevious Articles Next Service level agreement\nOn this page\n\nSuggestion mode Auto response mode\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-808",
        "dataset_source": "devrev-dev0",
        "title": "Service level agreement",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nCreate an SLA Creating policies within SLA Publishing an SLA Assigning customers Adding assignment rules SLA metric calculation Viewing SLAs\nService-level agreement.\n\nA service-level agreement (SLA) is a contract between you and your customers that sets the expectations for your service level. SLAs help ensure that your customers receive timely responses and resolutions to inquiries.\n\nPolicy users can set SLA breach and warning targets for three metrics: first response , next response , and full resolution. Each metric has its own breach and warning target. You can specify whether the metrics are calculated using calendar hours or business hours while defining breach and warning targets.\n\nCreate an SLA.\n\nGo to Settings > SLA > + Create..\n\nIn the Create SLA. window, provide a name and description of the SLA.\n\nAfter creating the SLA, assign policies to it.\n\nCreating policies within SLA.\n\nMultiple policies can be created within an SLA. Each policy has a priority order, so if a ticket meets the conditions of two or more policies, the policy with the highest priority is applied.\n\nTo create a policy within an SLA, do the following:\n\nClick + Policy..\nSelect either Ticket Policy or Conversation Policy.\nIn the New ticket policy. pane, under Conditions. , select the ticket attributes values of Tag. , Part. , and Severity..\nUnder Metrics. , enable or disable First response. , Next response. , and Resolution time..\nClick Publish..\n\nSLA metrics are only applied to tickets or conversations that meet the policy's conditions.\n\nPublishing an SLA.\n\nSLAs can be published once all policies are created. Published SLAs can't be edited. The user can't change the policies or priority order of a published SLA. The user can't change the policies or priority order of a published SLA.\n\nAssigning customers.\n\nSLAs can only be assigned to customers once they're published. Once a service level agreement (SLA) is published, it can be assigned to customer accounts. If no customers are added, the SLA will not be applied to tickets or conversations.\n\nAdding assignment rules.\n\nUsers can't add or remove customers until the SLA is published. Each workspace has its own SLA, and a single customer can have multiple workspaces.\n\nAdding assignment rules.\n\nGo to Assignment rules. to add conditions for an account to be assigned a particular SLA.\n\nClick + Create Rule..\nIn the New SLA assignment rule. pane, select the account attributes and their values to check for.\nClick Save and Apply..\nEditing/Deleting an assignment rule.\n\nOnce an assignment rule is created, you have the option to edit or delete it. Any changes made to assignment rules would only impact tickets where SLA is applied thereafter, there is no immediate impact on tickets where the SLA is currently running.\n\nAdding exceptions to an SLA. Go to Exceptions. to add customers who should always adhere to an SLA, regardless of the assignment rule.\nClick + Customer..\nAdd all customer accounts/workspaces you want to assign the SLA.\nClick Assign..\n\nSetting an SLA as default will automatically assign it to all accounts without an existing SLA. This means that the assignment rules or exceptions for the default SLA are bypassed.\n\nDedicated assignment rules.\n\nThis section within the SLA part lets you view the list of assignment rules created for all published SLAs. You can create/edit/delete assignment rules for any published SLA from this space and view the priority order for the application of assignment rules (to refer to when multiple SLAs are valid for the same account).\n\nSLA metric calculation.\n\nSLA metrics are calculated based on the policy that's applied to the conversation or the ticket. There can be one or more SLA metrics active on a given conversation or a ticket. Each metric is tracked separately. SLA metrics are calculated according to the policy applied to the conversation or ticket. There can be one or more SLA metrics active on a given conversation or ticket, with each one being tracked separately.\n\nSLA metric can be in one of the following stages:\n\nActive : The metric is currently being tracked on the conversation or ticket.\nClose to breach : The time spent by the SLA metric is greater than or equal to the close to breach target defined in the policy.\nBreached : The time spent by the SLA metric is greater than or equal to the breach target defined in the policy.\nPaused : The metric is currently paused based on some conditions. For example, when a ticket moves to awaiting customer response.\nCompleted : The conversation or ticket has reached the completion condition.\n\nBased on business hours defined for an organization, Active/Close to breach/Breached metrics can change schedules. Metrics move out of schedule when they remain at the same stage, but time spent out of schedule isn't included in the calculation.\n\nThe following table describes how each metric works for tickets and conversations:\n\nTickets.\n\nMetric Default conditions Start event End event Pause event Resume event First response time Ticket created by a customer\nThe ticket was created by a customer experience engineer but reported by a customer\nTicket created The agent added a comment to the customer chat\nThe ticket is resolved or Awaiting Customer Response\nNext response time Ticket created by a customer\nThe ticket was created by a customer experience engineer but reported by a customer\nA new comment on the ticket by the customer after the customer experience engineer replied The agent added a comment to the customer chat\nThe ticket is resolved or Awaiting Customer Response\nFull resolution time Ticket created by a customer\nThe ticket was created by a customer experience engineer but reported by a customer\nTicket created The ticket is moved to the Closed state The ticket was moved to Awaiting Customer Response state The ticket moves to any state except Closed\n\nConversations.\n\nMetric Default conditions Start event End event Pause event Resume event First response time The first message sent by a customer Conversation created The agent replied to the conversation\nThe conversation is moved to Waiting on User/Resolved\nThe conversation is marked as spam\nNext response time A new message on the conversation with the customer after the customer experience engineer replied The agent replied to the conversation\nThe conversation is moved to Waiting on User/Resolved\nThe conversation is marked as spam\nFull resolution time Conversation created The conversation has moved to the Resolved/Archived\nThe conversation is marked as spam\nThe conversation is moved to Waiting on User The conversation moves to any stage except Waiting on User\n\nViewing SLAs.\n\nThe SLA targets applied to a particular conversation can be viewed in the Inbox. and the Conversation Detailed. view. For a ticket in any of the ticket vistas.\n\nWhen there are two active metrics, vista displays the one closest to the breach. In the case of a conversation where both the first response and full resolution metrics are active, and the first response is due in five minutes but the full resolution is due in one day, the vista displays five minutes. In the case where the first response isn't provided within five minutes, the timer displays negative values (such as -10m), which indicates that it's been 10 minutes since the first response was due. Conversations or tickets can also be grouped by SLA stages.\n\nIn the Detailed View. , all metrics applied to the ticket or conversation can be viewed along with their current stage.\n\nPrevious Turing bot Next Support snap-ins\nOn this page\n\nCreate an SLA Creating policies within SLA Publishing an SLA Assigning customers Adding assignment rules SLA metric calculation Viewing SLAs\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-809",
        "dataset_source": "devrev-dev0",
        "title": "Automatic customer reply",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Installing the automatic customer reply snap-in\nAutomatic customer reply.\n\nThe automatic customer reply snap-in provides the following functionalities:\n\nAutomatically reply on your behalf in the PLuG Widget.\nSend a custom button along with the automatic message.\nCollect the visitor's email address, if it does not exist in the system.\n\nDepending on the requirement, these functionalities can be enabled or disabled.\n\nInstalling the automatic customer reply snap-in.\n\nInstall the automatic customer reply snap-in from the DevRev marketplace.\n\nSelect the dev org to install the snap-in, confirm installation, and click Deploy snap-in..\n\nIf you want to enable automatic customer response, turn on the Enable automated reply. toggle.\n\nIn the Automated reply. field, enter the text you want to send as an automated reply.\n\nTo define business hours, turn on the Set business hours. toggle.\n\nIn the Automated messages after business hours. field, enter the text you want to send as an automated reply.\nDefine Business start hours. , Business end hours. , UTC offset. , and Business days. in the respective fields.\n\nTo send a button, turn on the Enable a custom button. toggle.\n\nIn the Text displayed on custom button. field, enter the text to be displayed on the button. For example, Book a Demo, Meet with Us!, Let's Chat.\nIn the Target URL for the custom button. field, enter the website you'd like to redirect to, such as Calendly, Hubspot meetings, Microsoft Bookings, or another site.\n\nTo collect unregistered email IDs, turn on the Enable email collector. toggle.\n\nIn the Placeholder text for email collector. field, enter the text to display in the email collector.\nIn the Email collector submit button text. field, enter the text to display on the submit button.\n\nClick Save..\n\nIf your Turing is in Auto-response mode, don't enable auto-customer reply or you'll send two messages to your customer. By using this snap-in, you can still request email addresses for enriching customer data, as well as contacting customers through the right channel if they drift off your website.\n\nPrevious Automate Next Auto routing\nOn this page Installing the automatic customer reply snap-in\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-810",
        "dataset_source": "devrev-dev0",
        "title": "Auto routing",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Installing the Auto routing snap-in\nAuto routing.\n\nThe Auto routing snap-in helps you to route your customer conversations to the right person/team which can help them with their queries using user defined keywords. This snap-in identifies the keywords in the conversation and automatically assigns the conversation to the mapped team member. You can map multiple keywords to a single team too.\n\nInstalling the Auto routing snap-in.\n\nInstall the Auto routing snap-in from the DevRev marketplace.\nSelect the dev org to install the snap-in, confirm installation, and click Deploy snap-in..\nConfigure the keyword to email mapping in keyword_to_email_map. using the format {\"example\":\"abc@yourorg.com\"}. Here, example is the keyword and it's mapped to the email abc@yourorg.com.\n(Optional) You can also set the default owner in default_owner.. This routes the conversation to the email of the default owner when no keyword matches.\nClick Save. and click Deploy snap-in..\nPrevious Automatic customer reply Next Auto parts to conversation\nOn this page Installing the Auto routing snap-in\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-811",
        "dataset_source": "devrev-dev0",
        "title": "Convergence",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nWorkflows Installation After installation\nConvergence.\n\nConverge support and build by bringing together conversations, tickets, and issues.\n\nFor more information, refer to the convergence snap-in on the DevRev marketplace.\n\nWorkflows.\n\nThe workflows present in the Convergence snap-in does the following tasks for you automatically:\n\nTicket owners are added to the watchers list of the enhancement on which the ticket was created.\n\nIf the enhancement is in-progress state and there are no issues linked to it, post a message in the enhancement timeline.\n\nPost message to enhancement timeline if not issues have been linked.\n\nPost message to enhancement timeline if issues are in Triage stage.\n\nPost in enhancement timeline if enhancement is Prioritized but no issues are linked.\n\nPost to ticket's timeline mentioning its owners when it is moved to Product Assist stage.\n\nPost to linked ticket's timelines when enhancement changes stage.\n\nNotify target close date to ticket, issue, tasks, opportunity and enhancement owners.\n\nNotify enhancement owners for linking PRD and design docs.\n\nPost a message on part timeline tagging part owners when a new ticket is linked to that part.\n\nPost in the linked conversation when a ticket is closed or reopened.\n\nPost in the linked conversation when a ticket is linked.\n\nPost in child issue timeline when parent issue is closed.\n\nPost in parent issue timeline when child issue is closed.\n\nPost to issue's timeline when linked ticket's severity is changed.\n\nPost in ticket's timeline when an issue linked to it is closed.\n\nPost in enhancement's timeline when any linked issue is In Development.\n\nUpdate ticket's stage when linked issue's state changes.\n\nUpdate ticket's stage when linked issue is linked or unlinked.\n\nClose pending tickets if they have remained in the awaiting customer response stage for longer than x days.\n\nUpdate ticket's stage to waiting on user when dev user reverts on new conversation.\n\nUpdate ticket's stage to accepted and notify owner and customers when an enhancement in ideation stage is linked.\n\nUpdate a spam conversation's stage to suspended.\n\nUpdate a spam ticket's stage to cancel.\n\nInstallation.\n\nIn DevRev, go to Settings. > Snap-ins. and click Explore Marketplace. in the top-right corner.\n\nIn the DevRev marketplace, find Convergence. and click Install..\n\nIn DevRev, confirm installation.\n\nChange any of the parameters necessary in the configuration sidebar that appears and click Deploy..\n\nWhile the toggle parameter defaults aim at balance, your environment may call for a setting other than the default.\n\nYou may need to change the number of days of inactivity before closing or archiving issues to fit your organization's SLAs.\n\nYou can change the support convergence settings at any time under Settings. > Snap-ins..\n\nAfter installation.\n\nOnce the convergence snap-in is installed, tickets and issues automatically change states when related tickets and issues do. These state changes are visible in the Discussions. and Events. tabs of tickets and issues.\n\nPrevious Bulk ticket uploader Next CSAT on conversation\nOn this page\n\nWorkflows Installation After installation\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-812",
        "dataset_source": "devrev-dev0",
        "title": "CSAT on conversation",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Installing the CSAT on conversation snap-in\nCSAT on conversation.\n\nCSAT on conversation offers a simplified approach to measure customer satisfaction level for the conversation resolved with the help of surveys which can be utilized to enhance the overall customer experience.\n\nThis snap-in displays a survey scale to the customers after their ticket gets resolved on how satisfied they're The questions can be customized to align with their requirements.\n\n\ud83c\udfa5 Video: DevRev PLuG surveys Installing the CSAT on conversation snap-in.\n\n\ud83c\udfa5 Video: DevRev PLuG survey installation\n\nInstall the CSAT on conversation from the DevRev marketplace.\n\nSelect the dev org to install the snap-in, confirm installation, and click Deploy snap-in..\n\nSelect the channel you want to send the survey on in Survey channel..\n\nWrite introductory text for the survey in Survey introductory text..\n\nCustomize your survey response scale which is shown to the customers to select from in Survey response scale..\n\nWrite a query for the customers after the survey is populate in Survey query..\n\nWrite a message for the customers after the survey response is submitted in Survey response message..\n\nSpecify the time for the survey to expire (in minutes) in Survey expires after..\n\nClick Save. > Next. and deploy the snap-in.\nPrevious Convergence Next CSAT on ticket\nOn this page Installing the CSAT on conversation snap-in\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-813",
        "dataset_source": "devrev-dev0",
        "title": "CSAT on ticket",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Installing the CSAT on ticket snap-in\nCSAT on ticket.\n\nCSAT on ticket offers a simplified approach to measure customer satisfaction level for the ticket resolved with the help of surveys which can be utilized to enhance the overall customer experience.\n\nThis snap-in displays a survey scale to the customers after their ticket gets resolved on how satisfied they're. The questions can be customized to align with their requirements.\n\nInstalling the CSAT on ticket snap-in.\n\nInstall the CSAT on ticket from the DevRev marketplace.\n\nSelect the dev org to install the snap-in, confirm installation, and click Deploy snap-in..\n\nSelect the channel you want to send the survey on in Survey channel..\n\nWrite introductory text for the survey in Survey introductory text..\n\nCustomize your survey response scale which is shown to the customers to select from in Survey response scale..\n\nWrite a query for the customers after the survey is populate in Survey query..\n\nWrite a message for the customers after the survey response is submitted in Survey response message..\n\nSpecify the time for the survey to expire (in minutes) in Survey expires after..\n\nClick Save. > Next. and deploy the snap-in.\nPrevious CSAT on conversation Next Descope identity validation\nOn this page Installing the CSAT on ticket snap-in\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-814",
        "dataset_source": "devrev-dev0",
        "title": "Sentiment evaluator",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Installing the Sentiment evaluator snap-in\nSentiment evaluator.\n\nThe Sentiment evaluator snap-in lets you get feedback from a customer conversation in a seamless automatic way with the help of sentiment analysis. As soon as a customer conversation is resolved, it starts evaluating the texts into five categories: frustrated, unhappy, neutral, happy, or delighted. Additionally, it provides a concise justification for its analysis, empowering customer experience engineers with actionable insights into customer sentiment. It works on all platforms like PLuG, Slack, or any other medium where customer conversation takes place and provides you with accurate analysis to understand your customers better.\n\nInstalling the Sentiment evaluator snap-in.\n\nInstall the Sentiment evaluator snap-in from the DevRev marketplace.\nSelect the dev org to install the snap-in, confirm installation, and click Deploy snap-in..\n\nThe feedback from the Sentiment evaluator is only be visible to the dev users of your organization.\n\nPrevious Link preview Next Smart import KBs\nOn this page Installing the Sentiment evaluator snap-in\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-815",
        "dataset_source": "devrev-dev0",
        "title": "Smart import KBs",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Installing the Smart import KBs\nSmart import KBs.\n\nThe Smart import KBs snap-in creates articles for your knowledge base automatically using the URLs you provide.\n\nInstalling the Smart import KBs.\n\nInstall the Smart import KBs snap-in from the DevRev marketplace.\n\nSelect the dev org to install the snap-in, confirm installation and click Deploy snap-in..\n\nGo to the Discussions. tab and enter /sync <URL>.\n\nReplace the <URL> with the URL of your article or page.\n\nClick Yes. when the bot prompts the question and wait till the bot sends the message \"Articles created!\".\nPrevious Sentiment evaluator Next SLA status change Slack notifier\nOn this page Installing the Smart import KBs\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-816",
        "dataset_source": "devrev-dev0",
        "title": "Slash commands",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nInstalling the slash commands snap-in Your workspace after setting up slash commands Commands\nSlash commands.\n\nThe slash commands snap-in helps you with tasks that are taking up your time and increasing your workload. By integrating the slash commands snap-in, you gain direct access to the capabilities of the Turing bot, right within any text field. This integrates into your workflow, regardless of whether you're engaged in customer support interactions or immersed in building projects.\n\nInstalling the slash commands snap-in.\n\nInstall the slash commands snap-in from DevRev marketplace.\nSelect the dev org to install the snap-in, confirm installation, and click Deploy snap-in..\nYour workspace after setting up slash commands.\n\nAfter successfully setting up the slash commands snap-in, navigate through text fields, such as:\n\nInbox. > Conversation. > Customer chat/Discussions.\nTickets. > Customer chat/Discussions.\nIssues. > Discussions.\n\nA /. allows you to execute commands, revealing a comprehensive list of available options. Respond to customers or participate in discussions, all without the need to exit your ongoing conversations.\n\nCommands.\n\nRemind.\n\nUsing the remind command, you can set a reminder for yourself or another user in the context of the source. You must specify a time and add messages to set the reminder.\n\nFor example: /remind @user Please follow up on this. 1d\n\nRephrase.\n\nThe rephrase command helps you reply professionally when communicating with clients or colleagues.\n\nFor example: /rephrase can't help now... ask again in 5d\n\nSample response:\n\n1 I apologize that I am unable to assist you at the moment, however please reach out to me again in five days and I will be happy to help you.\nSummarize.\n\nUsing the summarize command, you can sum up the entire conversation. It applies to the following:\n\nConversation\nTickets\nIssues\nPart\nWorkspace\nCustomer\nAccount\n\nSyntax: /summarize\n\nSample response:\n\nSummary:\n\nRahul from DummyOrg is having difficulty installing the PLuG Widget.\nRohan suggests checking the setup instructions.\nWhen this doesn't work, Rohan asks for more information on the error.\nRahul shares a recording of the error.\nRohan thanks the user, and they get on call to fix it.\n\nClone.\n\nUsing the clone command, a copy of the selected issue or ticket is created. All attributes of the issue/ticket are copied, along with [CLONE] prefixed to the title. It also comments on:\n\nSource issue/ticket. For example, 'ISS-0123 was cloned and ISS-0123 was created.'\nCloned issue/ticket. For example, 'TKT was cloned from TKT-0123.'\n\nPrevious SLA status change Slack notifier Next Smart sprint\nOn this page\n\nInstalling the slash commands snap-in Your workspace after setting up slash commands Commands\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-817",
        "dataset_source": "devrev-dev0",
        "title": "Calendly",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nIntegrate Calendly with DevRev Let's set up Calendly for you Installation How to uninstall\nCalendly.\n\nIntegrate Calendly with DevRev.\n\nStreamline your scheduling process and optimize customer engagement with DevRev's powerful Calendly snap-in. It's designed to capture all your Calendly bookings and seamlessly integrate them into DevRev's system of record, ensuring no leads or appointments are missed.\n\nLet's set up Calendly for you.\n\nFor more information, refer to the Calendly on the DevRev marketplace.\n\nFor the DevRev Calendly snap-in to work, you must have a Professional, Teams, or Enterprise plan.\n\nInstallation.\n\nGo to the Settings. > Integrations. > Snap-ins..\n\nClick Explore Marketplace..\n\nSearch for Calendly. and click Install. next to the Calendly snap-in.\n\nIn DevRev app, setup the connection in Settings. > Snap-ins. > Connections. on top.\n\nSearch and choose an existing connection or create a new one by clicking + Connection..\nSelect Snap-In Secret. from the dowpdown list.\nGive it a name and paste your Calendly personal access token in the Secret. field. Toggle on Make public. if you want to make the connection public for your organization.\n\nUpdate the snap-in configurations as needed.\n\nDeploy the snap-in.\n\nEnter /calendly register-webhook. in the snap-in's Discussions. tab on the right.\n\nIn the Discussions. tab, you see a message Calendly integration completed on successful start.\n\nHow to uninstall.\n\nIn the Discussion. tab, enter /calendly unregister-webhook. to unregister the webhook. A message is displayed Calendly integration removed..\nRemove the snap-in.\nPrevious Integrate Next Google Calendar\nOn this page\n\nIntegrate Calendly with DevRev Let's set up Calendly for you Installation How to uninstall\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-818",
        "dataset_source": "devrev-dev0",
        "title": "Google Calendar",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nIntegrate Google Calendar with DevRev Let's set up Google Calendar for you Installation\nGoogle Calendar.\n\nIntegrate Google Calendar with DevRev.\n\nElevate your scheduling efficiency and supercharge client interactions with DevRev's Google Calendar snap-in. This snap-in is meticulously designed to seamlessly integrate with Google Calendar, revolutionizing how you manage appointments and engagements within the DevRev ecosystem.\n\nFor more information, refer to the Google Calendar snap-in on the DevRev marketplace.\n\nLet's set up Google Calendar for you.\n\nInstallation.\n\nGo to the Snap-ins. section within your DevRev workspace settings.\n\nClick Explore Marketplace..\n\nSearch for Google Calendar. and click Install. next to the Google Calendar snap-in.\n\nIn DevRev app, setup the connection in Settings. > Snap-ins. > Connections. on top.\n\nSearch and choose an existing connection or create a new one by clicking + Connection..\nSelect Google Calendar. from the dowpdown list.\nGive it a name and sign in with Google Calendar. Ensure to toggle on Make public. to make the connection public for your organization.\n\nUpdate the snap-in configurations as needed.\n\nCalendar ID. : ID of Google calendar to be synced to DevRev. The default is primary.\n\nAdd non-existing customers. : Enable this to allow people in meeting that are not customer to be added as a customer.\n\nIf a meeting is scheduled with people who are not a dev user and neither a customer, this option allows them to be added as customer.\n\nTrack meetings from free email domains. : Enable this feature to capture meetings scheduled by non-work email addresses, such as those from gmail.com or yahoo.com.\n\nRecurring days. : Number of days in advance for recurring events to be synced. Default is 7 days.\n\nThe recurring events inside the specified advance days are created, that is, if 7 days is specified, then all recurring events in next 7 days are created.\n\nSync email required. : If specified, only events containing specified email address get synced.\n\nDeploy the snap-in.\n\nEnter /GoogleCalendarStart. in the snap-in's Discussions. tab on the right.\n\nIn the Discussions. tab, you can see a message Google Calendar integration completed on successful start.\n\nPrevious Calendly Next Email\nOn this page\n\nIntegrate Google Calendar with DevRev Let's set up Google Calendar for you Installation\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-823",
        "dataset_source": "devrev-dev0",
        "title": "Slack",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nInstalling the Slack snap-in Create and manage tickets using Slack Create tickets Linking tickets to Slack conversations from DevRev Attachments Subscribing to updates on your parts Share and view work details Receive notifications on Slack from DevRev Updating existing tickets from Slack List of available commands\nSlack.\n\nThe Slack snap-in lets you scale your customer support in Slack.\n\n\ud83c\udfa5 Video: DevRev Slack integration Installing the Slack snap-in.\n\nInstall the Slack snap-in from the DevRev Marketplace.\nIn Install Slack. dialog, confirm the installation.\nEnable the features you want and fill in the configurations.\n\nYou can find a Slack channel ID by going to channel details.\n\nIn DevRev app, setup the connection in Settings. > Snap-ins. > Connections. on top.\n\nSearch and choose an existing connection or create a new one by clicking + Connection..\nSelect Slack. from the dowpdown list.\nGive it a name and sign in with Slack. Ensure to toggle on Make public. to make the connection public for your organization.\n\nThis requires the user to establish a connection to Slack and have permission to install Slack Apps. Depending on your Slack workspace settings, you may need to ask an administrator to establish the connection or approve your installation request.\n\nCreate and manage tickets using Slack.\n\nInvite the DevRev bot to the channel from which you want to create DevRev tickets by mentioning DevRev on the channel ( @DevRev ) or by typing /invite @DevRev. You need to invite the DevRev bot to every channel where you want to create tickets and sync with DevRev. Slack threads do not sync with the ticket if the DevRev bot is not added to the channel.\n\nLink customer account to Slack connect channel.\n\nTo link a account in a connect channel, type /devrev link command and choose the account that you wish to link the channel to.\n\nCreate tickets.\n\nYou can create tickets in DevRev from Slack messages. To activate this feature in a private channel, you need to invite the @DevRev bot. You can create tickets in Slack by either of the following methods:\n\nCreate a ticket from a Slack message or a thread. Hover over a message in Slack and select the \u22ee. (More Actions) menu.\nSelect Create a ticket.. If you don\u2019t see the option, click on More message shortcuts. and search for Create a ticket..\nFill in the required fields.\nSubmit. the form.\n\nIf ticket creation was initiated from an existing thread, the form appears at the bottom of the thread.\n\nIf ticket creation was initiated from a new message on the channel, the form can be found in the thread of the message.\n\nSlack does not show any indicator that a form was opened. You need to manually open the thread by clicking the Reply in thread. option of the message to see the form.\n\nCreate a ticket with a slash command. Enter /devrev create-ticket to create a ticket.\nFill in the required fields.\nSubmit the form.\n\nSlack doesn't support slash commands in threads.\nIf the channel is private and the bot is not invited to the channel, ticket creation will not work. You can invite the bot by using /invite @devrev.\n\nFilling out the ticket creation form.\n\nField Name Example Details Mandatory Title Payment gateway currency conversion issue. This is AI generated from the messages present in the entire thread. Y Description The payment gateway is experiencing issues with currency conversion, resulting in incorrect or inconsistent conversion rates being applied. We need to investigate and resolve the currency conversion issue to ensure accurate payment processing. This is AI generated from the messages present in the entire thread. Y Part Payment gateway List of Products and Capabilities by default with the ability to search for any part name. Y Owner John Romero Pre-filled with the user creating the ticket. Can be configured through routing rules on the app. Y Severity High One of the four values - Blocker, High, Medium, Low. Y Customer Umbrella Corp Name of the customer on behalf of which the ticket is being created. This is auto-populated in the case of Slack connect channels if the customer account is linked to the channel. For internal channels, the user can search for the name of the customer account. N\n\nLinking tickets to Slack conversations from DevRev.\n\nWhen a ticket is linked to a conversation that was created from Slack in DevRev, a new message is sent on the channel indicating a ticket was created along with the details of the ticket. The ticket\u2019s thread syncs to the customer messages of the ticket.\n\nEnable conversation sync for Slack connect channels.\n\nToggle on Sync conversations from Slack to DevRev. in the Configurations. tab to automatically create and sync conversations from Slack connect channels. A conversation is created in DevRev when a user sends a message on the Slack connect channel. Replies to the conversation from DevRev are sent back to the thread of the original message of the end user.\n\nThe rolling window for Slack connect channels.\n\nIf a user sends multiple messages on the Slack connect channel, all messages sent within a span of five minutes are added to the same conversation.\n\nEvery new message sent on the channel resets the 5 minute window. If a user directly sends a message on the channel, that also resets the rolling window. A message sent in the thread of an existing message is not counted as new. Replies by the customer experience engineer from the DevRev app are always be sent to the thread of the first message of the user that started the conversation.\n\nAttachments.\n\nAttachments from the entire thread are automatically added to the ticket\u2019s description at the time of ticket creation. Attachments sent from the app in customer messages or internal discussions are sent as separate messages on Slack. This is due to a technical limitation with Slack.\n\nSubscribing to updates on your parts.\n\nYou can configure a specific Slack channel to receive notifications from DevRev for updates on one or more parts of your product.\n\nThe following notifications are sent to the Slack channel:\n\nAny issue on a part is updated.\nNew issue linked to a part.\nA part is updated.\n\nYou can use the following commands:\n\n/devrev sub <part display ID or link> /devrev view-subs /devrev unsub <part display id or link>\n\nCommand Details Subscribe a Slack channel to updates for a DevRev part and issues linked to it. View active DevRev part subscriptions for a Slack channel. Unsubscribe a Slack channel to updates for a DevRev part and issues linked to it.\n\nShare and view work details.\n\nYou can share the details of work (tickets or issues) or view them privately with the /devrev Slack command. To activate this feature in a private channel, you need to invite the @DevRev bot.\n\nShare work details.\n\nRun /devrev send-view TKT-# or /devrev send-view ISS-#. You can include up to five space-separated items, for example: /devrev send-view TKT-# ISS-# TKT-#.\n\nPrivately view work details.\n\nRun /devrev view TKT-# or /devrev view ISS-#. You can include up to five space-separated items, for example: /devrev view TKT-# ISS-# TKT-#.\n\nReceive notifications on Slack from DevRev.\n\nYou can receive Slack notifications for various DevRev events. To receive notifications in a private channel, you need to invite the @DevRev bot.\n\nGo to Settings. > Integrations. > Snap-ins. > Slack..\nOn the Configuration. tab, fill in the options to enable notifications.\n\nDuring the lifecycle of a ticket, some updates are automatically sent to Slack from DevRev. These are sent only for tickets that were shared with everyone. The following DevRev notifications are supported:\n\nA new ticket is created, two notifications are sent.\n\nNotifications are sent in the thread of the original message from which the ticket was created and in the thread of the ticket on Slack, tagging all the users who were part of the original thread. This is done to inform them that a ticket has been created for them. Set Notify on new ticket creation. to turn on the notifications.\n\nAdditionally, a notification is sent to a ticket\u2019s thread when a ticket moves to In progress , Closed or is reopened after it was closed. Toggle on/off Notify on ticket state update. from your Slack snap-in configuration for state updates.\n\nA new conversation is created.\n\nSet Enable the conversation notification feature..\n\nA customer replies to an existing conversation.\n\nSet Enable the conversation notification feature..\n\nAfter a notification is sent for a new reply, it does not send another for the same conversations for at least 10 minutes.\n\nAn object (ticket, issue, part, or opportunity) is mentioned in Slack.\n\nSet Notify for DevRev object mentions. to send a notification whenever an object is mentioned on Slack (the link to that object is pasted in Slack), DevRev will send a comment on the object informing that the object was mentioned in Slack.\n\nProvide the ID of the Slack channel dedicated to receiving notifications about new DevRev inbox conversations. You can find this channel ID by clicking on the channel name, scrolling to the bottom of the dialog containing details about the channel, and locating it under the About. section.\nClick Save. > Next. on the Configuration. tab.\nInvite the DevRev Slack bot to the channel to allow it to post notification messages. You can do so by @mentioning it in a message sent through the message composer.\nUpdating existing tickets from Slack.\n\nFor a given ticket, user can update the severity of the ticket directly from Slack.\n\nList of available commands.\n\nEnter /devrev help. to display a list of available commands and their descriptions.\n\nPrevious Email Next ZoomInfo enricher\nOn this page\n\nInstalling the Slack snap-in Create and manage tickets using Slack Create tickets Linking tickets to Slack conversations from DevRev Attachments Subscribing to updates on your parts Share and view work details Receive notifications on Slack from DevRev Updating existing tickets from Slack List of available commands\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-824",
        "dataset_source": "devrev-dev0",
        "title": "ZoomInfo enricher",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nIntegrate ZoomInfo with DevRev Let's set up ZoomInfo for you Installation How to uninstall\nZoomInfo enricher.\n\nIntegrate ZoomInfo with DevRev.\n\nEnhance your account and contact data with DevRev's ZoomInfo enricher snap-in. This integration provides you with additional information from ZoomInfo's extensive database, helping you make more informed decisions and build stronger relationships with your customers.\n\nFor more information, refer to the ZoomInfo enricher snap-in on the DevRev marketplace.\n\nLet's set up ZoomInfo for you.\n\nTo access ZoomInfo's extensive database, ensure you have an active ZoomInfo API subscription.\n\nInstallation.\n\nGo to the Settings > Integrations > Snap-ins..\nClick Explore Marketplace..\nSearch for ZoomInfo. and click Install. next to the ZoomInfo enricher snap-in.\nIn DevRev app, setup the connection in Settings. > Snap-ins. > Connections. on top.\n\nSearch and choose an existing connection or create a new one by clicking + Connection..\nSelect Snap-In Secret. from the dowpdown list.\nGive it a name and paste your ZoomInfo API private key in the Secret. field. Toggle on Make public. if you want to make the connection public for your organization.\n\nUpdate the snap-in configurations as needed.\nDeploy the snap-in.\nHow to uninstall.\n\nTo uninstall the snap-in, navigate to menu located under Snap-ins > ZoomInfo Enricher.. Select Remove snap-in. to permanently delete the snap-in from your organization.\n\nPrevious Slack Next WhatsApp\nOn this page\n\nIntegrate ZoomInfo with DevRev Let's set up ZoomInfo for you Installation How to uninstall\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-825",
        "dataset_source": "devrev-dev0",
        "title": "WhatsApp",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nPrerequisites Installing the WhatsApp snap-in Limitations Set up the snap-in\nWhatsApp.\n\nUsing DevRev, you can connect with your customers through WhatsApp. This new communication channel allows your customers to reach out with their questions and concerns directly on WhatsApp. The messages from WhatsApp seamlessly appear in your DevRev Inbox, making it easy for you to manage all your customer conversations in one place. By adding WhatsApp to DevRev, you can streamline your support and offer a smoother experience to your customers.\n\nFor detailed information about WhatsApp for Business, refer to WhatsApp Business Platform - Documentation\n\nPrerequisites.\n\nCreate a business account:. Ensure you have a Business Account in Meta Business Manager. For detailed information, refer to creating a Business Account in Meta Business Manager.\nNumber compatibility:. Ensure the designated number isn't linked to another WhatsApp account. If it is, either delete that account or migrate your number to a business account.\nPartner integration:. We work with 360dialog for WhatsApp Integration. If you have an existing WhatsApp for Business Account, follow the steps to migrate to 360dialog.\nInstalling the WhatsApp snap-in.\n\nTo use this snap-in, you'll need to connect your WhatsApp with Business API with DevRev.\n\nInstall WhatsApp from the DevRev marketplace.\nSelect the dev org to install the snap-in, confirm installation, and click Deploy snap-in..\nLimitations.\n\nGroup Conversations are not supported by WhatsApp for Business API.\nIf you do not respond to the customer\u2019s message within 24 hours, you can only respond to the conversation using Meta-approved template messages.\n\nSet up the snap-in.\n\nFollow these steps to ensure WhatsApp messages sent to your business are synced with the DevRev Inbox.\n\nInstall the snap-in:. Install the WhatsApp snap-in from the marketplace as mentioned above.\nCreate a connection:. In the Connections. tab, add your existing connection or create a new connection.\n\nGive your connection a name, and ensure that you completed the required steps in the prerequisites.\nClick Connect..\nOpen the dialog and follow the process to finish creating a connection.\n\nConfigure business phone number:. In the Configuration. tab, enter the business phone number to sync WhatsApp messages sent to the business with DevRev Inbox.\nRegister for WhatsApp webhook:. In the Discussion. tab, enter /whatsapp. to register to the WhatsApp webhook URL to receive WhatsApp messages in the DevRev Inbox.\nUse template messages:. As per WhatsApp policies, template messages are required to communicate with customers once 24 hours have passed since their last message. To ensure continuity in customer conversations, the following template messages are sent for Meta approval:\n\nReinitiate missed conversation:. \"Hi, sorry for not responding earlier. (Custom Message)\"\nShare an update with the customer:. \"Hi, here is an update (Custom Message)\"\n\nPrevious ZoomInfo enricher Next GitHub\nOn this page\n\nPrerequisites Installing the WhatsApp snap-in Limitations Set up the snap-in\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-826",
        "dataset_source": "devrev-dev0",
        "title": "Hubspot Airdrop",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSupported objects Importing from Hubspot Post import options Historical imports Sync to DevRev Periodic sync Delete import\nHubspot Airdrop.\n\nDevRev's Hubspot Airdrop allows you to seamlessly import your Hubspot companies and contacts into DevRev.\n\nFor more information, refer to the Hubspot Airdrop snap-in on the DevRev marketplace.\n\nSupported objects.\n\nThe following is a list of Hubspot objects and their corresponding DevRev equivalent. Those marked as Supported. are eligible for import.\n\nHubSpot Object DevRev Object Sync to DevRev Contact Contact \u2705 Company Account \u2705 Deal Opportunity \u2705 Pipeline of Deal State/Stage of Opportunity \u2705 Note on Deal Comment on Opportunity \u2705 User DevUser \u2705 Ticket Ticket \u274c Product Part \u274c Timeline Timeline \u274c Conversation Conversation \u274c Custom Object Custom Object \u274c\n\nImporting from Hubspot.\n\nFollow the steps below to import from Hubspot:\n\nGo to Settings. > Imports. and click Start Import. or Import..\nCreate a new connection to your Hubspot account, or use an existing connection if you already have one.\nOnce the connection is established, select the Hubspot site you want to import and specify the DevRev part that should be used for any imported work (future releases makes use of this). This initiates a bulk import of the selected site.\nDevRev makes an effort to automatically map the fields from Hubspot to corresponding fields in DevRev. However, you may be prompted to manually map certain fields if needed.\n\nThe duration of the import depends on the size of the Hubspot account and the data being imported. It can take seconds for an account with only a few dozen companies and contacts to a few hours for an account with tens of thousands of items with many attachments. DevRev honors the Hubspot API rate limits and back-off and resume automatically.\n\nPost import options.\n\nAfter a successful import, you have the following options available for the imported account:\n\nSync to DevRev\nThis option allows you to synchronize any modifications made in Hubspot with the corresponding items previously imported into DevRev. It also creates new items in DevRev for any new companies or contacts created in Hubspot after the last sync or import.\nPeriodic Sync\nBy enabling this option, you can automatically sync new changes from Hubspot to DevRev on a periodic basis. The default frequency is once an hour.\nView Report\nThis option allows you to access detailed information about the initial import and any subsequent syncs performed.\nDelete Import\nIf you wish to remove the import and all items that were imported from Hubspot into DevRev, you can use this option.\nEdit Connection\nUse this option to change the connection used for any subsequent actions. It can be helpful if a connection becomes inactive or the user who established it's no longer available.\n\nHistorical imports.\n\nTo view currently running and previous imports from various sources, including Hubspot, follow these steps:\n\nGo to Settings > Imports..\nSync to DevRev.\n\nAfter a successful import from a Hubspot account, you can choose to sync the imported data with DevRev. This feature imports any new companies and contacts and any changes made to previously imported items from Hubspot.\n\nTo perform a one-time sync to DevRev, follow these steps:\n\nGo to Settings > Imports..\nLocate the previously imported project.\nSelect the \u21c6 > \u21fe From Hubspot to DevRev. option.\n\nPlease be aware that this may override fields in previously imported items, even if they were modified in DevRev.\n\nPeriodic sync.\n\nAfter successfully importing from a Hubspot account, you have the option to enable a periodic sync. This allows for automatic synchronization between Hubspot and DevRev on a regular basis. By default, the sync occurs once an hour.\n\nTo enable a periodic sync, follow these steps:\n\nGo to Settings > Imports..\nLocate the previously imported project.\nSelect the \u21c6 > Start Periodic Sync. option.\n\nTo disable a periodic sync, follow these steps:\n\nGo to Settings > Imports..\nLocate the previously imported project.\nSelect the \u21c6 > Stop Periodic Sync. option.\nDelete import.\n\n:::warn This deletes any content created by the import, including accounts, users, works, and parts.\n\nUsers not created by the import but created under an Import account will also be deleted as part of the account deletion.. :::\n\nAn import and all the content it creates can be deleted from DevRev. This can be useful when running POCs or to change the recipe used during the import. Once an import has been deleted, all the content it created gets deleted, even if they were modified in DevRev. It's possible to import the project again after its deletion.\n\nTo delete and import all the content it created, go to Settings. > Imports. > Past Imports. , find the previously imported project, and select \u21c6 > Delete Import..\n\nPrevious Airdrop Next Salesforce Airdrop\nOn this page\n\nSupported objects Importing from Hubspot Post import options Historical imports Sync to DevRev Periodic sync Delete import\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-827",
        "dataset_source": "devrev-dev0",
        "title": "Salesforce Airdrop",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSupported objects Importing from Salesforce Post import options Historical imports Sync to DevRev Sync to Salesforce Mark a DevRev ticket for syncing Periodic sync Delete import\nSalesforce Airdrop.\n\nDevRev's Salesforce Airdrop allows you to perform a bulk migration, ongoing 1-way sync, or ongoing 2-way syncs. A bulk import is a pre-requisite to setting up a sync.\n\nFor more information, refer to the Salesforce Airdrop snap-in on the DevRev marketplace.\n\nSupported objects.\n\nThe following is a list of Salesforce objects and their corresponding DevRev equivalent. Those marked as Sync to DevRev. are eligible for import/sync to DevRev from Salesforce. Those marked as Sync to Salesforce. are eligible to be synced to Salesforce from DevRev.\n\nSalesforce Object DevRev Object Sync to DevRev Sync to Salesforce Case Ticket \u2705 \u2705 Task Ticket \u2705 \u2705 Problem Ticket \u2705 \u2705 Incident Ticket \u2705 \u2705 Comment on Case/Task/Problem/Incident Comment on Ticket \u2705 \u2705 Attachment on Case/Task/Problem/Incident Attachment on Ticket \u2705 \u274c Product Product \u2705 \u274c Account Account \u2705 \u274c Contact Contact \u2705 \u274c Opportunity Opportunity \u2705 \u2705 Lead Contact \u274c \u274c Knowledge Article Article \u274c \u274c Custom Object Custom Object \u274c \u274c\n\nImporting from Salesforce.\n\nFollow the steps below to import from Salesforce:\n\nOnly Salesforce editions with API access are supported. Supported editions include Enterprise. , Unlimited. , Developer. , and Performance.. Additionally, Professional. edition is supported if API access has been purchased as an add-on.\n\nGo to Settings > Imports. and click Start Import. or Import..\nCreate a new connection to your Salesforce account, or use an existing connection if you already have one.\nOnce the connection is established, select the Salesforce account you want to import and specify the DevRev part that should be used for any imported cases without a product. This initiates a bulk import of the selected account.\nDevRev makes an effort to automatically map the fields from Salesforce to corresponding fields in DevRev. However, you may be prompted to manually map certain fields if needed. You can track the migration and perform any required mapping under Settings > Imports > Ongoing Imports..\n\nThe duration of the import depends on the size of the Salesforce account and the data being imported. It can take seconds for an account with only a few dozen cases to a few hours for an account with tens of thousands of cases with many attachments. DevRev honors the Salesforce API rate limits and back-off and resume automatically.\n\nPost import options.\n\nAfter a successful import, you have the following options available for the imported account:\n\nSync to DevRev :\nThis option allows you to synchronize any modifications made in Salesforce with the corresponding items previously imported into DevRev. It also creates new items in DevRev for any new items created in Salesforce after the last sync or import. This is a one-time operation.\nSync to Salesforce :\nThis options synchronizes any changes made in DevRev to previously synced Salesforce supported items back to Salesforce. It also creates any items marked in DevRev for creation in Salesforce. This is a one-time operation.\nPeriodic Sync :\nBy enabling this option, you can automatically sync new changes from Salesforce to DevRev on a periodic basis. The default frequency is once an hour.\nView Report\nThis option allows you to access detailed information about the initial import and any subsequent syncs performed.\nDelete Import\nIf you wish to remove the import and all items that were imported from Salesforce into DevRev, you can use this option.\nEdit Connection\nUse this option to change the connection used for any subsequent actions. It can be helpful if a connection becomes inactive or the user who established it is no longer available.\n\nHistorical imports.\n\nTo view currently running and previous imports from various sources, including Salesforce, follow these steps:\n\nGo to Settings. > Imports..\nSync to DevRev.\n\nAfter a successful import from a Salesforce account, you can choose to sync the imported data with DevRev. This feature imports any new items and any changes made to previously imported items from Salesforce.\n\nTo perform a one-time sync to DevRev, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect \u21c6. > \u21fe From Salesforce Service to DevRev..\n\nThis may override fields in previously imported items, even if they were modified in DevRev.\n\nSync to Salesforce.\n\nAfter a successful import from a Salesforce account, you can sync changes made in DevRev to the previously imported cases back to Salesforce. Additionally, any new DevRev tickets marked for sync is created as new Salesforce items.\n\nTo perform a one-time sync to Salesforce, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect \u21c6. > \u21fe From DevRev to Salesforce Service..\n\nThis may override fields in Salesforce of previously imported items, even if they were modified in Salesforce.\n\nMark a DevRev ticket for syncing\n\nUsing the Sync to Salesforce feature, it's possible to sync DevRev tickets to Salesforce. In order to sync a DevRev ticket to a specific Salesforce type, it must be marked for syncing. Marking a DevRev ticket for syncing can only be done during the creation of a new ticket. During ticket creation, select the dropdown for Type and set it to the Salesforce account and type the ticket should be synced to. The format is as follows: _salesforceservice {Salesforce Subdomain} {cases_ | _tasks_ | _problems_ | _incidents}_.\n\nFor example, if you want to sync a new case to a Salesforce account that's served through https://devrev.lightning.force.com , this would show as salesforceservice devrev cases.\n\nAfter a DevRev work item has been marked for syncing, it's created in the specified Salesforce account next time the Sync from DevRev to Salesforce runs. This can be triggered manually or automatically through a Periodic Sync. Future syncs keeps this item updated on both sides after it has been created in Salesforce.\n\nPeriodic sync.\n\nDevRev highly recommends creating a new dedicated Salesforce account when setting up an ongoing 2-way sync..\n\nUse a dedicated Saleforce account to create the Salesforce connection and set up the import. This prevents any individual Salesforce user from receiving too many Salesforce notifications.\n\nAfter successfully importing from a Salesforce account, you have the option to enable a periodic sync. This allows for automatic synchronization between Salesforce and DevRev on a regular basis. By default, the sync occurs once an hour. The sync can be configured to be Sync to DevRev, Sync to Salesforce or both.\n\nTo enable a periodic sync, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect \u21c6. > Start Periodic Sync..\n\nTo disable a periodic sync, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect \u21c6. > Stop Periodic Sync..\nDelete import.\n\nThis deletes any content created by the import, including accounts, users, works, and parts.\n\nUsers not created by the import but created under an Airdrop account will also be deleted as part of the account deletion..\n\nAn import and all the content it creates can be deleted from DevRev. This can be useful when running POCs or to change the recipe used during the import. Once an import has been deleted, all the content it created gets deleted, even if they were modified in DevRev. It's possible to import the project again after its deletion.\n\nTo delete and import all the content it created, go to Settings. > Imports. > Past Imports. , find the previously imported project, and select \u21c6 > Delete Import..\n\nPrevious Hubspot Airdrop Next Zendesk Airdrop\nOn this page\n\nSupported objects Importing from Salesforce Post import options Historical imports Sync to DevRev Sync to Salesforce Periodic sync Delete import\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-828",
        "dataset_source": "devrev-dev0",
        "title": "Zendesk Airdrop",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSupported objects Importing from Zendesk Post import options Historical imports Sync to DevRev Sync to Zendesk Mark a DevRev ticket for syncing Periodic sync Delete import Zendesk Help Center Airdrop Importing Help Center items into DevRev Features Limitations\nZendesk Airdrop.\n\nDevRev's Zendesk Airdrop allows you to perform a bulk migration, ongoing 1-way sync, or ongoing 2-way syncs. A bulk import is a prerequisite to setting up a sync.\n\nFor more information, refer to the Zendesk Airdrop snap-in on the DevRev marketplace.\n\nSupported objects.\n\nThe following is a list of Zendesk objects and their corresponding DevRev equivalent. Those marked as Sync to DevRev. are eligible for import/sync to DevRev from Zendesk. Those marked as Sync to Zendesk. are eligible to be synced to Zendesk from DevRev.\n\nZendesk Object DevRev Object Sync to DevRev Sync to Zendesk Ticket Ticket \u2705 \u2705 Comment on Ticket Comments \u2705 \u2705 Category/Status of Ticket State/Stage of Ticket \u2705 \u2705 Attachments on Ticket Attachments on Ticket \u2705 \u2705 Tag on Ticket Tag on Ticket \u2705 \u274c Organization Account \u2705 \u274c Agent DevUser \u2705 \u274c End User Contact \u2705 \u274c Chat Conversation \u274c \u274c Conversation Conversation \u274c \u274c SLA SLA \u274c \u274c Article Article \u2705 \u274c Categories Collections \u2705 \u274c Sections Collections \u2705 \u274c Automation Snap-in \u274c \u274c Macro Command \u274c \u274c Custom Object Custom Object \u274c \u274c\n\nImporting from Zendesk.\n\nFollow the steps below to import from Zendesk:\n\n\ud83c\udfa5 Video: Import from Zendesk Go to Settings. > Imports. and click Start Import. or Import..\nCreate a new connection to your Zendesk account, or use an existing connection if you already have one.\nOnce the connection is established, select the Zendesk workspace you want to import and specify the DevRev part where the imported tickets should be created. This initiates a bulk import of the selected workspace.\nDevRev makes an effort to automatically map the fields from Zendesk to corresponding fields in DevRev. However, you may be prompted to manually map certain fields if needed.\n\nThe duration of the import depends on the size of the Zendesk account. It can take seconds for an account with only a few tickets to a few hours for an account with tens of thousands of tickets with many attachments. DevRev honors the Zendesk API rate limits and back-off and resumes automatically.\n\nPost import options.\n\nAfter a successful import, you have the following options available for the imported project:\n\nSync to DevRev\nThis option allows you to synchronize any modifications made in Zendesk with the corresponding items previously imported into DevRev. It also creates new items in DevRev for any new tickets, customers, or organizations created in Zendesk after the last sync or import.\nSync to Zendesk :\nThis option synchronizes any changes made in DevRev to previously synced Zendesk supported items back to Zendesk. It also creates any items marked in DevRev for creation in Zendesk. This is a one-time operation.\nPeriodic Sync\nBy enabling this option, you can automatically sync new changes from Zendesk to DevRev on a periodic basis. The default frequency is once an hour.\nView Report\nThis option allows you to access detailed information about the initial import and any subsequent syncs performed.\nDelete Import\nIf you wish to remove the import and all items that were imported from Zendesk into DevRev, you can use this option.\nEdit Connection\nUse this option to change the connection used for any subsequent actions. It can be helpful if a connection becomes inactive or the user who established it's no longer available.\n\nHistorical imports.\n\nTo view currently running and previous imports from various sources, including Zendesk, follow these steps:\n\nGo to Settings. > Imports..\nSync to DevRev.\n\nAfter a successful import from a Zendesk workspace, you can choose to sync the imported data with DevRev. This feature imports any new tickets, customers, organizations, and any changes made to previously imported items from Zendesk.\n\nTo perform a one-time sync to DevRev, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect the \u21c6. > \u21fe From Zendesk to DevRev. option.\n\nPlease be aware that this may override fields in previously imported items, even if they were modified in DevRev.\n\nSync to Zendesk.\n\nAfter a successful import from a Zendesk account, you can sync changes made in DevRev to the previously imported supported items back to Zendesk. Additionally, any new DevRev tickets marked for sync are created as new Zendesk items.\n\nTo perform a one-time sync to Zendesk, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect \u21c6. > \u21fe From DevRev to Zendesk..\n\nThis may override fields in Zendesk of previously imported items, even if they were modified in Zendesk.\n\nMark a DevRev ticket for syncing\n\nUsing the Sync to Zendesk feature, it's possible to sync DevRev tickets to Zendesk. In order to sync a DevRev ticket to a specific Zendesk type, it must be marked for syncing. Marking a DevRev ticket for syncing can only be done during the creation of a new ticket. During ticket creation, select the dropdown for Type, set it to the Zendesk account, and type the ticket should be synced to. The format is as follows: _zendesk {Zendesk Subdomain} tickets.{type}_.\n\nFor example, if you want to sync a new ticket of type question to a Zendesk account that's served through https://devrev.zendesk.com , this would show as zendesk devrev tickets.question.\n\nAfter a DevRev work item has been marked for syncing, it's created in the specified Zendesk account the next time the Sync from DevRev to Zendesk runs. This can be triggered manually or automatically through a Periodic Sync. Future sync keeps this item updated on both sides after it has been created in Zendesk.\n\nPeriodic sync.\n\nDevRev highly recommends creating a new dedicated Zendesk account when setting up an ongoing 2-way sync..\n\nUse a dedicated Zendesk account to create the Zendesk connection and set up the import. This prevents any individual Zendesk user from receiving too many Zendesk notifications.\n\nAfter successfully importing from a Zendesk account, you have the option to enable a periodic sync. This allows for automatic synchronization between Zendesk and DevRev on a regular basis. By default, the sync occurs once an hour. The sync can be configured to be Sync to DevRev, Sync to Zendesk, or both.\n\nTo enable a periodic sync, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect the \u21c6. > Start Periodic Sync. option.\n\nTo disable a periodic sync, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect the \u21c6. > Stop Periodic Sync. option.\nDelete import.\n\nThis deletes any content created by the import, including accounts, users, works, and parts.\n\nUsers not created by the import but created under an Airdrop account will also be deleted as part of the account deletion..\n\nAn import and all the content it creates can be deleted from DevRev. This can be useful when running POCs or to change the recipe used during the import. Once an import has been deleted, all the content it created gets deleted, even if they were modified in DevRev. It's possible to import the project again after its deletion.\n\nTo delete and import all the content it created, go to Settings. > Imports. > Past Imports. , find the previously imported project, and select \u21c6 > Delete Import..\n\nZendesk Help Center Airdrop.\n\nDevRev supports the import of Zendesk help center (Categories, Sections, and KB Articles) using airdrop.\n\nThe mapping of Zendesk items to their counterparts in DevRev is as follows:\n\nZendesk DevRev Categories Collections Sections Collections Articles Articles Content Tags Tags Permission Groups Tags User Segments Tags\n\nDuring import, any fields without equivalence in DevRev are excluded. For information about DevRev articles, click here.\n\nImporting Help Center items into DevRev.\n\nThe help center import process is integrated into your overall Zendesk import. If you already have an ongoing import of tickets and want to include articles as well, reach out to our customer experience team.\n\nFeatures.\n\nImported articles will be editable within DevRev.\n\nInline and block attachments associated with each article will be imported.\n\nReferences to other Zendesk articles within article content will be managed, redirecting to articles on DevRev.\n\nContent tags, permission groups, and user segments will be imported as tags, and added to the relevant articles.\n\nEach synchronization will generate a new version of the article on DevRev if changes were made in Zendesk since the last sync, ensuring content is not overwritten. Users can edit articles within DevRev.\n\nLimitations.\n\nWhile Zendesk's API provides article content in HTML , DevRev articles are in a custom JSON format. We've made a best-effort conversion between the two formats, which may result in errors. If any errors are detected, a Review Required tag will be added, and the article status will be switched to draft. While our converter supports Zendesk's native editor tags, we cannot guarantee compatibility with all user-added HTML, potentially resulting in rendering issues and disruptions to the editing experience.\nThe ordering of articles and collections during the initial import and subsequent syncs is not assured. This is because of limitations in how Zendesk transmits positions in its response and how we internally store the rank of articles and collections.\nSyncing from DevRev to Zendesk for help center items is not supported.\n\nPrevious Salesforce Airdrop Next Rocketlane Airdrop\nOn this page\n\nSupported objects Importing from Zendesk Post import options Historical imports Sync to DevRev Sync to Zendesk Periodic sync Delete import Zendesk Help Center Airdrop Importing Help Center items into DevRev Features Limitations\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-829",
        "dataset_source": "devrev-dev0",
        "title": "Build",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\n\ud83d\udc49 Getting started \ud83d\udccb Execution: Issues & enhancements \ud83d\udcc5 Planning: NNL & sprints \ud83d\udd01 Integrations with other systems\nBuild.\n\nThe DevRev Build app enables you to bring the voice of the customer to software development, which can be broken down into planning and execution activities. The Build app supports both activities and offers integrations with other systems.\n\n\ud83c\udfa5 Video: Build overview \ud83d\udc49 Getting started.\n\nThe most important first step in getting started with any DevRev app is to describe the structure of your product in Trails. Because all work is associated with a part, you need to define the parts of your product.\n\nVistas are lists of objects that can be sorted, grouped, customized, saved, and shared. Updates shows activity on objects that are relevant to you. These are general capabilities of DevRev that are useful for Build as well as for other purposes.\n\n\ud83d\udccb Execution: Issues & enhancements.\n\nThe fundamental unit of work management is an issue : a work item that has the right size and attributes to capture work done by developers, designers, QA, marketers, and others. Issues also provide significant flexibility in terms of size, hierarchy, and nature of work.\n\nIssues may contain smaller tasks for the owner to track their own work. If work is needed from someone other than the issue owner, you can create child issues and assign them to a different owner.\n\nEnhancements may be used to track higher-level groups of user stories or to bundle related work together.\n\n\ud83d\udcc5 Planning: NNL & sprints.\n\nThe DevRev Build app provides two agile modes of execution to manage and track work across all departments of your organization. Both modes can coexist within a dev org.\n\nNow, Next, Later is a lightweight Kanban methodology that can universally be used to track and manage work in a less intrusive but still effective manner. Whether your engineering team or your marketing team, everyone loves this simple philosophy.\n\nSprints are used in a more process-heavy agile scrum methodology well known for driving regimented delivery of work in preset time boxes. While the many ceremonies and manifestos in this methodology can be daunting, DevRev Build simplifies it through automations and opinionated workflows. Our version aligns your teams to aim for product impact over merely finishing tasks assigned.\n\nWhile NNL is the default mechanism in DevRev, you can configure a product or capability to have a sprint board.\n\n\ud83d\udd01 Integrations with other systems.\n\nSnap-ins provide integration with other systems that you use for build activities:\n\nJira Linear GitHub\n\nInstall and configure the snap-ins that are relevant to your business.\n\nPrevious Support snap-ins Next Issues\nOn this page\n\n\ud83d\udc49 Getting started \ud83d\udccb Execution: Issues & enhancements \ud83d\udcc5 Planning: NNL & sprints \ud83d\udd01 Integrations with other systems\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-830",
        "dataset_source": "devrev-dev0",
        "title": "Issues",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nAttributes Discussion and events Create an issue Tags Stages\nIssues.\n\nViews of issues can be found under Build. in the DevRev app and in sprint boards. You can export views to CSV or JSON by selecting Actions. in the upper-right corner and choosing the format.\n\nAttributes.\n\nIssues are assigned to an engineer, PM, designer, or any other team member through the Owner. attribute. This attribute can be effectively used in filters and Group. conditions across various vistas in DevRev to track specific work, capacity, and more.\n\nOther key attributes such as Effort. (in days) and Target close date. can be used to estimate work and delivery to keep stakeholders in the know.\n\nIssues are attached to parts in order to align efforts with product priorities.\n\nAs to the size of an issue and the flexibility it offers to manage changes in size, issues offer hierarchy in the form of parent-child relationships and granularity.\n\nFrom an issue, you can create a parent issue or a child issue. In an issue, select Link Issues. in the Issues. pane and select the type to add.\n\nWhile a parent issue can and usually does have multiple children, an issue can have only one parent. If you try to add a parent to an issue that already has one, it fails.\n\nTasks can be used to break an issue down into smaller pieces. Issues may involve a checklist of items to be handled that can be represented as tasks.\n\nDiscussion and events.\n\nThe Discussion. tab of issues is to facilitate communication and collaboration on a given work item across engineers, PMs, designers, and any other stakeholder within an organization.\n\nThe Events. tab provides a log of key events such as owner assignments/changes, stage changes, and dependency updates.\n\nCreate an issue.\n\nGo to Build > Issues. from the sidebar on the left.\n\nClick New Issue. on the top right corner of your screen.\n\nAdd a title and description for your new issue. You can also attach files related to the issue in the description.\n\nSelect which part of the company/product this issue is related to.\n\nEnter other attributes for the issue: change the assignee or accept the default; enter the severity; add any relevant tags to help employees identify any relevant traits of the issue; select the workspace that the issue pertains to.\n\nIf there are other tickets or issues that relate to this issue, click Link Records. and select the relevant items.\n\nIf you would like to immediately create another issue, select Create multiple..\n\nClick Create..\n\nTags.\n\nStalled\nPriority/Escalated\nFast/Slow Moving\nBlocked\nResolution: [ values ]\nImpact: [ values ]\nReason: [ values ]\n\nAn autonomous issue is an issue created automatically from an external event, such as a new VCS branch or pull request. These issues have the tag autonomous.\n\nStages.\n\nThe following figure shows the state machine for issues.\n\nOpen.\n\nTriage\n\nIssues that are newly created. From here either a user or automation takes a look at the issue and makes a determination of where it should go. In certain cases it may be immediately closed as a duplicate if the reported concern already exists in another issue. In other cases, the owner may determine that the issue is invalid or can't be fixed for other reasons and close the issue as won't fix.\n\nIf the issue isn't a duplicate and is something that should be accepted, the dev determines how soon it should be addressed by moving into the backlog , prioritized stage.\n\nBacklog (later)\n\nIssues that have been accepted but aren't planned for the next few development cycles (next and now). Issues in the backlog stage may be groomed at regular intervals to move to prioritized or in development depending on the current priority and bandwidth.\n\nPrioritized\n\nIssues that are planned to be completed in the current or subsequent development cycle but which have not yet been started. Issues in the prioritized stage should have clear requirements. Issues in the prioritized stage may be taken up for execution (promoted to in development ) or deprioritized (demoted to backlog ).\n\nIn-progress.\n\nIn development\n\nThe issue owner is actively working on the issue. When the owner has their resolution in a good state they request review which puts the issue in the in review stage.\n\nIn review\n\nThe issue and resolution are currently being reviewed. In certain scenarios, the reviewer may request changes to the proposed solution. In this scenario, the stage would transition back to in development. If the reviewers approve the fixes, the issue progresses into the in testing stage for validation.\n\nIn testing\n\nThe fixes have been approved and are currently undergoing validation. If the tests fail or bugs are made apparent, the issue transitions back to the in development stage as changes are required. If the tests pass and the fix is acceptable, the issue starts the deployment (CD) lifecycle and transition into the in deployment stage.\n\nIn deployment\n\nThe fixes are currently being deployed. When the deployment is complete, the issue transitions to the resolved stage. Traditional CD processes may move changes through various environments. These transitions should be tracked with stage notes.\n\nClosed.\n\nWon't fix\n\nIt can't be addressed with a change to the product.\n\nDuplicate\n\nRedundant with some other issue.\n\nResolved\n\nDeployment is complete.\n\nPrevious Build Next Now, Next, Later\nOn this page\n\nAttributes Discussion and events Create an issue Tags Stages\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-831",
        "dataset_source": "devrev-dev0",
        "title": "Parts & trails",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nRev parts Product or service Capability Feature Dev parts Runnable Linkable Trails Manage and link parts Step 1 Step 2\nParts & trails.\n\nA part is a related piece of a product or service that has a lifecycle (creation, operation, evolution, deprecation), and can be recursively made of smaller parts. Events and work items must be related to parts. In general, parts are the core objects that almost all other objects are linked to, which helps enforce the notion of tying everything back to the product or service.\n\n\ud83c\udfa5 Video: Trails\n\nTrails is an extensible interface that allows you to view and manage your part hierarchy and related items. Think of it like a graph canvas that's rendering linkages between items making them easier to navigate and summarize.\n\nThe following image shows an example of DevRev's trails view.\n\nFor a guided tour of Trails, check out the interactive walkthrough.\n\nThere are two core categories of parts: rev parts and dev parts.\n\nRev parts relate to how a product is expressed, integrated, or consumed. These parts may be consumed by external customers (revs) or internal employees (devs). Although they may also be provided/enabled by dev parts running internally, the customer just sees the product, service, or feature they are interacting with. Rev parts may also be abstractions on other rev parts exposed by 3rd parties (such as Auth0 or s3).\n\nFor example, in the digital world, rather than integrating with code or packages, they may integrate with APIs.\n\nDev parts are those built internally related to code or something the developer relies on or builds, or a service provided by an organization. These may be runnables that may expose APIs or linkables that may be used in other services (such as utils or libraries). Though they may provide the functionality exposed and interacted with by the customer, they are often abstracted and unknown to the user.\n\nTypes of parts typically include:\n\nproduct\ncapability\nfeature\nrunnable\nlinkable\n\nThe part hierarchy is at the core of the DevRev platform and is the basis for tying all work and event funnels to a common product or service model and for coordinating across funnels.\n\nThe following figure shows the conceptual part hierarchy.\n\nRev parts.\n\nProduct or service.\n\nAt the highest level of the part hierarchy is a product or service. An organization may have one or more products or services they deliver to their customers. Products can also be delivered through one or more conduits (such as tangible goods or as-a-service).\n\nProducts typically have the following characteristics:\n\nAre a unit of profit and loss (P&L)\nAre where customers (internal or external) are onboarded\nProvide the basis for identity\nMay have a notion of billing/chargeback (which can be done at this level or further down the stack)\n\nServices may have the following additional characteristics:\n\nProvide an API or interface\nDefine code-based or business services\n\nOne example of the difference between a product and a service is Microsoft Office (software product) versus Office 365 (cloud service).\n\nA key to consider is that all must be considered from the perspective of the dev org. A product for them may be a service for another. For example, consider a managed services provider, they may provide a \"product\" (for example, Microsoft Exchange) delivered as a managed service.\n\nA service may also be a business service like IT (internal), HR (internal), or Consulting (external).\n\nExample products delivered as software or tangible goods:\n\nHardware products (Lenovo laptops, mobiles and more.)\nSoftware products (MSFT Office, Acrobat, and more)\n\nExample services:\n\nCloud services (Amazon Web Services, Azure, GCP)\nIT services (Helpdesk, Data center, and more.)\nFacilities services (building services, lunch services)\n\nThe following video shows products, capabilities, and features in DevRev.\n\n\ud83c\udfa5 Video: Products, capabilities, and features Capability.\n\nA capability exists under a product or service and is commonly the main item of interaction for customers.\n\nCapabilities typically have the following characteristics:\n\nExist under a product or service\nProvide the ability to do something (verbs) with entities (nouns); for example create object\nProvide an API namespace\nProvide units of licensing and pricing\nHave its own level of authentication and access control or may inherit from the product\n\nFeature.\n\nA feature exists under a capability (or feature for sub-features) and is commonly a unit of configuration or \"knobs\" in a capability.\n\nFeatures typically have the following characteristics:\n\nExist under a capability (or feature for sub-features)\nProvide a unit of configuration (adjective) for entities managed by the capability\nEnable version history (adjective) on object\nMay provide a subset of the API namespace\nAre interacted with only inside the context of the capability or not directly interacted with at all\n\nYou can add a sub-feature to a feature for a more granular breakdown of features. These leverage the same feature object and have the same attributes. The only difference is that their parent becomes a feature rather than a capability.\n\nDev parts.\n\nRunnable.\n\nA runnable is a dev part and is something that can be instantiated or do something. For example, runnable may be macro services, microservices, or functions (lambdas). Runnables are things that have some direct execution or lifespan. A runnable may serve one or more features and/or capabilities.\n\nA runnable typically has the following characteristics:\n\nAre a unit of functionality that can be deployed independently or as part of a larger system.\nHave an execution lifecycle be it short (lambda/function) or long (microservice).\nExpose an API.\nAre interacted with directly through an API or UI.\nAre published in a service registry or load balancer.\n\nExample runnables:\n\nDocker image\nLambda bundle\n\nExample DevRev runnables:\n\nWisp (search)\nCodex (work SOR)\nPartiql (parts SOR)\n\nLinkable.\n\nA linkable is a unit of functionality that's designed to be part of a system or application and not used directly. These commonly refer to things like libraries or utils that may be leveraged by multiple runnables.\n\nComponents typically have the following characteristics:\n\nLinkable items are commonly used as libraries or binary artifacts.\nNot commonly exposed to the consumer (but can be).\nAre intended to be used as part of larger services, not on their own.\n\nExample linkable parts:\n\nLibrary\nDLL\nGolang package\n\nExample DevRev Linkables:\n\nAll clients (for example, partiql-client, codex-client, mfz-client)\nShared (logging and so on.)\n\nTrails.\n\nTrails is an extensible interface that allows you to view and manage your part hierarchy and related items. Think of it like a graph canvas that's rendering linkages between items making them easier to navigate and summarize.\n\nYou can open a part in trails by hovering over the part ID.\n\nSort and filter. : You can apply filters and sort for each column in trails. Filtering by owner and stage can help locate the data you need much faster. Part nodes can be sorted alphabetically by Name. or based on events like Created date, Modified date, Target close date, Close date..\n\nSearch navigation. : Our top global search bar and localized search bars in each column of Trails. now goes directly to the node for that searched part, saving you time and effort.\n\nRicher part nodes. : You can enrich part nodes by selecting additional info like owner and stage.\n\nManage and link parts.\n\nTo manage, link, and edit parts, click Product > Trails.. For example, you have two products (Product 1, Product 2). Features and capabilities exist under each product.\n\nProduct 1 has capabilities namely Prod1 Capability 1 and Prod1 Capability 2. Product 2 has capability namely Prod2 Capability 3.\n\nLet's say that you need to move Prod1 Capability 2 under Product 2 and vice versa. You can do this in either of the following two ways:\n\nStep 1 Hover over the capability or feature you want to move and click View. and it'll open a right window pane.\nIn the Related. section, click Parts. to open Link parts. dialog.\nIn the Link parts. dialog, click the product name in the To. field.\nSelect the product name you want to move the capability from the drop-down. Click Link parts.. You can see that now Prod1 Capability 2 is under Product 2.\nStep 2 Hover over the capability or feature you want to move, and click the three dots beside the Add. button.\nClick Manage Links. to open Link parts. dialog.\nIn the Link parts. dialog, click the product name in the To. field.\nSelect the product name you want to move the capability from the drop-down. Click Link parts.. You can see that now Prod1 Capability 1 is under Product 2.\n\nIf you have parent parts and children parts under it then:\n\nMove the child parts first.\nOptionally move linked tickets and issues for each child.\nThen move the parent part.\nApply for this order at all levels: Product, Capabilities, Features, and Sub-features.\n\nLinking parts isn't only limited to capability, feature, or runnable. You can link the following parts:\n\nEnhancement:. A change to a part in the form of addition, deprecation, or transformation.\nTop contributors:. Top 10 owners with issues in the closed/resolved stage for any part in the hierarchy.\nTop supporters:. Top 10 owners with tickets in the closed stage and not null RevO id for any part in the hierarchy.\nTop customers:. Top 10 workspaces with the most number of tickets for any part in the hierarchy.\n\nPrevious Groups Next Vistas\nOn this page\n\nRev parts Product or service Capability Feature Dev parts Runnable Linkable Trails Manage and link parts\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-832",
        "dataset_source": "devrev-dev0",
        "title": "Now, Next, Later",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nContinuous planning Prioritized work NNL vista of issues\nNow, Next, Later.\n\nContinuous planning.\n\nTraditional scrum processes have become outdated due to their rigid roles, fixed sizing estimations, universally applied sprint durations, and repetitive meetings like stand-ups and retrospectives. While sizing estimations help in allocating resources and predicting outcomes, they don't address the most critical question. The accuracy of estimating the smallest elements of a plan only becomes clear when the plan transforms into action, and uncertainties are resolved or better understood. This lack of certainty often prompts developers to either overestimate when dealing with complexity or focus solely on known factors, resulting in a risk-averse approach.\n\nContinuous planning represents a real-time relationship between what is planned and what is being worked on. This approach directly enables developers to pick up work that drives customer and business impact on a continuous basis. The power of continuous planning comes through deconstructing complex processes in favor of more intuitive and integrated workflows.\n\n\ud83c\udfa5 Video: Prioritize backlog by customer impact Prioritized work.\n\nInstead of antiquated concepts requiring domain knowledge, prioritized work is defined by a state machine into Now , Next , and Later (NNL).\n\nNow. : A direct reflection of keystrokes, not what is planned but what is being executed. By capturing Now as a reflection of active development, a real-time meter can help teams understand true effort.\nNext. : A prioritized, scoped estimate of what will be worked on in a given timeframe.\nLater. : A combination of prioritized and new customer feedback that can be valued and ranked based on a combination of human and machine-based scoring.\n\nAs issues are moved into Next , like traditional methods, the effort is estimated or broken down further such that the work can be completed in a given time interval. Instead of asking and evaluating a work item based on a \"no more than\" estimate, teams should ask for a \"no less than\" estimate. Developers find more comfort in proposing this value as it removes the negative connotations of exceeding an estimate and removes incessant requests to explain why the work isn't complete. This adjustment removes a lot of overhead and distractions that cause teams to over-index on effort estimates.\n\nThe final change in adopting a continuous planning process is creating a culture that cultivates adaptation. Adaptation isn't something that can be taught; you have to empower an adaptive mindset and give developers the freedom to experiment and iterate to the right solution. As auto-ranking helps prioritize future investment, small experiments help prove or invalidate hypotheses, enabling teams to continuously iterate and validate assumptions. Empowering creators to embrace adaptation enables them to maintain product- and customer-centricity when building and iterating toward a goal.\n\nNNL vista of issues.\n\nNow. : Issues that are in progress (In Development, In Testing, In Review, In Deployment)\nNext. : Issues that will be taken up next (Prioritized)\nLater. : Issues that are not prioritized yet (Backlog)\n\nYou can view issues according to their stage in the DevRev app under Build > Now, Next, Later..\n\nYou can export views to CSV or JSON by selecting Actions. in the upper-right corner and choosing the format.\n\nSprints are automatically designated as two weeks long. You can change the sprint duration by clicking the date range in the Now. selector and changing the value of Duration..\n\nAdmins can save the duration change to make it effective for the org.\n\nPrevious Issues Next Sprint mode\nOn this page\n\nContinuous planning Prioritized work NNL vista of issues\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-833",
        "dataset_source": "devrev-dev0",
        "title": "Sprint mode",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSprint activities Creation Planning Retrospection Backlog grooming Create a sprint Share and customize sprint boards Create child/parent/dependent issues Sprint insights\nSprint mode.\n\nSprint activities.\n\nSprints involve the following for engineering work management:\n\nCreation\nPlanning\nRetrospection\nBacklog grooming\nSprint boards and insights\n\nFor a guided tour of sprints, check out the interactive walkthrough.\n\nCreation.\n\nTo enable teams to deliver great products, attaching work items to parts is no longer a requirement. You can define sprint boards the way you want because every organization has its team structure and way of distributing work among these teams. Creating sprint boards to start building is as easy as creating issues. Refer to Create a sprint for detailed instructions.\n\nOnce the sprint board is created, you can find it under Sprint Boards. in the left navigation bar of the DevRev app.\n\nThe issues visible in the sprint board's backlog are the ones that meet specific filters. These identified issues undergo grooming and are scheduled for upcoming active sprints.\n\nPlanning.\n\nPlanning a sprint starts with the Backlog. tab on a sprint board, which shows issues logged but not assigned to any sprint. The sprint planning exercise involves the team members coming together to discuss the issues shown here and to decide which ones should be taken up as part of the current sprint.\n\nYou can view the current sprint, the next sprint, and the backlog on the sprint board at any time.\n\nAs you plan on the issues, you may move them into a sprint by selecting the relevant ones, selecting the Add to sprint. icon on top, and choosing the sprint number from the menu.\n\nDuring sprint planning, it's also good practice to look at the issue coverage done in previous sprints. To access previous sprints select the Previous. switch at the top of the sprint board.\n\nTeam members can look into the issues and change stages as they progress on the planning and work done on the issue.\n\nYou can export views to CSV or JSON by selecting Actions. in the upper-right corner and choosing the format.\n\nRetrospection.\n\nAfter completing a sprint, visit the sprint from the Previous. tab and review the items which are Completed or still In progress by using the Stage. filter on top. Alternatively, you can use a block-wise view by applying Group. on the Stage. attribute. Toggle the switch in the Group By. multi-select pane to view a metric summarization.\n\nYou may move incomplete items either into the next sprint or the backlog by multi-selecting the issues and using the Add to sprint. icon from the tray on top.\n\nBacklog grooming.\n\nPMs, engineers, and designers should visit the backlog regularly to plan, brainstorm, and prepare the work item and its dependencies to have it ready for a future sprint. Activity here is mostly done at the level of individual items and their dependents.\n\nCreate a sprint.\n\nYou can create a sprint in either of the following ways:\n\nGo to Build. > Sprint Boards. on the left nav to view and create the sprint boards by clicking + Sprint board..\n\nCreate sprint boards using Parts/Trails:\n\nGo to Build. > Product. > Parts. > Capability/Feature.. Select the part you want to create a sprint for.\n\nGo to Build. > Product. > Trails. > Capability/Feature.. Hover over the part you want to create a sprint and click View..\n\nGo to Related. > Sprint boards.. If there are no sprint boards for the part, click New sprint board. and specify the name, duration of sprints, and the start date.\n\nGo to the new sprint board and click Backlog.. Any issues assigned to the part but not to a sprint are listed here. If there are no issues shown, you can go to the sprint board and click +Issue.. Create a new issue, assign it to the part, sprint and add the owner.\n\nSprints are not coordinated with stages.\n\nSelect issues that you would like to assign to Sprint 1. or Sprint 2. then click Move. in the toolbar at the top of the screen and select the sprint.\n\nGo to Sprint 1. or Sprint 2. to see that issues are displayed.\n\nThe sprint is also displayed in (and can be changed from) the issue.\n\nParts are not linked to the sprint board. A sprint board will show up on a part if issues of that part are assigned to an active sprint.\n\nYou can search for sprint boards directly by adding the Sprint. filter inside Issues.. Go to Sprint. > Add. on top and search for the sprint by name. Use this to navigate to a sprint board that has not been shared with you explicitly.\n\nShare and customize sprint boards.\n\nAs with other vistas, everyone in the dev org can view the sprint board in Sprint Boards. even if it's not exclusively shared with you. You can pin the sprint board for easy access and share the URL too which is under Share. > Copy Link.. To grant write permission, click Share. and enter the email or name of the person.\nYou can go to Settings. on the left of the Insights. button on top to change Duration. of the sprint and Define backlog. by adding issue filters like Part, Owner, Tags, Priority, Created by, SubType. that were used while creating the sprint board by clicking + Attributes.. This is especially useful for scenarios where the new team member\u2019s work has to be tracked in the backlog or a new product part is added to the team\u2019s focus area of work whose issues are to be tracked, etc.\nCreate child/parent/dependent issues.\n\nSelect the issue for which you want to create a child/parent/dependent issue.\nClick +Link issues. and select the required issue state.\nYou can now search for an existing issue to add or create a new issue by clicking +New Issue..\nAdd title, description, and owner. Click Create..\nSprint insights.\n\nSprint insights help you understand and visualize more about your issues and provide you with data. To view your sprint insights, select the required sprint and click Insights..\n\nBurn-down chart. : To help visualize sprint progress by viewing scope change over time and changes in work remaining over time. A line represents total incomplete issues over time as well as a specific line to represent how much work is left on issues directly linked to customer asks.\n\nFilters for focused analysis and retrospection. : Ability to apply filters at the top of the page for Part. , Owner. , and Priority.. This enhanced feature provides you with greater control and flexibility when analyzing the performance of various team members, different parts, and different priority work within your sprints.\n\nHigh-level breakdown by origin and nature of work. : Data-driven insights to help answer how much development work is focused on new features vs. maintenance and how much of it is customer-initiated vs. internally initiated. This enables you to gain deeper insights into the origin and nature of the issues within your sprints.\n\nIssue distribution. : Insights to understand the distribution of work across stages, owners, priority, and Part of your product\n\nSprint Health. : Provides a snapshot of the sprint health by capturing key metrics like % of work, time remaining in the sprint, and overall scope change since the start of the sprint\n\nTime spent per stage. : One can view and analyze the average time spent on issues in each stage since the beginning of the sprint. This helps developers to reflect on which stages of their work are taking up most of their time.\n\nPrevious Now, Next, Later Next Enhancements\nOn this page\n\nSprint activities Creation Planning Retrospection Backlog grooming Create a sprint Share and customize sprint boards Create child/parent/dependent issues Sprint insights\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-834",
        "dataset_source": "devrev-dev0",
        "title": "Enhancements",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Stages\nEnhancements.\n\nA product is a combination of rev parts and dev parts. Changes to a part could be in the form of addition, deprecation, or transformation. While the changes are a set of tasks or work for the build teams involved, the outcome of relevance is either a new part, an existing part that's deprecated, or an existing part that's improved or expanded. In the latter case, the enhancement record merges with the part on which this activity is based.\n\nEnhancements may be used to track higher-level groups of user stories or to bundle related work together. This usage of \"enhancement\" is similar to \"epic\" in other build approaches. You can perform filtering by stage and add stage attributes for enhancements.\n\n\ud83c\udfa5 Video: Epic planning with enhancements \ud83c\udfa5 Video: Enhancement promotion \ud83c\udfa5 Video: Enhancement merging Stages.\n\nTo create an enhancement, go to Product > Parts. , click + Part. , and select Enhancement. from the menu.\n\nOpen.\n\nIdeation\n\nRequests and requirements from various sources\u2013customers, support, tech leads, and product managers\u2013are discussed to form a cohesive idea for a product enhancement. The outcome of this stage is a product requirements document (PRD) that describes the enhancement. The PRD and supporting documents are linked to the ENH item in the Related > PRD. field.\n\nPrioritized\n\nThe decision-makers have decided to proceed with the enhancement idea and have allocated resources to make it happen. The outcome of this stage is a resourcing plan that may be linked to the ENH item in the Related > Other. field.\n\nIn progress.\n\nUX design\n\nTechnical and UX design is underway. The outcome of this stage is one or more design documents linked to the ENH in the Related > Design. field.\n\nIn development\n\nImplementation of the enhancement is underway.\n\nIn testing\n\nQuality assurance and verification of the enhancement are underway.\n\nDeployed.\n\nLimited availability\n\nThe enhancement has been made available to a subset of customers. At this stage, the enhancement may be merged with an existing part or promoted to a new part.\n\nGeneral availability\n\nThe enhancement has been made available to all customers. At this stage, the enhancement should be merged with an existing part or promoted to a new part.\n\nInactive.\n\nDeprecated\n\nThe enhancement has reached the end of its life and is no longer supported for customer use. Customer questions about the enhancement should be addressed by helping them migrate to the part with the replacement functionality or by recommending that they otherwise stop relying on the enhancement.\n\nDeprioritized\n\nDue to multiple reasons like bandwidth crunch or new emerging priorities, the decision-makers have decided not to work on the enhancement for the time being and will be inactive. This enhancement may be moved to the In Progress or Prioritized stages in the future to continue development.\n\nWon't do\n\nThe decision-makers have decided not to implement the product enhancement idea.\n\nPrevious Sprint mode Next Roadmap\nOn this page Stages\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-835",
        "dataset_source": "devrev-dev0",
        "title": "Build best practices",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nConfigure the DevRev app Manage development work Create releases Setup vistas Plan your work\nBuild best practices.\n\nConfigure the DevRev app.\n\nInstall Linear and Jira import snap-ins to migrate and sync all your data to DevRev.\nIntegrate with GitHub to connect events to your issues, automatically track your work, import issues, and notify reviewers regarding stale PRs.\nOnboard your team on DevRev by inviting users, adding them to groups, and providing users appropriate authorization to perform specific actions.\nUpdate your customer details on DevRev for effective customer management.\nCustomize PLuG to reflect your brand identity.\nInstall Slash commands to access specific actions quickly and use DevRev's Turing AI to perform the functions.\nInstall Converge support and build snap-in to ensure that customer conversations, support tickets, product enhancements, and development issues are always in sync.\n\nManage development work.\n\nCreate issues for your developers to work on.\nCapture significant changes to your product by creating enhancements and keep track of them in the roadmap.\n\nCreate releases.\n\nLaunch your completed enhancements by updating the stage to Limited availability for beta release or General Availability.\nPromote your enhancement to become a feature or capability or merge it into an existing part.\n\nSetup vistas.\n\nCreate and save custom vistas to track issues that matter to you by applying filters. You can also share them with your team members.\nCreate and save a custom roadmap to track enhancements of your product by applying filters. Share custom roadmap with key stakeholders to drive alignment.\n\nPlan your work.\n\nTrails:. Set up a hierarchical structure of your products, capabilities, and features as perceived by your customers.\n\nSprint boards:. You can create sprint boards in the following ways:\n\nGo to Build. > Sprint Boards. on the left nav to view and create the sprint boards by clicking + Sprint board..\nYou can create a sprint board from any part. Select issues that you would like to assign to a sprint from Backlog..\nClick Product > Parts. and select the part that you want to create a sprint for. Then, click Sprint Boards. to create a new sprint. Sprint cycles are 2 weeks by default, but you can customize the duration.\n\nNow, Next, Later:. Now, Next, Later is a continuous planning approach that allows you to prioritize work in a more intuitive way.\n\nWhen creating an issue, you can categorize it under the following buckets:\n\nNow:. What is currently being executed.\n\nNext:. Estimate of what will be worked on within a specific timeframe.\n\nBacklog/Later:. Prioritised issues expected to be committed to in a later timeframe.\n\nTriage:. Triage is a process to prioritize work items (issues or tickets) based on severity, risk, and frequency of occurrence. It's a collaborative effort between stakeholders like Customer Success, Support, PMs, and Engineering Leads.\n\nYou can view issues according to their stage in the DevRev app under Build > Now, Next, Later.\n\nPrevious Roadmap Next Build snap-ins\nOn this page\n\nConfigure the DevRev app Manage development work Create releases Setup vistas Plan your work\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-836",
        "dataset_source": "devrev-dev0",
        "title": "GitHub",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nWork automation Webhook installation GitHub events Work formats Automation Magic commands Toward Close Automatic work detection Autonomous work lifecycle On branch creation On PR creation Task creation PR reminders Issue import Supported objects Importing from GitHub GitHub issue import recipe Historical imports Sync to DevRev Periodic sync Delete import\nGitHub.\n\nBring your code to the center of your decision-making with GitHub and DevRev. The GitHub integration allows GitHub users to onboard to DevRev and automate day-to-day activities, removing the need for tedious manual tasks.\n\nWork automation : Connect GitHub events to your DevRev issues.\nMagic Commands : Update DevRev issues without leaving your IDE.\nAutotrack work : Automatically track your work in DevRev even without creating an issue ahead of time.\nPR Task Creation : Create DevRev tasks for PR reviewers.\nPR Reminders : Automatically remind PR reviewers when a PR goes stale.\nGitHub issues import : Import issues from your GitHub repositories.\n\nWork automation.\n\nYou can enable GitHub work automation through the GitHub for DevRev snap-in by establishing a GitHub connection and setting up a webhook.\n\nTo set up the GitHub for DevRev snap-in, go to Marketplace and install the GitHub for DevRev snap-in.\n\nWebhook installation.\n\nDuring the snap-in installation, follow the instructions for installing the webhook. The webhook can be installed for an entire GitHub org or specific repositories. If you install the webhook successfully, the message \"Webhook installed successfully\" is displayed in the Discussions. tab. If it was not installed correctly, you can see \"Webhook installation is unsuccessful\". If the webhook is not successfully installed, you need to create the webhook manually by following the instructions below.\n\nGo to Settings > Webhooks. in your GitHub organization or repository and select Add webhook..\n\nAdd the following in the Payload URL. field:\n\n1 https : //api.dev.devrev-eng.ai/hidden/dev-orgs/DEV-787/event-source-webhooks/github/2ce09ba6-1d08-4cb6-ac0b-e0b2169aa18c\n\nSet Content type. to application/json.\n\nAdd the following secret:\n\n1 dsnYinUbUK2U7ea3Ym1PlVxywHZ28B `\n2\n\nIn Events. , select Let me select individual events.. Select the following events:\n\na. Branch or tag creation.\n\nb. Pushes.\n\nc. Pull requests.\n\nd. Pull request review comments.\n\ne. Pull request review threads.\n\nf. Pull request reviews.\n\nFinalize the creation by clicking Add webhook. in GitHub and closing this window.\n\nGitHub events.\n\nAssociate GitHub events with DevRev work.\n\nYou can associate GitHub commits, branches, and pull requests with the issues they correspond to. Doing so allows you to see GitHub activity in the corresponding DevRev issue and to act on those events, allowing you to automate your manual tasks.\n\nCommits.\n\nYou can associate commits with their corresponding issue by either of these methods:\n\nIncluding one or more issue IDs anywhere in the commit message.\n\nExample: Fix: paging issue (issue:123)\nExample: Disable routing table ISS-123 and default to zero ISS-231\n\nIncluding it in a branch that's associated with an issue.\nBranches.\n\nYou can associate a branch with its corresponding issues by including one or more issue IDs in the branch name. For example, branch mavis/iss-123/teaches-typing. All commits in this branch are automatically associated with issue iss-123 , without you having to explicitly include it in the commit message.\n\nPull Requests.\n\nYou can track your PRs with the corresponding issues by including one or more issue IDs in the PR title. For example, the PR title iss-123 Fixes paging issue links the PR to ISS-123.\n\nWork formats\n\nYou can explicitly link an issue ID to a commit, branch, or PR by using the following formats:\n\nUsing a display ID: ISS-123\nUsing an issue ID: issue:123\n\nThe display ID and issue ID are case-insensitive, the following are all acceptable and refer to the same issue:\n\nISSUE:123 Issue:123 issue:123 ISS-123 Iss-123 iss-123\n\nAutomation.\n\nAfter a GitHub event is associated with an issue, the status of that issue is automatically updated according to the following rules:\n\nOpen In Progress In Development Open In Progress In Development Open In Progress In Review\n\nGitHub Event Initial Status Status Status Detail New commit New branch PR Opened\n\nMagic commands.\n\nWith magic commands, you can perform various actions on your DevRev issues without leaving your IDE.\n\nSupported magic commands:\n\nToward.\n\n/toward. can be used in a PR body to associate a PR with multiple DevRev issues without having to include them in the PR title. This associates the PR with the issues and the automations for stage changes apply just as if the issue IDs had been included in the title.\n\nExample:\n\n1 Fixes various formatting issues.\n2 /towards ISS - 31 ISS - 232 ISS - 421\nClose.\n\n/close. can be used in a PR body to both associate a PR with multiple DevRev issues and close them when the PR is merged. This associates the PR with the issues and the automations for stage changes apply as soon as the PR is pushed to GitHub. Once the PR is merged, the issues are closed.\n\nExample:\n\nThis associates and closes all 3 issues.\n\n1 Fixes various formatting issues.\n2 /close ISS - 31 ISS - 232 ISS - 421\n\nThe special keyword #work can be used to close any issues already associated with a PR without having to specify them, such as when the issue IDs are already in the title.\n\n1 Fixes various formatting issues.\n2 /close #work\nAutomatic work detection.\n\nDevRev can automatically track your coding activity, even if you don't explicitly associate it with an issue. When you create a new branch or PR, and the branch or PR isn't explicitly associated with an issue, DevRev creates an issue for you. We call this an autonomous issue or autonomous work item. DevRev tries to fill in the details for you but you can rename the issue in DevRev, or mark it as belonging to a different, existing issue.\n\nTo make use of this feature, go to My settings. and toggle Enable for me..\n\nYou can enable the \"Create DevRev issue when a new branch is created\" or the Create DevRev issue when a new PR is opened. feature in the GitHub for DevRev snap-in.\nThe \"Default part to assign autonomous issues to\" has been set to a valid part ID.\nEach developer that wants to use this feature has to link their GitHub account by going to Settings. > Account. > External Identities. and Link GitHub Account..\n\nYou can configure these automations from GitHub for DevRev snap-in.\n\nAutonomous work lifecycle.\n\nThe lifecycle of autonomous work varies from standard work created in DevRev. Certain actions are taken to reduce the burden on developers, including automatically closing the work.\n\nOn branch creation In Progress In Development In Progress In Review Closed Resolved In Progress In Development\n\nGitHub Event Action Status Stage New Branch Autonomous work created PR Opened Autonomous work title and description updated with PR details PR Closed (Default) Closes work if \"Close autonomous work on PR merge\" is enabled PR Closed Move back to In Development if \"Close autonomous work on PR merge\" is disabled\n\nOn PR creation In Progress In Review Closed Resolved In Progress In Development\n\nGitHub Event Action Status Stage PR Opened Autonomous work title and description updated with PR details PR Closed (Default) Closes work if \"Close autonomous work on PR merge\" is enabled PR Closed Move back to In Development if \"Close autonomous work on PR merge\" is disabled\n\nTask creation.\n\nDevRev can help you keep track of your issues while they're in the PR process. With PR Task Creation, a task is created for each PR reviewer in the DevRev issue associated with the PR. These tasks are automatically marked as completed when the reviewer approves or denies the PR or when the PR is closed for any reason.\n\nTo make use of this feature, the following conditions must be met:\n\nThe DevRev organization has enabled the Create task for PR reviewers. feature in the GitHub for DevRev snap-in.\nEach developer that wants to use this feature has to link their GitHub account by going to Settings. > Account. > External Identities. and Link GitHub Account..\nPR reminders.\n\nPRs can often go stale and delay the development process. With PR reminders, developers can be automatically notified when a PR has been inactive for a period of time.\n\nTo make use of this feature, the following conditions must be met:\n\nThe DevRev organization has enabled the \"Send reminders for inactive PRs\" feature in the GitHub for DevRev snap-in.\n(Optionally) Set the \"Number of days to wait before sending PR inactivity reminders\".\nIssue import.\n\nTo ease the transition from GitHub issues to DevRev, you can choose to import GitHub issues into DevRev.\n\nSupported objects.\n\nThe following is a list of GitHub objects and their corresponding DevRev equivalent. Those marked as Supported. are eligible for import.\n\nGitHub DevRev Supported Issue Issue \u2705 Comment on Issue Comment on Issue \u2705 Label on Issue Tag on Issue \u2705 Milestone on Issue Tag on Issue \u2705 Attachment on Issue Attachment on Issue \u274c User DevUser \u2705 Project Enhancement \u274c\n\nImporting from GitHub.\n\nFollow the steps below to import from GitHub:\n\nGo to Settings. > Imports. and click Start Import. or Import..\nCreate a new connection to your GitHub account, or use an existing connection if you already have one.\nOnce the connection is established, select the GitHub repositories you want to import and specify the DevRev part where the imported issues should be created. This initiates a bulk import of the selected repositories.\nDevRev makes an effort to automatically map the fields from GitHub to corresponding fields in DevRev. However, you may be prompted to manually map certain fields if needed.\n\nThe duration of the import depends on the number of issues being imported. It can take seconds for a few dozen issues to hours for tens of thousands of issues with many attachments. DevRev honors the GitHub API rate limits, it backs off and resumes automatically.\n\nPost import options.\n\nAfter a successful import, you have these options added for each imported repository:\n\nSync to DevRev\nThis option allows you to synchronize any modifications made in GitHub with the corresponding items previously imported into DevRev. It also creates new items in DevRev for any new issues or users created in GitHub after the last sync or import.\nPeriodic Sync\nBy enabling this option, you can automatically sync new changes from GitHub to DevRev periodically. The default frequency is once an hour.\nView Report\nThis option allows you to access detailed information about the initial import and any subsequent syncs performed.\nDelete Import\nIf you wish to remove the import and all items that were imported from GitHub into DevRev, you can use this option.\nEdit Connection\nUse this option to change the connection used for any subsequent actions. It can be helpful if a connection becomes inactive or the user who established it is no longer available.\n\nGitHub issue import recipe.\n\nThe following recipe is used to import GitHub issues into DevRev issues.\n\nGitHub DevRev Default Value title title - body body - - applies_to_part Selected part assignees* owned_by User importing user* created_by - user* modified_by - created_at created_date - updated_at modified_date - status stage - - priority P1 - work_type Issue labels tags - milestones tags -\n\nTransient users are created in DevRev for the GitHub assignees and creators.\n\nHistorical imports.\n\nTo view currently running and previous imports from various sources, including GitHub, follow these steps:\n\nGo to Settings. > Imports..\nSync to DevRev.\n\nAfter a successful import from a GitHub repository, you can choose to sync the imported data with DevRev. This feature imports any new issues and any changes made to previously imported issues from GitHub.\n\nTo perform a one-time sync to DevRev, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported repository.\nSelect the \u21c6. > \u21fe From GitHub to DevRev. option.\n\nPlease be aware that this may override fields in previously imported items, even if they were modified in DevRev.\n\nPeriodic sync.\n\nAfter successfully importing from a GitHub repository, you have the option to enable a periodic sync. This allows for automatic synchronization from GitHub to DevRev regularly. By default, the sync occurs once an hour.\n\nTo enable a periodic sync, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect the \u21c6. > Start Periodic Sync. option.\n\nTo disable a periodic sync, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect the \u21c6. > Stop Periodic Sync. option.\nDelete import.\n\nThis deletes any content created by the import, including users and works.\n\nAn import and all the content it creates can be deleted from DevRev. This can be useful when running POCs or to change the recipe used during the import. Once an import has been deleted, all the content it created gets deleted, even if they were modified in DevRev. It's possible to import the project again after its deletion.\n\nTo delete and import all the content it created, go to Settings. > Imports. > Past Imports. , find the previously imported project, and select \u21c6 > Delete Import..\n\nPrevious WhatsApp Next Harness\nOn this page\n\nWork automation Webhook installation GitHub events Automation Magic commands Toward Close Automatic work detection Autonomous work lifecycle Task creation PR reminders Issue import Supported objects Importing from GitHub GitHub issue import recipe Historical imports Sync to DevRev Periodic sync Delete import\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-838",
        "dataset_source": "devrev-dev0",
        "title": "Linear Airdrop",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSupported objects Importing from Linear Post import options Historical imports Sync to DevRev Periodic sync Delete import\nLinear Airdrop.\n\nImport your Linear team issues into DevRev to ease your transition from Linear to DevRev.\n\nFor more information, refer to the Linear Airdrop snap-in on the DevRev marketplace.\n\nSupported objects.\n\nThe following is a list of Linear objects and their corresponding DevRev equivalent. Those marked as Supported. are eligible for import.\n\nLinear Object DevRev Object Sync to DevRev Issue Issue/Ticket \u2705 Comment on Issue Comment on Issue/Ticket \u2705 Label on Issue Tag on Issue/Ticket \u2705 Attachment on Issue Attachment on Issue/Ticket \u2705 User DevUser \u2705 View Vista \u274c Project Enhancement \u274c\n\nImporting from Linear.\n\nTo import your Linear issues, go to Settings > Imports. then select Start Import. or Import..\n\nFrom there, create a new connection to your Linear workspace or use an existing connection if you already have one. Once the connection is established, select the team's issues you wish to import. This performs a bulk import of the selected issues. DevRev tries to automatically and sensibly map your fields to corresponding fields in DevRev, but it may prompt you on how you want to map certain fields.\n\nPost import options.\n\nAfter a successful import, you have these options added for an imported project:\n\nSync to DevRev\n\nWrite any modifications made in Linear to the corresponding work item in DevRev.\nCreate new work items in DevRev for any new issues created in Linear after the last sync or import.\n\nView report\nView details of the initial import and any syncs performed afterward.\nDelete import\nRemoves the import and all work that was imported into DevRev from the Linear team.\nEdit connection\nChanges the connection used for any subsequent action (that is, Sync). This is helpful if a connection goes stale or the user who established it, is no longer available.\n\nHistorical imports.\n\nYou can view currently running and previous imports from any source, including Linear, by navigating to Settings > Imports..\n\nSync to DevRev.\n\nAfter a successful issue import from a Linear team, you have the sync to DevRev option. The sync to DevRev feature imports any new issues and any new changes to previously imported issues.\n\nTo perform a one-time sync to DevRev, go to Settings > Imports. and find the previously imported project and select the Sync > \u21fe DevRev. option.\n\nThis overrides work's fields, even if they were changed in DevRev.\n\nPeriodic sync.\n\nAfter successfully importing from a Linear team, you have the option to enable a periodic sync. This allows for automatic synchronization from Linear to DevRev on a regular basis. By default, the sync occurs once an hour.\n\nTo enable a periodic sync, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect the \u21c6. > Start Periodic Sync. option.\n\nTo disable a periodic sync, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect the \u21c6. > Stop Periodic Sync. option.\nDelete import.\n\nThis deletes any content created by the import, including users and works.\n\nAn import and all the content it creates can be deleted from DevRev. This can be useful when running POCs or to change the recipe used during the import. Once an import has been deleted, all the content it created gets deleted, even if they were modified in DevRev. It's possible to import the project again after its deletion.\n\nTo delete and import all the content it created, go to Settings. > Imports. > Past Imports. , find the previously imported project, and select \u21c6 > Delete Import..\n\nPrevious DevRev for Jira app Next PLuG\nOn this page\n\nSupported objects Importing from Linear Post import options Historical imports Sync to DevRev Periodic sync Delete import\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-840",
        "dataset_source": "devrev-dev0",
        "title": "Install PLuG widget on your website",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSetup for HTML Setup for React\nInstall PLuG widget on your website.\n\nTo get the PLuG widget to appear on your website and web app, copy and paste the snippet below on every page where you want the widget to appear for website visitors.\n\nMake sure to replace the app ID with your app ID which identifies your PLuG widget. You can access your app ID from your DevRev account by following these steps.\n\nIn DevRev, go to Settings. > Support. > PLuG Settings. through the settings icon in the top-left corner.\nClick Enable PLuG Widget. if it isn't already enabled.\nCopy your Unique App ID. from the Configuration tab..\nSetup for HTML.\n\n1 // Place this code in the head of your HTML page\n2 < script\n3 type = \"text/javascript\"\n4 src = \"https://plug-platform.devrev.ai/static/plug.js\"\n5 > </ script >\n6\n7 // Place this code in the body of your HTML page\n8 < script >\n9 window.plugSDK.init({\n10 // Please ensure you replace the app_id with your unique app id\n11 app_id: \"<your_unique_app_id>\",\n12 });\n13 </ script >\nShow more\nSetup for React.\n\n1 // Place this in public/index.html file, inside the body tag of your HTML page\n2 <script\n3 type= \"text/javascript\"\n4 src= \"https://plug-platform.devrev.ai/static/plug.js\"\n5 ></script>;\n6\n7 // Place this code inside the react component where you want to render the widget\n8 // Typically you should do it as top level component like App.js\n9 useEffect ( () => {\n10 window. plugSDK. init ({\n11 // Please ensure you replace the app_id with your unique app id\n12 app_id : \"<your_unique_app_id>\" ,\n13 });\n14 }, []);\nShow more\n\nYou should now have PLuG widget installed on your website. Facing some issues? Reach out to us through our own PLuG widget from the bottom right of your screen.\n\nOnce the widget is installed on your website, every user who visits your website is considered an anonymous user. Anonymous users are the users that come to your site and haven't yet logged in or shared any information.\n\nWe understand the importance of making your engagement more personalized and contextual with your customers. Learn how to identify your customers and update their information.\n\nPrevious PLuG Next Identify your users with PLuG\nOn this page\n\nSetup for HTML Setup for React\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-841",
        "dataset_source": "devrev-dev0",
        "title": "Identify your users with PLuG",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nGenerate an application access token Generate a session token Passing the session token\nIdentify your users with PLuG.\n\nOnce you have installed PLuG , all your users who interact with the widget are created as anonymous users in the DevRev app with a random name since there is no information about the user.\n\nFor users who are logged on to your website, you can identify them on PLuG so that they can see their past conversations. Identifying your users also enables more personalized engagement with your users.\n\nIn this flow, you have to generate a session token for every user who visits your website. The session token identifies the customer when they interact with the widget. The session token is generated using the application access token and customer information. It should be generated on your website's back end since the app token needs to be kept hidden.\n\nYou can identify logged-in users by following these steps.\n\nGenerate an application access token.\n\nIn DevRev, go to Settings > Support > PLuG Tokens. through the settings icon on the top-left corner.\nClick New token. and copy the token that's displayed.\n\nCopy your access token at this step as you won\u2019t be able to see it again.\n\nGenerate a session token.\n\nFor security reasons, this call should be made from the server side so that your AAT isn't exposed.\n\nYou can generate a session token in the following ways:\n\nUsing rev user_id:\n1 curl --location 'https://api.devrev.ai/auth-tokens.create' \\ --header\n2 'Content-Type: application/json' \\ --header\n3 \"Authorization: $AAT\" \\ --data\n4 '{\n5 \"grant_type\" : \"urn:devrev:params:oauth:grant-type:token-issue\",\n6 \"subject_token\" : \"<<subject token>>\",\n7 \"subject_token_type\" : \"urn:devrev:params:oauth:token-type:userinfo\",\n8 \"requested_token_type\" : \"urn:devrev:params:oauth:token-type:session\"\n9 } '\nShow more\ngrant_type subject_token subject_token_type requested_token_type\n\nConfig option Type Required Description string Yes Specifies the process of obtaining a token. string Yes Represents the entity that requests the token. Not required when requesting an application access token (AAT). string Yes The type of the subject token. string Yes The type of the requested token.\n\nUsing rev_info:\n1 curl --location 'https://api.devrev.ai/auth-tokens.create' --header 'Authorization: \"<<Application Access Token>>\"'\n2 --header 'Content-Type: application/json' --data-raw\n3 '{\n4 \"rev_info\": {\n5 \"user_ref\": \"<<123456789>>\",\n6 \"org_ref\": \"<<org-org>>\",\n7 \"user_traits\": {\n8 \"email\": \"<<user@example.org>>\",\n9 \"display_name\": \"<<user>>\",\n10 \"full_name\": \"<<User Name>>\"\n11 },\n12 \"org_traits\": {\n13 \"display_name\": \"<<example>>\",\n14 \"domain\": \"<<example.com>>\"\n15 }\n16 }\n17 }'\nShow more\nuser_ref org_ref email display_name full_name display_name domain\n\nConfig option Type Required Description string Yes A unique user reference that the DevRev app uses for identifying your users. string No A unique ID for the organization of the user. string No The email address of the customer. It's used for sending email notifications of any support messages. string No The name of the user that's shown on the widget. string No The full name of the customer. string No The display name of the organization on the PLuG widget. string No The domain name of the organization that the user belongs to.\n\nPassing the session token.\n\nWhile initializing the PLuG widget you pass the session token for DevRev to identify this user and thereby make the widget more customized for the user and their context.\n\n1 // You can generate this session token using the above API in your backend\n2 const sessionToken = '<SESSION_TOKEN>'\n3 <script type= \"text/javascript\" src= \"https://plug-platform.devrev.ai/static/plug.js\" ></script>\n4 <script>\n5 (() => {\n6 window.plugSDK.init({\n7 app_id: '<your_unique_app_id>',\n8 session_token: sessionToken\n9 })})();\n10 </script>\nShow more\nPrevious Install PLuG widget on your website Next Customize\nOn this page\n\nGenerate an application access token Generate a session token Passing the session token\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-842",
        "dataset_source": "devrev-dev0",
        "title": "Customize",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nBranding, style, and layout Configuration Styling Layout **Turing search** Spotlight cards Add a spotlight card\nCustomize.\n\nBranding, style, and layout.\n\nBy the end of this section, you will be able to customize the look and feel of your PLuG widget to truly reflect your unique identity.\n\nYou can configure the look of your PLuG widget by going to your DevRev app and navigating to Settings > Support > PLuG Settings > Configuration, Styling and Layout Tabs..\n\nConfiguration.\n\n\ud83c\udfa5 Video: Session Recording\n\nAttribute Description Hide PLuG Widget Hide the PLuG Widget on specific URLs by clicking + Rule. and adding the URLs you want to configure Session Recording Enable Session Recording. to allow the PLuG Widget to automatically record your user's screen and attach it to their conversations. You can also enable data masking to ensure that no personal information about your users is recorded or displayed to your team.\n\nStyling.\n\nAttribute Description Launcher Logo The image that's visible as your widget icon. A 20-pixel square image is recommended. Alignment The side of the screen you want to show your widget on (left or right). Spacing The horizontal distance from the aligned side (left or right) and the vertical distance from the bottom of the screen. Brand Logo The image visible to your users in the top-right corner when they open the widget. A 20-pixel square image is recommended. Appearance The theme of the widget (light or dark). Accent Color The color of the buttons on the widget.\n\nLayout.\n\nTuring search\n\nAttribute Description Title The greeting message shown at the top of your widget. Search Enables users to search for articles through the widget. Search bar title The text shown in the search bar. Turing AI answers search queries of the users. Open articles in PLuG Open your linked articles within the PLuG Widget. Recent conversations Show recent conversations card on PLuG Home. Recent tickets Show recent tickets card on PLuG Home Add a Card Create a Spotlight card to announce or highlight something to your users.\n\nTuring search.\n\nHere's how Turing search works in PLuG.\n\nSpotlight cards.\n\nSpotlight cards are top-level cards on the PLuG widget. You can use them for showcasing PR articles, product releases, blog posts, or any other marketing/product-related content that can educate your users about things happening in your company.\n\nHere is how a spotlight card looks.\n\nAdd a spotlight card.\n\nIn the DevRev app, go to Settings > Support > PLuG Settings > Layout. through the settings icon on the top-left corner.\nSelect Add a Card. and enter a title, description, image, and redirect URL.\nClick Save and Publish. in the top-right corner. The new card is visible in your PLuG widget.\n\nWant to add more personalization to your PLuG widget? Create your own. Visit SDK Methods and Customization to create your own PLuG from the ground up.\n\nPrevious Identify your users with PLuG Next Nudges\nOn this page\n\nBranding, style, and layout Configuration Styling Layout Spotlight cards Add a spotlight card\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-843",
        "dataset_source": "devrev-dev0",
        "title": "Nudges",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nCreate a spotlight nudge Create a banner Create rules\nNudges.\n\nNudges are outbound messages generated by the PLuG widget to engage users and encourage specific actions or interactions. You can use these messages to gently prompt users, provide helpful information, or initiate conversations, thereby enhancing user engagement and guiding them toward desired outcomes within your application or website.\n\nThe PLuG widget can trigger these nudges and help you engage and interact with your customers more effectively.\n\nDevRev supports the following types of nudges:\n\nSpotlight\nBanner\n\nCreate a spotlight nudge.\n\nClick Settings. > PLuG Nudges..\nClick + Nudge..\nIn the Create new nudge. window, select Spotlight. and click Create..\nIn the Nudge Title. field, enter the nudge name.\nIn the Title. field, enter the nudge title.\nIn the Description. field, enter the nudge description.\nIn the Cover Image. field, click Upload. to upload an image.\nUse the Action. drop-down menu to select the type of engagement you want your users to have when they click the nudge. The following types of action are supported:\n\nRedirect to URL : You can provide a URL that your customers are redirected to when clicking on a nudge. It's helpful for sharing release notes, news, or blogs with your customers.\nOpen Widget : Upon clicking on the nudge, the PLuG widget opens to prompt the user to start a conversation. This is useful for informing customers about PLuG cards and suggesting support options.\nNone : When the user clicks on the nudge, nothing happens and there won't be any interaction.\n\nDefine rules as described in the Create rules section.\nCreate a banner.\n\nClick Settings. > PLuG Nudges..\nClick + Nudge..\nIn the Create new nudge. window, select Banner. and click Create..\nIn the Nudge Title. field, enter the nudge name.\nIn the Content. field, enter the nudge title.\nTo enable the nudge close button, turn on the Show a close button. toggle.\nSelect the banner color by clicking the color icon.\nUse the Action. drop-down menu to select the type of engagement you want your users to have when they click the nudge. The following types of action are supported:\n\nRedirect to URL : You can provide a URL that your customers are redirected to when clicking on a nudge. It's helpful for sharing release notes, news, or blogs with your customers.\nOpen Widget : Upon clicking on the nudge, the PLuG widget opens to prompt the user to start a conversation. This is useful for informing customers about PLuG cards and suggesting support options.\nNone : When the user clicks on the nudge, nothing happens and there won't be any interaction.\n\nDefine rules as described in the Create Rules section.\nCreate rules.\n\nThe rules enable you to define when your customers should receive nudges.\n\nClick the Rules. tab.\nIf you want to send the nudge to the customer only when they end up on a specific URL on your website, you can use this setting. To add a page rule, click + Page rule. and then add the URL. The URL can be an exact URL or a partial URL, depending on what you select between is/contains.. If you want to send the nudge across all the URLs, you don't have to add a specific page rule. Click + Page rule. again to add multiple URLs.\n\nFor PLuG to trigger the Nudge, your page URL should have the PLuG widget installed.\n\nIf you want to send a nudge to your customer only after spending a certain amount of time on your website, you can specify a time in seconds. Leaving it blank sends the nudge immediately.\nYou can define how frequently you want to send a nudge to a specific customer. Leaving it blank sends the nudge every time the user matches the rules you have set.\nTo save your changes, click Save as draft. , or to publish the nudge, click Publish.. Your customers start seeing the nudge.\nPrevious Customize Next SDK\nOn this page\n\nCreate a spotlight nudge Create a banner Create rules\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-844",
        "dataset_source": "devrev-dev0",
        "title": "Customizations",
        "content": "\nPLuG has a completely no-code way of changing the look and interaction of your widget. In case you wish to make your PLuG widget more interactive and customized to how your app is structured, you can use these customization properties to set up your widget.\nIf you have customized these properties of the widget through the PLuG settings page of DevRev, the values set in the initalization code take priority over those which you have updated in your PLuG settings.\nAll of these properties have to be passed as parameters while initializing the PLuG widget using plugSDK.init(). For details, refer to the PLuG SDK methods documentation.\nCustomizationDescriptioncustom_launcher_selectorCustomize the widget launcher to best fit your website or app.widget_alignmentAlign the widget to be placed either on the left or right side, relative to the launcher.enable_default_launcherShow/hide the default PLuG Widget launcher.themeSet the theme of the PLuG Widget.\nCode sandbox\n\nProperties\nPLuG launcher\nCustomize the widget launcher to best fit your website or app; or show or hide the default PLuG widget launcher.\nTo customize your PLuG launcher styles, specify the CSS selector in the custom_launcher_selector property. This CSS selector is the reference based on which your PLuG widget opens. This property accepts a string value. The selector can also be configured through the plug settings on app.devrev.ai.\n1 custom_launcher_selector?: '#my-plug-widget'\nUse the enable_default_launcher property only if you are not using the custom launcher selector.\n1 enable_default_launcher?: boolean;\nThe default value is true.\nWidget alignment\nAlign the widget to be placed on the left or right of the launcher.\nThe widget can be set to open to the left or to the right of the custom launcher.\n1 widget_alignment?: 'left' | 'right';\nThe default value is right.\nSpacing\nAdjust spacing of the PLuG widget.\nTwo properties are available to apply spacing.\n\n\nThe bottom property determines the padding from the bottom of the launcher.\nThe default value is 10px.\n\n\nThe side property determines the spacing of the widget from the launcher icon.\nThe default value is 0px.\n\n\n1 spacing?:{2     bottom?: '10px',3     side?:'10px',4 }\n\nLight/dark theme\nSet the theme of the PLuG widget.\n1 theme?: 'dark' | 'light';\nThe default value is light.\n"
    },
    {
        "id": "ART-845",
        "dataset_source": "devrev-dev0",
        "title": "Methods",
        "content": "\nOur PLUG widget SDK is a powerful tool designed to further enhance our widget on your website or application. With our SDK, you can seamlessly integrate our feature-rich widget by empowering you to create a dynamic and personalized user experience. Let's get started.\nMethodDescriptionplugSDK.init()Initialize the PLuG widget.plugSDK.shutdown()End the user session which is currently initialized in PLuG widgetplugSDK.toggleWidget()Open/close the widget.plugSDK.onEvent()Perform specific actions based on the payload type received from the PLuG widget.\n\nCalling the init() method initializes the PLuG widget on your website. Initializing the PLuG widget is necessary for you to perform any other actions on the PLuG widget SDK.\n1 useEffect(() => {2     window.plugSDK.init({3       app_id: <your_unique_app_id>,4     });5   }, []);\nWhen React is using Strict mode, you might get a warning message from window.plugSDK.init() being called multiple times. These errors won't impact the installation and functioning of the widget.\n\nThe shutdown() method is helpful when you want to end the user session which is currently initialized in the PLuG widget. You can use this method to clear your users' conversations and tickets when they log out of your application.\n1 await window.plugSDK.shutdown();\nAfter calling the shutdown() method, you can call the init() method to reinitialize PLuG widget on your website if you wish to showcase the PLuG widget again in the logged out version of your application.\nOnce the shutdown() method is called, all the other functionality in the widget such as session recording or Nudges is also be stopped. You need to reinitialize the widget again to have these features active.\n\n\nTo control whether the PLuG widget launcher screen is open, you can use the togglewidget() method with a boolean value. Your code needs to listen to the event ON_PLUG_WIDGET_READY to call this method. If the widget isn't ready then this method won\u2019t make any action.\n1 window.plugSDK.toggleWidget(true);\n\nTake actions from events\nThis method can be used to listen to events coming from the PLuG widget. The following are the different PAYLOAD_TYPES.\nEventMeaningON_PLUG_WIDGET_CLOSEDThe PLuG widget is closed.ON_PLUG_WIDGET_OPENEDThe PLuG widget is opened.ON_PLUG_WIDGET_READYThe PLuG widget is ready.ON_PLUG_WIDGET_UNREAD_COUNT_CHANGEThe user receives a new message to their PLuG. You can also listen to the number of unread messages and display that to your user.\n1 useEffect(() => {2   window.plugSDK.onEvent((payload) => {3     if (payload.type === PAYLOAD_TYPE) {4       //Your logic goes here5     }6   });7 }, []);\n\nLooking for something more? Reach out to us through our own PLuG widget in the bottom right of this screen and we would be happy to assist you."
    },
    {
        "id": "ART-846",
        "dataset_source": "devrev-dev0",
        "title": "Changelog",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nChangelog.\n\nMar 01 to Mar 29, 2024.\n\nFeb 10 to Feb 29, 2024.\n\nJan 09, 2023 to Feb 09, 2024.\n\nDec 08, 2023 to Jan 08, 2024.\n\nNov 10 to Dec 07, 2023.\n\nOct 13 to Nov 09, 2023.\n\nSep 15 to Oct 12, 2023.\n\nAug 17 to Sep 14, 2023.\n\nJul 20 to Aug 16, 2023.\n\nJul 06 to Jul 19, 2023.\n\nJun 20 to Jul 05, 2023.\n\nJun 05 to Jun 19, 2023.\n\nMay 22 to Jun 05, 2023.\n\nApr 22 to May 22, 2023.\n\nPrevious SDK Next Mar 01 to Mar 29, 2024\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-856",
        "dataset_source": "devrev-dev0",
        "title": "Getting started with webhooks",
        "content": "\nWebhooks allow you to build custom workflows in response to events on the DevRev platform.\nA webhook can be thought of as a 'reverse API' that's driven by events rather than requests. While APIs are used to pull data from the system, webhooks are a mechanism for the system to push data to a pre-configured endpoint.\nWebhooks allow you to receive notifications based on events without having to explicitly make a request.\nWebhook workflow\nYou must first set up an HTTP server that listens on a publicly accessible endpoint.\nWhen ready, you must register the endpoint\u2019s URL with DevRev by creating a webhook object that is\nassociated with your Dev org. After successful registration and verification of the endpoint,\nDevRev issues HTTP requests (that is, invoke the endpoint) for all events that match the event types\nthat the webhook is registered for. Your HTTP server receives an event\u2019s information,\nverify it using the event\u2019s provided metadata, and return a response indicating successful reception.\nThe types of events that can be received through webhooks are object mutation events (create, update, delete).\nEvents are delivered concurrently in a semi-ordered (but not guaranteed) manner,\nwhere object timestamps and versions enable you to determine the order of events for a particular object.\n\nWebhook event handling\nAPI Reference: Webhook Event\nAll events are delivered to the same registered endpoint, and there is a single request schema to encompass all events that contains the following fields:\n1 webhook_id: Identifies the webhook that the event is being delivered for.2 timestamp: The timestamp for the event.3 type: The event type. This is always followed by a field of the type\u2019s name that contains the event\u2019s data.\nEvent POST from DevRev to your endpoint\nEvent POST [json]\n1 POST your-webhook-endpoint-url2 X-DevRev-Signature: z1BY0e8JYzEGfxZ8e4k8agCdWQyTr2An3 4 {5 \t\"id\": \"don:integration:dvrv-us-1:devo/1H79gci4u/webhook/123:event/abcdef\",6 \t\"webhook_id\": \"don:integration:dvrv-us-1:devo/1H79gci4u/webhook/123\",7 \t\"timestamp\": \"2022-08-01T12:00:00.123456789Z\",8 \t\"type\": \"work_created\",9 \t\"work_created\": {...}10 }\nSupported events include the standard create/update/delete operations. When providing objects in webhook payloads, the schema for the objects is the same as those from the OpenAPI specification, which enables interoperability between REST and Webhook events APIs.\nMultiple events may be invoked concurrently for the same webhook endpoint.\nIt's strongly recommended that the webhook endpoint respond immediately to webhook invocations such that any non-trivial processing is done asynchronously. If a response isn\u2019t returned within 3 seconds, the invocation will be aborted and retried at a later time.\nSteps to set up and receive webhooks\nLet us use an example to walk through how webhooks can be set up.\nYou are building a work distribution system, and would like to be notified anytime a new work item\nis created or deleted on DevRev.\nYou can start receiving event notifications using the following steps:\n\n\nSet up a secure HTTP server and expose a publicly accessible endpoint, which serves as the webhook invocation target.\nInsert your endpoint where the following is mentioned: your-webhook-endpoint-url\n\n\nIdentify the events you want to monitor and the event payloads to parse.\nPlease look up the supported events and event payloads in our API Methods section.\nA general guideline here is to only subscribe to event types which you require in order\nto avoid overwhelming your HTTP server.\nIn the above example, you may be interested in work_created and work_deleted\n\n\nRegister webhook endpoint\nBefore webhook events can be processed, you must inform DevRev of the URL where the events should be\ndelivered, along with the specific event types that you are interested in.\nAs a result of this registration, DevRev passes back a secret that is used to\nverify requests. This secret is never provided when invoking a webhook, only when you call into DevRev\n(using TLS), however the webhook request contains a derivative of the secret that you will use to verify\nDevRev as the originator.\nAPI Reference: Create Webhook\nYou will invoke DevRev webhook create with the following fields for our example:\n\n\nWebhook create request [bash]\n1 curl  --request POST 'https://api.devrev.ai/webhooks.create' --header \"Authorization:token\"2       --header 'Content-Type: application/json' --data-raw3       '{4          \"event_types\": [\"work_created\", \"work_deleted\"],5          \"url\": \"your-webhook-endpoint-url\"6       }'\nThe following response is sent by DevRev\nWebhook create response [json]\n1 201 Created2 3 {4    \"webhook\": {5 \t   \"id\": \"don:integration:dvrv-us-1:devo/123:webhook/234\",6  \t   \"event_types\": [\"work_created\", \"work_deleted\"],7  \t   \"url\": \"your-webhook-endpoint-url\"8  \t   \"secret\": secret-string,9  \t   \"status\": \"unverified\"10    }11 }\nAfter creation, DevRev sends a verify request to verify the endpoint is reachable and was intentionally\ncreated by the owner (that is, not a malicious client using a URL that they don\u2019t own).\nTo perform a successful verification, your endpoint must echo the provided challenge within 3 mins of the Create Request:\nVerify request [json]\n1 POST your-webhook-endpoint-url2 X-DevRev-Signature: GfxZ8e4k8agCdWQyTr2z1BY0e8JYzEAn3 {4    \"id\": \"don:integration:dvrv-us-1:devo/1H79gci4u:webhook/123:event/abcdef\",5    \"webhook_id\": \"don:integration:dvrv-us-1:devo/1H79gci4u:webhook/123\",6    \"timestamp\": \"2022-08-01T12:00:00.123456789Z\",7    \"type\": \"verify\",8    \"verify\": {9  \t\t\"challenge\": \"DlrVaK7zRyZWwbJhj5dZHDlrVaK7Jhj5dZZjH\"10    }11 }\nThe following response is expected from your endpoint\nEcho challenge [json]\n1 200 OK2 3 {4 \"challenge\": \"DlrVaK7zRyZWwbJhj5dZHDlrVaK7Jhj5dZZjH\"5 }\nYou are all set.\nOnce verified, the status of the webhook is updated to be active and DevRev begins to deliver\nthe subscribed events to the webhook endpoint.\nThe APIs for standard CRUDL behavior for webhooks are found in the API methods section.\nWebhook failure handling\nTo mitigate intermittent and/or transient failures, DevRev retries unacknowledged webhooks invocations. By default, three attempts are made: the first immediately, the second after a 30-second delay, and the third after a three-minute delay. If sustained failures are encountered, the webhook service marks the webhook endpoint to be in a degraded state and it\u2019ll fail any queued events without invocation attempts. When in this state, verify requests are restarted to determine when the endpoint becomes healthy again and eventually promoted back to the active state.\nWebhook security\nA header signature X-DevRev-Signature is always be provided, and is a hash-based message authentication code (HMAC) utilizing SHA256 consisting of the secret as the key and the raw request payload as the message. Any adversary that intercepts and modifies the request is unable to reproduce the proper signature, and therefore should be discarded by the webhook endpoint. Note that this method is still subject to replay attacks, such that an adversary could intercept the request and replay it at different points in time, however the timestamp should be used to validate the proximity of the request and be discarded if stale.\nThe webhook endpoint must handle duplicate deliveries of the same event."
    },
    {
        "id": "ART-859",
        "dataset_source": "devrev-dev0",
        "title": "Concepts",
        "content": "\nSnap-in platform\nA snap-in platform manages snap-in packages and installs snap-ins. It enables snap-ins to register, validate, and deploy functions, creating other DevRev objects, registering events/webhooks, and triggering actions enriched by context.\nSnap-in\nSnap-ins are collections of objects that extend DevRev's core platform value. These objects include automation, event sources, keyrings, custom types, vistas. With snap-ins, developers can develop at \"arms-length\" and without making any changes to DevRev's core platform.\nSnap-in developers interact with DevRev objects through APIs, get updates on DevRev objects through webhooks, and register an event source to subscribe to GitHub/Slack/any external events.\nSnap-in package\nA snap-in package is a collection of DevRev objects and their relationships that describe the functionality of the developed snap-in. It doesn't reference an object within the installer's dev org. It's a parent object collecting snap-in package versions.\nSnap-in version\nA snap-in version is the definition of a snap-in. It doesn't belong to any dev org. It's equivalent to a snap-in source code. When a snap-in version is installed, it requires certain inputs from the installer, such as a PAT for GitHub, registering a URL on Bitbucket or some configuration.\nThe snap-in developer can specify some input configurations that the installer can use to customize the snap-in.\nAutomation\nIn automation, the event source is linked to a function, so whenever an event occurs on that event source, the function is triggered and the event payload is passed along. All keyrings configured by the installer are included in the payload passed to the functions, along with developer-level tokens.\nConnection\nA connection uses a keyring object to provide authentication, access token refreshment, and secret storage (access token, refresh token, PAT, API key and more). Upon creating the connection, the platform automatically refreshes the OAuth access token whenever necessary. Objects can reference secrets to access external or DevRev-protected APIs. The platform may use a connection to automatically register the webhook URL with an external source. Automations may also use connections to pass secret values to corresponding functions.\nEvent source\nEvent sources collect events from webhooks, emails, and timer-based API calls. Events can also be manually published. DevRev supports the ingestion of webhooks from any source. Each event source is assigned to a dev org.\nFor example, if you want to collect webhook events from an organization's GitHub, create an event source which in turn gives us a URL to subscribe to on GitHub. Webhook events published to this URL are available from this event source.\nFunction\nThe framework for executing code provided by users is functions. Currently, Javascript/TypeScript can be taken as input from the user and deployed as a function.\nConnection values can be passed to a function at runtime, enabling it to execute API calls to DevRev and to external systems such as GitHub, Slack, Bitbucket, and Discord.\nGlobals\nSnap-ins can be configured to enable and disable features, based on custom inputs defined by the developer and provided by the installer.\nCommands\nA user can trigger commands on different surfaces based on some parameters. Once a command is executed, a function is triggered.\nA developer can develop commands to be included in a snap-in Version along with associated functions. These commands are installed when the snap-in is installed.\nAs part of the snap-in, commands have access to keyrings, global variables, and event sources.\nHooks\nHooks enable developers to invoke functions when various events in the lifecycle of a snap-in occur. Hooks can be used to perform various actions based on the event such as validating the snap-in inputs and keyrings when the configuration is updated, registering event-sources and webhooks in external platforms when snap-in is activated, or setting custom fields to be used by the snap-in.\nDetailed documentation on hooks can be found in the hooks reference.\nStates\nThe snap-in can have the following states:\n\nDRAFT: The snap-in installation is in progress and the event-sources, automations, and commands aren't created yet.\nACTIVATING: The snap-in is being activated, and the automations, commands, and snap-kit actions are paused. The snap-in can't be updated in this state.\nACTIVE: The snap-in is functioning, and the automations, commands, and snap-kit actions can be invoked.\nERROR: The snap-in isn't functioning, and the automations, commands, and snap-kit actions are paused. This state can be reached in case of any misconfiguration of the snap-in (such as invalid keyrings or inputs) or failure to activate the snap-in.\nDEACTIVATING: The snap-in is being deactivated, and the automations, commands, and snap-kit actions are paused. The snap-in can't be updated in this state.\nINACTIVE: The snap-in is paused by the user, and the automations, commands, and snap-kit actions are paused.\n\nACTIVATING and DEACTIVATING are transitory states and background processes and hooks move the snap-in from these states to a stable state.\nThe following diagram illustrates the transitions between different states.\n\nSnap-kit\nSnap-kit defines UI customization components. It's defined in the snap-in package and used to display developer-defined components. A snap-kit component can display data to a user or collect input for triggering a function.\nMarketplace\nThe marketplace is a portal where DevRev and external developers can publish snap-ins and other extensions.\nSimilarly, developers can use private marketplaces to publish their own custom snap-ins that are scoped to their dev org.\nPersonas\nPublisher\nThe developer's dev org is responsible for publishing the snap-in to the marketplace. The publisher is responsible for supporting snap-in users.\nInstaller\nInstallers install the snap-in, provide configuration inputs, set up the necessary keyrings, and configure webhooks for external apps."
    },
    {
        "id": "ART-860",
        "dataset_source": "devrev-dev0",
        "title": "Getting started (0)",
        "content": "\nPrerequisites\n\nInstall DevRev CLI\nInstall jq\nCreate a dev org\n\nLog in to DevRev for authentication\nTo authenticate, run the following command:\n1 devrev profiles authenticate -o <dev-org-slug> -u <youremail@yourdomain.com>\nInitializing a snap-in template\nTo initialize a snap-in template, run the following command:\n1 devrev snap_in_version init\nThe command creates a folder devrev-snaps-typescript-template. This contains a manifest.yaml file and a code folder.\n\nmanifest file defines the resources to be created on the DevRev platform. For detailed information on the various components of a manifest file, see Snap-in Manifest.\ncode folder consists of sample starter code for snap-ins. For detailed information on how to get started, see starter example repo.\n\nCreating a snap-in package\nTo create a snap-in package, run the following command:\n1 devrev snap_in_package create-one --slug my-first-snap-in | jq .\n\nThe slug is globally unique. If the slug provided is already taken, a conflict error occurs. This can be resolved by provided a different slug.\nOn successful creation, the CLI automatically stores the package ID in its context corresponding to the slug. For more information, refer to the Snap-in Context.\n\nCreating a snap-in version\nTo create a snap-in version, run the following command:\n1 devrev snap_in_version create-one --path ./devrev-snaps-typescript-template | jq .\nOutput:\n1 {2     \"id\":\"don:integration:dvrv-us-1:devo/fOFb0IdZ:snap_in_package/972696ef-32cf-4ec0-81da-5a4a7804fa91:snap_in_version/52c058a9-7d68-4538-b70e-46efc7dfcd0d\",3     ...... ,4     \"state\":\"draft\"5 }\nThe CLI automatically stores the version ID in its context. Refer to the Snap-in Context section for more information.\nIn a package that's not published to the Marketplace, you can have only one snap-in version. If you have an existing snap-in version in the package, the following error message is shown:\n1 {2   \"debug_message\": \"can't create a new snap_in_version under snap_in_package <ID> because there is already a non-published snap_in_version under it\",3   \"message\": \"Bad Request\",4   \"type\": \"bad_request\"5 }\nTo list snap-in versions under the package, run the following command:\n1 devrev snap_in_version list\nTo delete the snap-in version, run the following command:\n1 devrev snap_in_version delete-one\nInstalling a snap-in from a snap-in version\nTo create a snap-in from a snap-in version, run the following command:\nTo install the snap-in, you must be a member of the\u00a0Admins\u00a0group in the dev org.\n\nThe CLI automatically stores the snap-in ID in its context. Refer to the Snap-in Context section for more information.\nConfiguring the snap-in\nThe snap-in is installed in draft state. It may require some configuration before it can be deployed.\nYou can access snap-in configuration by using the URL generated by the draft command, or by navigating to the snap-ins page in the DevRev app.\nFollow the configuration steps for the snap-in to setup keyrings and inputs if any.\nPrivate keyrings from other creators aren't listed.\nTo make a connection available to other members in your organisation, create it with the visible to dev org option set to true while creating the connection in the DevRev app.\nDeploying the snap-in\nOnce you have provided the required configuration, the Deploy snap-in button is enabled on the UI. Click on it to deploy the snap-in.\nThat's it, the snap-in should now be active and ready to use.\nDeleting the snap-in\nThe snap-in can be deleted from the UI or run the following command:\n1 devrev snap_in delete-one [snap-in id]\nIf any deactivate hook is specified, it's invoked with is_deletion=true.\nUpgrading the snap-in\nOnce you deploy and test your snap-in, you may want to make changes to it. The changes can be done using a single command.\n1 devrev snap_in upgrade --path ./\nThe above expects the manifest file to be present in the current directory by the name manifest.yaml and the code to be present in the code directory.\nThe complete documentation for the upgrade command can be found here."
    },
    {
        "id": "ART-861",
        "dataset_source": "devrev-dev0",
        "title": "Code samples",
        "content": "SOC2 compliantEnterprise grade security to protect customer data"
    },
    {
        "id": "ART-862",
        "dataset_source": "devrev-dev0",
        "title": "Development best practices",
        "content": "\nAct on specific webhook conditions\nWhen writing an automation that listens to a webhook event, ensure you check for the specific conditions you want to act on. For example, if you are writing an automation that checks if the conversation state is moved to archived, you should check for the conversation_updated webhook event and then check if the conversation_state is archived. In this case, the automation only triggers when the conversation state changes to archived, not in any other state.\nDebugging is easier when the conditions are specified and checked early in the code.\nUse the DevRev SDK\nThe DevRev SDK is a wrapper around the DevRev APIs, which makes them easier to use. It provides additional functionality such as retrying failed API calls. It's recommended to use the SDK instead of directly calling the APIs.\nCheck out our DevRev SDK for more information.\nThink from a snap-in installer perspective\nAvoid developing snap-ins that depend on other snap-ins. Currently, the platform doesn't allow bundling of snap-ins. Requiring users to install multiple snap-ins that depend on each other results in installation complexities.\nMost snap-in installers aren't developers, so consider the following tips when designing the configuration page:\n\nAvoid technical jargon for config names and descriptions.\nThe descriptions should be adequate to guide the installer if there are no configurations. For example, some slash command snap-ins.\nDon't require users to understand technical formats such as JSON or XML.\nPrefer sensible defaults over obscure advanced options.\nIn the config form, place the most important parameters at the top and use optional parameters when they aren't needed.\nUnless necessary for clarity, keep config names and descriptions concise.\nName configs in a way that's familiar to you.\n\nCODING TIPS\nIf you are using async functions, remember to use await while calling them in your snap-in function code.\nIf the promise returned by the Run function is rejected, the snap-in will retry itself.\n"
    },
    {
        "id": "ART-863",
        "dataset_source": "devrev-dev0",
        "title": "Debugging",
        "content": "\nRetrieving logs for snap-in\nUsing DevRev CLI, you can retrieve build logs and runtime logs for your snap-ins.\nHow to retrieve logs using DevRev CLI\n\n\nTo retrieve logs for all snap-in packages/versions in your dev org after a particular timestamp, run the following command:\n\n1 devrev snap_in_package logs --after \"2023-06-06T00:00:00Z\" | jq\n\nTo retrieve logs between two timestamps and use a cursor for pagination, run the following command:\n\n1 devrev snap_in_package logs --after \"2023-06-06T10:24:17Z\" --before \"2023-06-07T00:00:00Z\" --cursor cursor_from_previous_page | jq | code -\nBy default, not specifying --before lists all logs until the current timestamp in descending order (latest logs at the top).\n\nTo retrieve logs for a specific snap-in package, run the following command:\n\n1 devrev snap_in_package logs --after \"2023-06-06T00:00:00Z\" --filters '{\"snap_in_package\": {\"values\": [\"don:integration:dvrv-us-1:devo/abcd:snap_in_package/abcdef\"]}}' | jq | code -\n\nTo retrieve logs containing the text \"failed\" but exclude logs with level \"info\", run the following command:\n\n1 devrev snap_in_package logs --after \"2023-06-06T00:00:00Z\" --query \"failed\" --filters '{\"level\": {\"values\": [\"info\"], \"exclude\": true}}' | jq | code -\nThe JSON response fields are filterable. For example, to view snap-in version execution logs only, add the filter on process field to match function and run the following command:\n1 devrev snap_in_package logs --after \"2023-06-06T00:00:00Z\" --filters '{\"snap_in_version\": {\"values\": [\"don:integration:dvrv-us-1:devo/abcd:snap_in_package/abcdef:snap_in_version/abcdef\"]}, \"process\":{\"values\": [\"function\"]}}' | jq | code -\nSimilarly, you can filter only for build logs by filtering for process = build.\nAfter creating the appropriate filters, to view the logs conveniently, run the following command:\nYou can customize the part before jq according to your filters.\n1 devrev snap_in_package logs --after \"2023-06-06T00:00:00Z\" --filters '{}' | jq -r '[\"total\", .log_summary.total.value, \"next_cursor\", .next_cursor], (.logs[] | [.level,.timestamp,.msg]) | @tsv' | code -\nTroubleshooting\n\n1 devrev snap_in draft2 3 POST 'https://api.devrev.ai/internal/snap-ins.draft.create' failed with 403 Forbidden, {\"debug_message\":\"Unauthorized You are not authorized to perform this operation. Ref: bc7b7f58-148c-479c-b0a6-b4cbe43dd8a6\",\"message\":\"Forbidden\",\"type\":\"forbidden\"}\nYou are not an admin of the dev org where you want to create the snap-in."
    },
    {
        "id": "ART-864",
        "dataset_source": "devrev-dev0",
        "title": "Quotas and limits",
        "content": "The following table lists the restriction on number of snap-in packages and functions:ItemQuotaSnap-in packages per dev org10Unpublished snap-in versions per snap-in package1Functions per snap-in version5Functions per dev org15Snap-ins per snap-in version in an org1In order to increase the limits, contact DevRev Support by clicking PLuG icon in your dev org or write to marketplace@devrev.ai.For automation, the event payload size shouldn't exceed 256KB. If the event payload exceeds 256 KB, automation isn't executed."
    },
    {
        "id": "ART-866",
        "dataset_source": "devrev-dev0",
        "title": "Commands",
        "content": "Using commands, the end user can interact with the snap-in through any defined surface. Under the commands section of the snap-in manifest, commands are defined. For example, you can define a command called close that moves an issue and its children to the completed state as follows:SurfaceObject typesRemarksdiscussionsissueEnable command on the Discussions tab of issuesticketEnable command on the Discussions tab of ticketsconversationEnable command on the Discussions tab of conversationspartEnable command on the Discussions tab of partsworkspacesEnable command on the Discussions tab of workspacesrev_userEnable command on the Discussions tab of rev_usersaccountEnable command on the Discussions tab of accountssnap-inEnable command on the Discussions tab of snap_insopportunityEnable command on the Discussions tab of opportunity"
    },
    {
        "id": "ART-867",
        "dataset_source": "devrev-dev0",
        "title": "Event sources",
        "content": "\nSupported event source types and their event types\nEvent source codeEvent source nameEvent type codeRemarksDocumentation URLdevrev-webhookDevRev webhookAll supported DevRev webhook event typesDevRev webhook events such as work_created and conversation_updatedDevRev Webhookflow-eventsFlow EventsConfigurableEvent sources schedule and publish events directly from a snap-in.Scheduled eventsflow-custom-webhookFlow Custom webhookConfigurableA generic webhook with a URL and configurable authentication logic.Generic event sourcestimer-eventsTimer Eventstimer.tickSends a timer.tick event based on a configured schedule.Timer-based event sourcesemail-forwardEmail Forwardemail.receiveUsed for receiving emails forwarded from an email inbox/mailing list.Email-based event source\nEvent source instructions\nYou can provide custom instructions for each event source. These instructions are shown to the user when installing the snap-in. The instructions are written in markdown and can be provided in the setup_instructions field of the event source.\nTo provide dynamic instructions, you can access some metadata from event source objects. The following fields are accessible:\n\n{{source.name}}: Name of the event source\n{{source.trigger_url}}: Webhook URL\n{{source.config.<field_name>}}: Fields from within the event source configuration\n\nFor example:\n1 event-sources:2   - name: argocd-source3     description: Events triggered by ArgoCD workflows4     display_name: ArgoCD5     type: flow-custom-webhook6     setup_instructions: |7       ## ArgoCD webhook8       You webhook URL is `{{source.trigger_url}}`. You can use it to configure ArgoCD webhook.9       The documentation is available over [here](https://argo-cd.readthedocs.io/en/stable/operator-manual/notifications/services/webhook/).10     config:11       policy: |12         package rego13         output = {\"event\": event, \"event_key\": event_key} {14           event := input.request.body15           event_key := \"argocd.workflow\"16         } else = {\"response\": response } {17           response := {18           \"status_code\": 40019           }20         }\nDevRev Webhook\nThe devrev-webhook event source can be used to listen for events occuring on DevRev. These includes events like work_created and conversation_updated.\nThe payload of the events is defined by the Webhooks Event Schema.\nWebhook Filters\nTo limit the events being sent to a webhook, you can also specify a jq query as a filter. This filter is applied on the webhook before the event is dispatched. If no filter is specified, then all events are sent.\nThe jq query can reference the event payload as . and the user creating the webhook as $user. The $user object only contains one string field: the id of the webhook creator.\nThe filter must return a boolean value. If the filter returns true, the event is dispatched to the webhook. If the filter returns false, the event is not dispatched to the webhook.\nFor example, to create an event source which listens for issue creation and comments on issues, you can define the event source as follows:\n1 event-sources:2   - name: devrev-webhook3     description: Events coming from DevRev for issues4     display_name: DevRev webhook5     type: devrev-webhook6     config:7       event_types:8         - work_created9         - timeline_entry_created10       filter:11         jq_query: |12           if .type == \"work_created\" then13             if (.work_created.work.type == \"issue\") then true14             else false15             end16           elif .type == \"timeline_entry_created\" then17             if (.timeline_entry_created.entry.type == \"timeline_comment\" and .timeline_entry_created.entry.object_type == \"issue\") then true18             else false19             end20           else false21           end\nScheduled events\nflow-events are an event source that snap-ins can use to publish or schedule events directly. This event source can then be used to trigger another automation. This capability makes it ideal for building snap-ins that need to act later. For example, sending reminders to issues still in the Triage stage.\nYou create an event source of type flow-events, and from your snap-in, you call the DevRev API to schedule an event for this event source. The following example illustrates how this works:\nmanifest.yaml\n1 version: \"1\"2 3 service_account:4   display_name: Test bot5 6 event-sources:7   - name: devrev-webhook8     description: Event coming from DevRev9     display_name: DevRev10     type: devrev-webhook11     config:12       event_types:13         - work_created14   - name: scheduled-events15     description: Events scheduled from Snap-ins16     display_name: scheduled-events17     type: flow-events18 19 functions:20  - name: function_121    description: Function 122  - name: function_223    description: Function 224 25 automations:26   - name: Schedule an event 30 seconds after work is created27     source: devrev-webhook28     event_types:29       - work_created30     function: function_131   - name: Comment hello on scheduled work item32     source: scheduled-events33     event_types:34       - custom:work-created-scheduled-event35     function: function_2\nIn this example, the first automation schedules an event with a delay of 30 seconds for the event source scheduled-events.\nThe second automation then binds function_2 to this event source. So the scheduled event executes function_2 30 seconds after the work is created.\nIn function_1, you can publish the event as follows:\n1 const url = \"https://api.devrev.ai/event-sources.schedule\";2   const work = event.payload.work_created.work;3   const delay_secs = 30;4   const event_payload = {5     \"object_id\": work.id,6     \"name\" : work.created_by.full_name,7     \"delay\": delay_secs,8   }9   const payload_bytes = Buffer.from(JSON.stringify(event_payload)).toString('base64');10   const publish_at = new Date(Date.now() + 1000 * delay_secs).toISOString();11 12   const req = {13     \"id\": event.input_data.event_sources[\"scheduled-events\"],14     \"payload\": payload_bytes,15     \"event_type\": \"work-created-scheduled-event\",16     \"publish_at\": publish_at,17     \"event_key\": `delayed-run-${work.id}`18   }19   const response = await axios.post(url, req, {20     headers: {21       'Content-Type': 'application/json',22       authorization: event.context.secrets.service_account_token23     }24   });25   console.log('response: ', response.data);\nIn function_2, you can use the payload of the scheduled event as follows:\n1 const object_id = event.payload.object_id;2   const name = event.payload.name;3   const delay = event.payload.delay;4   console.log(`Received payload with object_id: ${object_id}, name: ${name}, delay: ${delay}`);\n\nTo cancel scheduled events, you can utilize the /event-sources.unschedule API. For API details, see event-sources-delete-scheduled-event.\nGeneric event sources\nYou can create a generic event source if you need an event source not supported by DevRev. A generic event source includes a webhook URL and developer-provided code on how to validate the events coming on the URL.\nFor example, let's say you want to connect to a source that can publish events to a webhook URL, and it hashes the entire request payload with the shared secret and adds an HTTP header X-Signature-256 with value as the hash. Then, you can provide the custom code (currently in rego) to validate the payload with the same algorithm. You would also calculate the hash and verify with the value present in the header to avoid someone else tampering in between.\nTo create a generic event source in your manifest, you create an event source with the type flow-custom-webhook and config containing a key policy which contains the rego code.\nThe input passed to the policy is the following JSON:\n1 {2       \"parameters\": \"<a JSON which contains the parameters you have specified in your event source's `config.parameters` field>\",3       \"request\": {4         \"method\": \"<HTTP method of the request (GET, POST.)>\",5         \"query\": \"<key-value map of the query parameters in the request URL. The keys are case sensitive. This is of type map[string][]string.6            for example, if the query string is `a=1&b=2&b=3&c[]=4&c[]=5`, then the value of this field is `{\"a\": [\"1\"], \"b\": [\"2\", \"3\"], \"c[]\": [\"4\", \"5\"]}`>\",7         \"query_raw\": \"<The raw query string without the '?'.>\",8         \"headers\": \"<key-value (string) map of the request headers. Duplicate values for same `key` are overridden.9            Header keys are in Canonical-Header-Key format. For example, Content-Type, Accept-Encoding, and so on.>\",10         \"body\": \"<JSON body of the HTTP request received on the webhook. If Content-Type is application/x-www-form-urlencoded, then the body is parsed in the same way as the `query` field.\",11         \"body_raw\": \"<Raw body (bytes) of the HTTP request as a base64 string.>\"12       }13     }\nThe policy must return an object output in the following format:\n1 {2      \"event\": \"[optional]3                A JSON representing the event to emit.4                This is `input.request.body` in most cases.5                If it is not present (or null), then the event is not published.\",6      \"event_key\": \"[required and non-empty if `event` is non-null]7                   `string` to represent the type of the event.8                   For example, file-created, pipeline-failed and so on.9                   This `event_key` is prefixed with 'custom:' and published to DevRev.10                   So, Snap-ins that want to use this event should use the `event_type` as `custom:event-key` in their automations.\",11      \"response\": `[optional]12           A JSON containing following fields:13           {14               \"status_code\": \"[optional]15                              `integer` HTTP status code to return to the caller.16                              Only valid HTTP codes allowed.17                              Defaults to 200.\",18               \"body\": \"[optional]19                        `string` or `JSON` for HTTP body to return to the client.\",20               \"headers\": \"[optional]21                           `JSON` with each key and value of type string to be returned in the HTTP response.\"22           }`23     }\nExample of a generic event source. This event source authenticates the incoming request by checking the header X-Signature-256.\n1 event-sources:2     - name: custom-webhook3       description: Events sent on a custom webhook connected to an external system4       display_name: Custom External Webhook5       type: flow-custom-webhook6       setup_instructions: |7         ## Custom webhook8         - You webhook URL is `{{source.trigger_url}}`.9         - Your secret is `{{source.config.parameters.secret}}`.10         - The webhook is triggered when you send a POST request to the URL.11         - The request must have a header `X-Signature-256` with value as `HMAC-SHA256` of the request body using the secret as the key.12       config:13         policy: |14             package rego15             payload_as_string := base64.decode(input.request.body_raw) ## body_raw is a base64 encoded string16             expected_signature := crypto.hmac.sha256(payload_as_string, input.parameters.secret)17             output = {\"event\": event, \"event_key\": event_key} {18               input.request.method == \"POST\"19               expected_signature == input.request.headers[\"X-Signature-256\"]20               event := input.request.body21               event_key := \"my-event\"22             } else = {\"response\": response} {23               response := {24                 \"status_code\": 401,25                 \"body\": \"Unauthenticated\"26               }27             }28         parameters:29           secret: \"EnterYourRandomSecretHere\"\nThe event_key output of the policy can be used to define an automation on the event custom:event_key. For example:\n1 automations:2   - name: Run on custom webhook3     source: custom-webhook4     event_types:5       - \"custom:my-event\"6     function: function_1\nHere, you are creating an event source with the name custom-webhook, and the policy validates that there should be a header X-Signature-256 with a value of HMAC-SHA256 of raw request body.\nA sample curl command to trigger this event source manually is:\n1 curl -i -H 'X-Signature-256: f1809d5135917b311644058cf1994c5ff4898ad20dbf6e282c1433e6be4e2fe1' \\2 -d '{\"hello\":\"world\"}' \\3 https://api.devrev.ai/hidden/dev-orgs/DEV-123/event-source-webhooks/custom/d43fc297-03d7-4cbd-bdf9-044847788306\nTimer-based event sources\nTimer-based event sources can be created to send events based on intervals and cron schedules. In the following example, you have two event sources, one emits events daily at 12:00am, the other every hour (3600 seconds). In the event payload, you see the JSON field metadata you specified in the event source configuration.\n1 - name: daily-timer-source2       description: Timer event source based on Cron expression3       display_name: Timer source4       type: timer-events5       config:6         cron: \"0 0 * * *\"7         metadata:8           event_key: daily_events9 10     - name: hourly-events11       description: Timer event source based on interval seconds12       display_name: Timer source13       type: timer-events14       config:15         interval_seconds: 360016         metadata:17           event_key: hourly_events\nThe automation event type for timer events is timer.tick. To initiate an automation based on timer events, use the following syntax in manifest.yaml:\n1 automations:2   - name: <name-of-automation>3     source: <timer-event-name>4     event_types:5       - timer.tick6     function: <func-name>\nThe payload contains the metadata fields you specified in the event source configuration. For example, {\"event_key\": \"daily_events\"} for the daily-timer-source.\nEmail-based event sources\nYou can create an email-based event source that can be used to write automations on top of emails. For this, a sample of the YAML is shown below:\n1 - name: email-event-source2     description: Event source which emits an event when an email is received.3     display_name: Email events listener4     type:  email-forward5     config:6       allowlist:7         - \"test@company.com\"8         - \"mycompanydomain\"\nThe event type of the events emitted by this event source is email.receive.\nWhen a snap-in using such an event source is deployed, the instructions show a unique email address. You have to set up forwarding in your original\nemail inbox or Google Group to this email address. In the example above, if the forwarding address is v1.abc.xyz@hooks.devrev.ai, you should set up email\nforwarding from test@company.com to v1.abc.xyz@hooks.devrev.ai.\nOnly emails forwarded from the allowlist of emails/domains are emitted as events. Hence, this event source should be used for email forwarding only, not as a direct mailbox to which anyone can send their emails. Emails received (either directly or by forwarding) from senders who aren't in the allowlist are dropped. There are a few exceptions to this like Google's forwarding confirmation emails.\nThe allowlist can either contain an email address or an entire domain. Strict matching is done for domains, meaning that subdomains are not included.\nThe email protocol regarding forwarding is not very well defined. We've tested forwarding from common sources like Gmail, Google Groups, and Outlook Inbox. However, if you're having issues with email forwarding on other providers, feel free to contact us.\nPayload\nBelow is a sample payload of the events produced by the email event source:\n1 {2     \"emailBody\": \"test reply\\r\\n\\r\\nOn Thu, Sep 7, 2023 at 3:23\u202fPM Test User <test@example.com> wrote:\\r\\n\\r\\n> test email body\\r\\n>\\r\\n\",3     \"from\": [4         \"test@example.com\"5     ],6     \"to\": [7         \"test@company.com\"8     ],9     \"cc\": [],10     \"bcc\": [],11     \"htmlBody\": \"<div dir=\\\"ltr\\\"><div>test reply</div><div><br></div><div class=\\\"gmail_quote\\\"><div dir=\\\"ltr\\\" class=\\\"gmail_attr\\\">On Thu, Sep 7, 2023 at 3:23\u202fPM Test User &lt;<a href=\\\"mailto:test@example.com\\\">test@example.com</a>&gt; wrote:<br></div><blockquote class=\\\"gmail_quote\\\" style=\\\"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex\\\"><div dir=\\\"ltr\\\">test email body<br></div>\\r\\n</blockquote></div></div>\\r\\n\",12     \"inReplyToId\": {13         \"stringValues\": [14             \"jksdnfjnsflkdsfkjaabcdefghiuK8BA@mail.gmail.com\"15         ]16     },17     \"messageId\": \"ABCdEfghijklmnopqrstuvwZHL+AB_XYZg@mail.gmail.com\",18     \"rawBodyArtifactId\": \"don:core:dvrv-us-1:devo/802:artifact/296\",19     \"referenceIds\": {20         \"stringValues\": [21             \"abcdabc123123123@mail.gmail.com\"22         ]23     },24     \"artifactIds\": [25       \"don:core:dvrv-us-1:devo/802:artifact/1\"26     ],27     \"replyTo\": {28         \"stringValues\": [29             \"test+123@example.com\"30         ]31     },32     \"sentOn\": \"2023-09-07T09:56:37Z\",33     \"subject\": \"Re: test email title\"34 }\nBelow is a brief description of the fields:\n\nemailBody: The plain text body of the email.\nhtmlBody: The HTML body of the email.\nfrom: List of from email addresses of the email.\nto, cc, bcc: List of recipient email addresses.\ninReplyToId: Message ID of the email (if received mail is a reply to some other previous mail).\nmessageId: Message ID of the received email.\nrawBodyArtifactId: Artifact ID for the raw email (in MIME format) received on the event source. You can use the artifact APIs to download this email if you need to.\nartifactIds: Artifact IDs for attachments in the email.\nreplyTo: Reply-To header of the email.\nsentOn: Timestamp when email was sent (in UTC).\nsubject: Subject of the email.\n"
    },
    {
        "id": "ART-868",
        "dataset_source": "devrev-dev0",
        "title": "Functions",
        "content": "\nUsing functions, you can provide custom code and link it to your event sources, automations, or snap-kit actions. Functions are written in JavaScript and can be used to transform events, send notifications, or perform any other custom logic including network calls.\nIn order to create a snap-in version, functions must be defined as shown in the code samples. Functions are packaged and provided as an artifact at the time of snap-in version creation and then used to deploy functions to snap-in versions. An artifact may contain multiple function definitions. The artifact is a zip file containing the following files:\n1 /2 \u251c\u2500\u2500 src/3 \u251c \u251c\u2500\u2500 functions/ # Contains a folder each for the functions defined in the manifest. The folder name should match the function name in manifest.4 \u251c \u251c\u2500\u2500 functions/function-1/ # function-1 is a function defined in the manifest.5 \u251c \u251c\u2500\u2500 function-factory.ts # defines the functions to be imported. Each function to be used in the manifest should be included here. Refer to the example for the format.6 \u251c\u2500\u2500 dist/ # Contains the transpiled code for the functions. Autogenerated but should be included in the artifact.7 \u251c\u2500\u2500 package.json # Contains the dependencies for the functions.\nFunction manifest\nThe function manifest consists of the following fields:\n1 functions:2   - name: function_13     description: Function 1\n\nname: It is the function name that should match the corresponding function name in the folder.\ndescription: It describes the function.\n\nRefer to the function invocation for details about the exact payload of the function."
    },
    {
        "id": "ART-869",
        "dataset_source": "devrev-dev0",
        "title": "Inputs",
        "content": "SOC2 compliantEnterprise grade security to protect customer data"
    },
    {
        "id": "ART-871",
        "dataset_source": "devrev-dev0",
        "title": "Function invocation",
        "content": "1 type Context = {2     // ID of the dev org for which the function is being invoked.3     dev_oid: string;4     // ID of the automation/command/snap-kit Action/Event Source for which the function is being invoked.5     source_id: string;6     // ID of the snap-in as part of which the function is being invoked.7     snap_in_id: string;8     // ID of the snap-in Version as part of which the function is being invoked.9     snap_in_version_id: string;10     // This secrets map would contain some secrets which platform would provide to the snap-in.11     // `service_account_token`: This is the token of the service account which belongs to this snap-in. This can be used to make API calls to DevRev. 12     // `actor_session_token`: For commands, and snap-kits, where the user is performing some action, this is the token of the user who is performing the action.13     secrets: Record<string, string>;14 };15 16 type ExecutionMetadata = {17     // A unique id for the function invocation. Can be used to filter logs for a particular invocation.18     request_id: string;19     // Function name as defined in the manifest being invoked.20     function_name: string;21     // Type of event that triggered the function invocation as defined in manifest.22     event_type: string;23     // DevRev endpoint to which the function can make API calls.24     // Example : \"https://api.devrev.ai/\"25     devrev_endpoint: string;26 };27 28 type InputData = {29     // Map of organization inputs and their corresponding values stored in snap-in.30     // The values are passed as string and typing need to be handled by the function31     global_values: Record<string, string>;32     // Map of event sources and their corresponding ids stored in snap-in.33     // These could be used to schedule events on a schedule based event source.34     event_sources: Record<string, string>;35     // Map of secrets stored in the snap-ins including developer keyrings. The key is the secret name defined in manifest and value is the secret value.36     keyrings: Record<string, string>;37 };38 39 // Event sent to our app.40 type FunctionInput = {41     // Actual payload of the event.42     payload: Record<string, any>;43     // Context of the function invocation.44     context: Context;45     // Metadata of the function invocation.46     execution_metadata: ExecutionMetadata;47     input_data: InputData;48 };49 50 async function run(events: []FunctionInput): any;"
    },
    {
        "id": "ART-872",
        "dataset_source": "devrev-dev0",
        "title": "Snap-in manifest",
        "content": "\nThe following section is for version 2 of the manifest specification. For the previous version, see Manifest V1.\nThe snap-in manifest is what the developers write to define a snap-in. The manifest has the following sections:\nVersion\nThe version specifies the manifest version. The following documentation is for version 2 of the manifest. In the manifest, specify the following:\n\nKeyrings\nKeyrings are secret tokens used to make calls to external systems. They can be categorized either as organization scoped or user scoped. Keyrings are specified in the manifest with the following syntax:\n1 keyrings:2   organization:3     - name: <The name of the keyring that should be used for the snap-in.>4       description: <A description of the functions of this keyring.>5       display_name: <The name shown to the user.>6       types: <List of all keyring types that can be selected by the end-user.>7 8     - name: <The name of the keyring that should be used for the snap-in.>9       description: <A description of the functions of this keyring.>10       display_name: <The name shown to the user.>11       types: <List of all keyring types that can be selected by the end-user.>\nFor example:\n1 keyrings:2   organization:3     - name: my-secret-token4       description: The secret tokens stores the keys to the kingdom5       types:6         - snap_in_secret7       display_name: Your secret token\nKeyrings defined in the manifest can be provided in the snap-in configuration screens and are made available to the function. The keyring type is used to determine the type of the keyring and restricts selection on configuration screen to valid types.\nTo view the supported connection types, see Keyrings.\nDeveloper keyrings\nDeveloper keyrings are provided by the snap-in version developer. They're available across all installations and hidden from the installer. Only the secret string type can be used as developer keyrings.\n1 developer_keyrings:2   - name: <The name of the keyring that should be used for the snap-in.>3     description: <A description of the functions of this keyring.>4     display_name: <The name shown to the developer.>5 6   - name: <The name of the keyring that should be used for the snap-in.>7     description: <A description of the functions of this keyring.>8     display_name: <The name shown to the developer.>\nFor example:\n1 developer_keyrings:2   - name: mongodb3     description: Store usage statistics4     display_name: MongoDB PAT5 6   - name: discord7     description: Access additional discord's API8     display_name: Discord PAT9 \nSelect the developer connection while creating snap_in_version. The DevRev CLI automatically detects such keyrings in the manifest and asks for them:\n1 devrev snap_in_version create-one --manifest manifest.yaml2 Please provide mapping for the developer keyrings:3 Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u21904 ? mongodb:5   \u25b8 mongodb6     discord\nDeveloper keyrings can only be created in the UI. They're of the Snap-in Secret type.\nEvent sources\nEvent sources can be categorized as \"organization\" level and \"user\" level. Currently, only organization level event sources are supported. Event sources are specified in the manifest with the following syntax:\n1 event_sources:2       organization:3         - name: <The name of the event-source that should be used for the snap-in.>4           description: <A description of the functions of this event-source.>5           display_name: <The name shown to the user.>6           type: <An enum specifying the type of source to create.>7           setup_instructions: <Instructions shown to the end user as an option.>8           config:9       <An object containing event source configuration.>10 11         - name: <The name of the event-source that should be used for the snap-in.>12           description: <A description of the functions of this event-source.>13           display_name: <The name shown to the user.>14           type: <An enum specifying the type of source to create.>\nRefer to Event sources for a checklist of supported event sources and their corresponding event types.\nRefer to the webhook-event-request docs for a list of supported webhooks.\nFor example:\n1 event_sources:2   organization:3     - name: devrev-webhook4       description: Events coming from GitHub5       display_name: DevRev webhook6       type: devrev-webhook7       config:8         event_types:9           - work_created\nInputs\nGlobals are implemented using per-object schemas, which is a customization term to store custom schemas in line with the object. Each global's schema maps to a FieldDescriptor.\nGlobals are defined as:\n1 inputs:2   organization:3     - name: <The name of the input.>4       description: <A description of the functions of this input.>5       field_type: <The supported input types.>6       id_type: <If the field type is id, so what are the supported object types whose ids this input can store?>7       is_required: <Is this input required?>8       default_value: <The default value for this input>9       ui:10         display_name: <Input field display name.>\nTo view supported global types, refer to the schema field descriptor.\n\nIn the manifest, pass the name and description of the tag.\nFor example:\n1 tags:2   - name: github.branch.name3     description: Tag storing github branch name.\nCommands\nIn the manifest, you need to specify the command's name, its namespace, and the surfaces where it can appear, such as comment discussions. It also specifies the UI description, usage hints, and the function to be triggered when the command is invoked.\n1 commands:2   - name: summarize3     namespace: turing4     description: Summarizes the conversation5     surfaces:6       - surface: discussions7         object_types:8           - conversation9     usage_hint: \"number of tokens to generate\"10     function: generate_summary\nFor commands, the <name, namespace> pair should be unique across the Org in which it's installed.\nFunctions\nIn the manifest, pass the name and description of the functions.\n1 functions:2   - name: create_work3     description: Function containing logic to create a DevRev work.4 5   - name: post_message6     description: Function containing logic to post a message on newly created work.\nFor functions, you also need to provide the actual JS/TS code behind this function. Refer to the README in the provided template.\nAutomations\nAutomation refers to linking events from the event sources to your functions.\nAutomations are defined as:\n1 automations:2   - name: <The name of the automation.>3     source: <Name of the event source specified in the manifest from which the events coming in could trigger this automation.>4     event_types:5       - <Event from the source on which you need to run the code.>6     function: <Specifies which function should be run from the manifest.>\nFor custom event sources, whatever event key you emit from your policy, the event name will be custom:<your event key>."
    },
    {
        "id": "ART-873",
        "dataset_source": "devrev-dev0",
        "title": "Snap-kit",
        "content": "\nThis section explores how to create a custom user interface using snap-kit and DevRev.\nUnderstanding the structure\nThe snap-kit JSON has a top-level structure with object, body, type, and snap_kit_body fields. The snap_kit_body field contains information regarding snap-kit's structure.\nFor example:\n1 {2   \"object\": \"<source_id>\",3   \"body\": \"Giphy\",4   \"type\": \"timeline_comment\",5   \"snap_kit_body\": {}6 }\nSnap-kit body\nThe snap_kit_body field has the following properties:\n\nsnap_in_id: A unique identifier for the snap-kit.\nsnap_in_action_name: The name of the action this snap-kit represents.\nbody: An object that holds the actual snap-kit content in the form of snaps.\n\nFor example:\n1 \"snap_kit_body\": {2   \"snap_in_id\": \"<snap_in_id>\",3   \"snap_in_action_name\": \"giphy\",4   \"body\": { \"snaps\": [] }5 }\nBody\nThe body field contains an array of snaps. Each snap can have a type, and depending on the type, it has different properties.\nSnaps\nThe following snap types are supported:\nBase types\n\nSnap\nAction\nFocusable\nPlaceholder\nDisabled\nHideable\nLayout\n\nUser interface elements\n\nButton\nDivider\nImage\nPlain Text\nRich Text\n\nForm elements\n\nCheckboxes\nInput\n\nPlain Text Input\nNumber Input\nEmail Input\nRich Text Input\n\n\nList Input\n\nString List Input\nNumber List Input\nEmail List Input\n\n\nStatic Select\nMulti Static Select\nRadio Buttons\nToggle Button\nUpload Input\n\nLayout elements\n\nActions\nCard\nContent\nForm\nLayout\nInput Layout\n\nData pickers\n\nPart Picker\nTag Picker\nUser Picker\n\nAction payloads\nSnap-kit generates payloads when a user interacts with an actionable snap. The payload is sent to the backend and can be used to perform actions. The following snaps generate payloads:\n\nButton\nCheckboxes\nInput and all its types (Plain Text Input, Number Input, Email Input, Rich Text Input)\nList Input and all its types (String List Input, Number List Input, Email List Input)\nStatic Select\nMulti Static Select\nRadio Buttons\nToggle Button\nUpload Input\nForm\nPart Picker\nTag Picker\nUser Picker\n\nBase Payload\nAll actionable snaps share the same base payload structure. The base payload has the following structure:\n1 {2   \"type\": \"<type of Snap that generated the payload>\",3   \"action_id\": \"<the action identifier of the Snap that generated the payload>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\"6 }\nBase Types\nMany elements share the same base properties. The base types these elements inherit from are described below.\nSnap\nA snap is the base type that all other snaps inherit from.\nProperties\n\ntype (required): Type of snap\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nAction\nBase interface for action components.\nAction types\nThere are two types of action:\n\nRemote action: It triggers a backend API and is handled by the backend.\nClient action: It triggers a client-side action and is handled by the client.\n\nProperties\n\naction_id (required): An identifier for the action. It should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of snap.\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nFocusable\nBase interface for focusable components.\nProperties\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nPlaceholder\nBase interface for components that can have a placeholder.\nProperties\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nDisabled\nBase interface for components that can be disabled.\nProperties\n\ndisabled (optional): Indicates whether the element is disabled.\n\nHideable\nBase interface for components that can be hidden.\nProperties\n\nhidden (optional): Indicates whether the element is hidden.\n\nLayout\nControls how the layout is displayed. Similar to flexbox.\nProperties\n\ndirection (optional): The direction of the layout. Similar to flex-direction. Possible values: \"row\", \"column\".\nalignment (optional): The alignment of the layout. Similar to align-items. Possible values: \"start\", \"center\", \"end\", \"baseline\", \"stretch\".\njustify (optional): The justification of the layout. Similar to justify-content. Possible values: \"start\", \"center\", \"end\", \"between\", \"around\", \"evenly\".\n\nUser interface elements\nButton\nA button that can be clicked to trigger an action. Works with Actions and Form blocks.\nProperties\n\ntext (required): The text to be displayed on the button.\nstyle (optional): The style of the button. Defaults to \"default\". Possible values: \"default\", \"primary\", \"destructive\".\nvalue (required): The value associated with the button. It's sent along with the interaction payload.\nhref (optional): If the button is a link, this is the URL it links to.\ndisabled (optional): Disables the input and prevents changes to the value.\ndisabled_text (optional): The text that's shown on hover if the component is disabled.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the button component, should be set to \"button\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action and is unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nExample\nButton variants displayed in a row using the Card snap.\n\n1 {2   \"elements\": [3     {4       \"direction\": \"row\",5       \"elements\": [6         {7           \"action_id\": \"PRIMARY\",8           \"action_type\": \"remote\",9           \"style\": \"primary\",10           \"text\": {11             \"text\": \"PRIMARY\",12             \"type\": \"plain_text\"13           },14           \"type\": \"button\",15           \"value\": \"PRIMARY\"16         },17         {18           \"action_id\": \"SECONDARY\",19           \"action_type\": \"remote\",20           \"style\": \"secondary\",21           \"text\": {22             \"text\": \"SECONDARY\",23             \"type\": \"plain_text\"24           },25           \"type\": \"button\",26           \"value\": \"SECONDARY\"27         },28         {29           \"action_id\": \"DESTRUCTIVE\",30           \"action_type\": \"remote\",31           \"style\": \"destructive\",32           \"text\": {33             \"text\": \"DESTRUCTIVE\",34             \"type\": \"plain_text\"35           },36           \"type\": \"button\",37           \"value\": \"DESTRUCTIVE\"38         },39         {40           \"action_id\": \"TERTIARY\",41           \"action_type\": \"remote\",42           \"style\": \"tertiary\",43           \"text\": {44             \"text\": \"TERTIARY\",45             \"type\": \"plain_text\"46           },47           \"type\": \"button\",48           \"value\": \"TERTIARY\"49         },50         {51           \"action_id\": \"PRIMARY\",52           \"action_type\": \"remote\",53           \"disabled\": true,54           \"style\": \"primary\",55           \"text\": {56             \"text\": \"DISABLED\",57             \"type\": \"plain_text\"58           },59           \"type\": \"button\",60           \"value\": \"PRIMARY\"61         }62       ],63       \"type\": \"actions\"64     }65   ],66   \"type\": \"card\"67 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"button\".\n1 {2   \"type\": \"button\",3   \"action_id\": \"<the action identifier of the button>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": \"<the value associated with the button>\"7 }\nExample payload\n1 {2   \"action_id\": \"PRIMARY\",3   \"action_type\": \"remote\",4   \"type\": \"button\",5   \"value\": \"PRIMARY\",6   \"timestamp\": \"2023-07-12T08:12:10.006Z\"7 }\nDivider\nA divider component used to separate blocks.\nProperties\nThe divider component does not have any properties of its own.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the divider component, should be set to \"divider\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nExample\nDivider used in a form to separate a name input and a multi-select input.\n\n1 {2   \"elements\": [3     {4       \"action_id\": \"example_form\",5       \"elements\": [6         {7           \"element\": {8             \"action_id\": \"example_name\",9             \"placeholder\": {10               \"text\": \"Enter your name\",11               \"type\": \"plain_text\"12             },13             \"type\": \"plain_text_input\"14           },15           \"label\": {16             \"text\": \"Name\",17             \"type\": \"plain_text\"18           },19           \"type\": \"input_layout\"20         },21         {22           \"type\": \"divider\"23         },24         {25           \"element\": {26             \"action_id\": \"example_preferences\",27             \"options\": [28               {29                 \"text\": {30                   \"text\": \"Email\",31                   \"type\": \"plain_text\"32                 },33                 \"value\": \"email\"34               },35               {36                 \"text\": {37                   \"text\": \"Slack\",38                   \"type\": \"plain_text\"39                 },40                 \"value\": \"slack\"41               },42               {43                 \"text\": {44                   \"text\": \"Other\",45                   \"type\": \"plain_text\"46                 },47                 \"value\": \"other\"48               }49             ],50             \"type\": \"multi_static_select\"51           },52           \"label\": {53             \"text\": \"Select your preferred ways of communication\",54             \"type\": \"plain_text\"55           },56           \"type\": \"input_layout\"57         },58         {59           \"element\": {60             \"action_id\": \"example_other\",61             \"type\": \"plain_text_input\"62           },63           \"label\": {64             \"text\": \"Additional Notes\",65             \"type\": \"plain_text\"66           },67           \"optional\": true,68           \"type\": \"input_layout\"69         }70       ],71       \"submit_action\": {72         \"action_id\": \"example_button\",73         \"style\": \"primary\",74         \"text\": {75           \"text\": \"Submit\",76           \"type\": \"plain_text\"77         },78         \"type\": \"button\",79         \"value\": \"SUBMIT\"80       },81       \"type\": \"form\"82     }83   ],84   \"type\": \"card\"85 }\nImage\nAn image block that displays an image. Works with Content blocks.\nProperties\n\nimage_url (required): The URL of the image.\nalt_text (required): The alt text to be displayed when the image can't be displayed. This shouldn't contain any markup.\nfill_container (optional): Whether the image should stretch to fill the container while maintaining its aspect ratio.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the image component, should be set to \"image\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nExample\nImage used in a card, with default display mode (fill_container not set).\n\n1 {2   \"elements\": [3     {4       \"alignment\": \"center\",5       \"elements\": [6         {7           \"text\": \"Default image display mode: Creating a group in DevRev\",8           \"type\": \"plain_text\"9         },10         {11           \"alt_text\": \"Group creation\",12           \"image_url\": \"https://docs.devrev.ai/_next/image?url=%2Fimg%2Fgroups.gif&w=750&q=75\",13           \"type\": \"image\"14         }15       ],16       \"type\": \"content\"17     }18   ],19   \"type\": \"card\"20 }\nImage used in a card, with fill_container set.\n\n1 {2   \"elements\": [3     {4       \"alignment\": \"center\",5       \"elements\": [6         {7           \"text\": \"Fill container image display mode: Creating a group in DevRev\",8           \"type\": \"plain_text\"9         },10         {11           \"alt_text\": \"Group creation\",12           \"image_url\": \"https://docs.devrev.ai/_next/image?url=%2Fimg%2Fgroups.gif&w=750&q=75\",13           \"type\": \"image\"14         }15       ],16       \"type\": \"content\"17     }18   ],19   \"type\": \"card\"20 }\nPlain text\nA plain text element used to define unformatted text.\nProperties\n\ntext (required): The plain text content.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the element, should be set to \"plain_text\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nExample\n\n1 {2   \"elements\": [3     {4       \"text\": \"Hello this is an example of a plain text element\",5       \"type\": \"plain_text\"6     }7   ]8 }\nRich text\nA rich text element used to define formatted text.\nProperties\n\ntext (required): The rich text content.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the element, should be set to \"rich_text\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nExample\n\n1 {2   \"text\": \"# Welcome to DevRev! \\n[DevRev](https://devrev.ai)\",3   \"type\": \"rich_text\"4 }\nForm elements\nPlain text option\nPlain text options is a commonly shared component of different form elements. It's used to define an option in a form element.\n\ntext (required): A Plain Text element representing the option.\nvalue (required): A value assigned to the option.\ndescription (optional): An optional Plain Text element describing the option.\n\nCheckboxes\nA component that provides a group of checkboxes that allow a user to choose multiple items from a list of options. Works with Input Layout and Actions blocks.\nProperties\n\noptions (required): A list of options that appears in stack of checkboxes, of type Plain Text Option.\ninitial_options (optional): The initially selected options.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the checkbox group component, should be set to \"checkboxes\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\n\n1 {2   \"elements\": [3     {4       \"action_id\": \"checkboxes\",5       \"action_type\": \"remote\",6       \"options\": [7         {8           \"description\": {9             \"text\": \"Description for option 1\",10             \"type\": \"plain_text\"11           },12           \"text\": {13             \"text\": \"Option 1\",14             \"type\": \"plain_text\"15           },16           \"value\": \"option_1\"17         },18         {19           \"description\": {20             \"text\": \"Description for option 1\",21             \"type\": \"plain_text\"22           },23           \"text\": {24             \"text\": \"Option 2\",25             \"type\": \"plain_text\"26           },27           \"value\": \"option_2\"28         }29       ],30       \"type\": \"checkboxes\"31     },32     {33       \"action_id\": \"checkboxes\",34       \"action_type\": \"remote\",35       \"disabled\": true,36       \"options\": [37         {38           \"description\": {39             \"text\": \"Description for option 1\",40             \"type\": \"plain_text\"41           },42           \"text\": {43             \"text\": \"Disabled Option 1\",44             \"type\": \"plain_text\"45           },46           \"value\": \"option_1\"47         },48         {49           \"description\": {50             \"text\": \"Description for option 1\",51             \"type\": \"plain_text\"52           },53           \"text\": {54             \"text\": \"Disabled Option 2\",55             \"type\": \"plain_text\"56           },57           \"value\": \"option_2\"58         }59       ],60       \"type\": \"checkboxes\"61     }62   ],63   \"type\": \"actions\"64 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"checkboxes\".\n1 {2   \"type\": \"checkboxes\",3   \"action_id\": \"<the action identifier of the checkboxes>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": [\"<array of selected Plain Text Option objects>\"]7 }\nExample payload\n1 {2   \"action_id\": \"checkboxes\",3   \"action_type\": \"remote\",4   \"type\": \"checkboxes\",5   \"value\": [6     {7       \"description\": {8         \"text\": \"Description for option 1\",9         \"type\": \"plain_text\"10       },11       \"text\": { \"text\": \"Option 2\", \"type\": \"plain_text\" },12       \"value\": \"option_2\"13     }14   ],15   \"timestamp\": \"2023-07-12T08:14:52.370Z\"16 }\nInput\nThere are 4 supported input types:\n\nPlain Text Input\nNumber Input\nEmail Input\nRich Text Input\n\nProperties\nThe input component does not have any properties of its own. See specific variants below for their properties.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the input component. Should be set according to input type, see below.\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nPlain text input\nA plain-text input, similar to the HTML <input> tag, creates a field where a user can enter freeform data. It can appear as a single-line field. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the input component, should be set to \"plain_text_input\".\n\nAdditional properties\n\ninitial_value (optional): The initial value in the input when it's loaded.\nmultiline (optional): Indicates whether the input should allow multiple lines of text. Defaults to false.\nmin_length (optional): The minimum text length, can't be greater than max_length.\nmax_length (optional): The maximum text length, can't be less than min_length.\nresize (optional): Indicates whether the input should be resizable. Defaults to false.\n\nExample\n\n1 {2   \"element\": {3     \"action_id\": \"name\",4     \"min_length\": 10,5     \"placeholder\": {6       \"text\": \"Enter your name\",7       \"type\": \"plain_text\"8     },9     \"type\": \"plain_text_input\"10   },11   \"hint\": {12     \"text\": \"Please enter your name\",13     \"type\": \"plain_text\"14   },15   \"label\": {16     \"text\": \"User Name\",17     \"type\": \"plain_text\"18   },19   \"optional\": true,20   \"type\": \"input_layout\"21 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"plain_text_input\".\n1 {2   \"type\": \"plain_text_input\",3   \"action_id\": \"<the action identifier of the plain text input>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": \"<the value of the input>\"7 }\nExample payload\n1 {2   \"type\": \"plain_text_input\",3   \"action_id\": \"name\",4   \"action_type\": \"remote\",5   \"timestamp\": \"2023-07-12T08:17:43.887Z\",6   \"value\": \"Chuck Norris\"7 }\nNumber input\nA number input, similar to the HTML <input> tag, creates a field where a user can enter numbers. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the input component, should be set to \"number_input\".\n\nAdditional properties\n\ninitial_value (optional): The initial value in the input when it's loaded.\nmin_value (optional): The minimum value, can't be greater than max_value.\nmax_value (optional): The maximum value, can't be less than min_value.\n\nExample\n\n1 {2   \"element\": {3     \"action_id\": \"age\",4     \"max_value\": 120,5     \"min_value\": 10,6     \"type\": \"number_input\"7   },8   \"label\": {9     \"text\": \"Age\",10     \"type\": \"plain_text\"11   },12   \"type\": \"input_layout\"13 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"number_input\".\n1 {2   \"type\": \"number_input\",3   \"action_id\": \"<the action identifier of the number input>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": \"<the value of the input>\"7 }\nExample payload\n1 {2   \"type\": \"number_input\",3   \"action_id\": \"age\",4   \"action_type\": \"remote\",5   \"timestamp\": \"2023-07-12T08:17:43.887Z\",6   \"value\": \"83\"7 }\nEmail input\nAn email input, similar to the HTML <input> tag, creates a field where a user can enter email. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the input component, should be set to \"email_text_input\".\n\nAdditional properties\n\ninitial_value (optional): The initial value in the input when it's loaded.\n\nExample\n\n1 {2   \"element\": {3     \"action_id\": \"email\",4     \"placeholder\": {5       \"text\": \"example@devrev.ai\",6       \"type\": \"plain_text\"7     },8     \"type\": \"email_text_input\"9   },10   \"hint\": {11     \"text\": \"Please enter your email\",12     \"type\": \"plain_text\"13   },14   \"label\": {15     \"text\": \"Email\",16     \"type\": \"plain_text\"17   },18   \"type\": \"input_layout\"19 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"email_text_input\".\n1 {2   \"type\": \"email_text_input\",3   \"action_id\": \"<the action identifier of the email text input>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": \"<the value of the input>\"7 }\nExample payload\n1 {2   \"type\": \"email_text_input\",3   \"action_id\": \"email\",4   \"action_type\": \"remote\",5   \"timestamp\": \"2023-07-12T08:17:43.887Z\",6   \"value\": \"chuck@norris.com\"7 }\nRich text input\nA rich text input shows a rich text editor where the user can enter formatted text (Markdown). Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the input component, should be set to \"rich_text_input\".\n\nAdditional properties\n\ninitial_value (optional): The initial value in the input when it's loaded.\n\nExample\n\nThe following video shows the rich text input in action.\n\n1 {2   \"element\": {3     \"action_id\": \"notes\",4     \"placeholder\": {5       \"text\": \"Your notes go here\",6       \"type\": \"plain_text\"7     },8     \"type\": \"rich_text_input\"9   },10   \"hint\": {11     \"text\": \"Please enter your notes\",12     \"type\": \"plain_text\"13   },14   \"label\": {15     \"text\": \"Notes\",16     \"type\": \"plain_text\"17   },18   \"optional\": true,19   \"type\": \"input_layout\"20 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"rich_text_input\".\n1 {2   \"type\": \"rich_text_input\",3   \"action_id\": \"<the action identifier of the rich text input>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": \"<the value (raw Markdown) of the input>\"7 }\nExample payload\n1 {2   \"type\": \"rich_text_input\",3   \"action_id\": \"notes\",4   \"action_type\": \"remote\",5   \"timestamp\": \"2023-07-19T10:54:20.331Z\",6   \"value\": \"**Title**7 8 *Italic*9 10 ~~Strikethrough~~11 12 `A piece of code`13 14 > A quote15 16 - Unordered 117 - Unordered 218 19 1. Ordered 120 2. Ordered 2\"21 }\nList input\nThere are 3 supported list input types:\n\nString List Input\nNumber List Input\nEmail List Input\n\nProperties\nThe list input component does not have any properties of its own. See specific variants below for their properties.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the list input component. Should be set according to list input type, see below.\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nString list input\nA string list input allows users to enter a list of text items. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the input component, should be set to \"string_list\".\n\nAdditional Properties\n\nmin_items (optional): The minimum number of items that can be added. Defaults to 1.\nmax_items (optional): The maximum number of items that can be added.\nmultiline (optional): Indicates whether the input should allow multiple lines of text. Defaults to false.\nmin_item_length (optional): The minimum text length of the inputs, can't be greater than max_item_length.\nmax_item_length (optional): The maximum text length of the inputs, can't be less than min_item_length.\ninitial_values (optional): The initial values in the inputs when they are loaded. This is an array of strings. If min_items or max_items are set, the length of the array should be within the range.\n\nExample\nStandard string list input with a minimum of 1 item, maximum of 3 items, minimum item length set to 3 and maximum item length set to 15.\n\n1 {2   \"element\": {3     \"action_id\": \"keywords\",4     \"max_items\": 3,5     \"min_items\": 1,6     \"max_item_length\": 15,7     \"min_item_length\": 3,8     \"placeholder\": {9       \"text\": \"Add keyword here\",10       \"type\": \"plain_text\"11     },12     \"type\": \"string_list\"13   },14   \"hint\": {15     \"text\": \"When a customer includes these keywords in a Slack message, they are prompted to send the message to your DevRev inbox.\",16     \"type\": \"plain_text\"17   },18   \"label\": {19     \"text\": \"List of strings\",20     \"type\": \"plain_text\"21   },22   \"type\": \"input_layout\"23 }\nMultiline string list input with a minimum of 1 item and a maximum of 2 items.\n\n1 {2   \"element\": {3     \"action_id\": \"multiline\",4     \"max_items\": 2,5     \"min_items\": 1,6     \"multiline\": true,7     \"placeholder\": {8       \"text\": \"Add keyword here\",9       \"type\": \"plain_text\"10     },11     \"type\": \"string_list\"12   },13   \"hint\": {14     \"text\": \"When a customer includes these multiline keywords in a Slack message, they are prompted to send the message to your DevRev inbox.\",15     \"type\": \"plain_text\"16   },17   \"label\": {18     \"text\": \"List of strings\",19     \"type\": \"plain_text\"20   },21   \"type\": \"input_layout\"22 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"string_list\".\n1 {2   \"type\": \"string_list\",3   \"action_id\": \"<the action identifier of the string list input>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": [\"<an array of strings as inputted by the user>\"]7 }\nExample payload\nStandard string list input.\n1 {2   \"type\": \"string_list\",3   \"action_id\": \"keywords\",4   \"action_type\": \"remote\",5   \"timestamp\": \"2023-07-21T05:33:52.182Z\",6   \"value\": [\"hello\", \"this is\", \"a test\"]7 }\nMultiline string list input.\n1 {2   \"type\": \"string_list\",3   \"action_id\": \"multiline\",4   \"action_type\": \"remote\",5   \"timestamp\": \"2023-07-21T05:33:52.182Z\",6   \"value\": [\"Hello this7 is a multiline string\", \"And here8 is another9 one\"]10 }\nNumber List Input\nA list of numbers input allows users to enter a list of numeric items. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the input component, should be set to \"number_list\".\n\nAdditional Properties\n\nmin_items (optional): The minimum number of items that can be added.\nmax_items (optional): The maximum number of items that can be added.\nmin_item_value (optional): The minimum value of the inputs, can't be greater than max_item_value.\nmax_item_value (optional): The maximum value of the inputs, can't be less than min_item_value.\ninitial_values (optional): The initial values in the inputs when they are loaded. This is an array of strings. If min_items or max_items are set, the length of the array should be within the range.\n\nExample\n\n1 {2   \"element\": {3     \"action_id\": \"numbers\",4     \"max_item_value\": 90,5     \"min_item_value\": 0,6     \"placeholder\": {7       \"text\": \"Add warning value here (min 0, max 90)\",8       \"type\": \"plain_text\"9     },10     \"type\": \"number_list\"11   },12   \"hint\": {13     \"text\": \"Add warning values for code coverage reports\",14     \"type\": \"plain_text\"15   },16   \"label\": {17     \"text\": \"List of numbers\",18     \"type\": \"plain_text\"19   },20   \"type\": \"input_layout\"21 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"number_list\".\n1 {2   \"type\": \"number_list\",3   \"action_id\": \"<the action identifier of the number list input>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": [\"<an array of numbers as strings as inputted by the user>\"]7 }\nExample Payload\n1 {2   \"type\": \"number_list\",3   \"action_id\": \"numbers\",4   \"action_type\": \"remote\",5   \"timestamp\": \"2023-07-21T05:33:52.182Z\",6   \"value\": [\"25\", \"42\", \"60\"]7 }\nEmail List Input\nA list of emails input allows users to enter a list of emails. Works with Input Layout blocks.\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the input component, should be set to \"email_list\".\n\nAdditional Properties\n\nmin_items (optional): The minimum number of items that can be added.\nmax_items (optional): The maximum number of items that can be added.\ninitial_values (optional): The initial values in the inputs when they are loaded. This is an array of strings. If min_items or max_items are set, the length of the array should be within the range.\n\nExample\n\n1 {2   \"element\": {3     \"action_id\": \"emails\",4     \"placeholder\": {5       \"text\": \"Enter email here\",6       \"type\": \"plain_text\"7     },8     \"type\": \"email_list\"9   },10   \"hint\": {11     \"text\": \"When these emails are included in a Slack message, they automatically receive an email notification.\",12     \"type\": \"plain_text\"13   },14   \"label\": {15     \"text\": \"List of emails\",16     \"type\": \"plain_text\"17   },18   \"type\": \"input_layout\"19 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"email_list\".\n1 {2   \"type\": \"email_list\",3   \"action_id\": \"<the action identifier of the email list input>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": [\"<an array of emails as strings as inputted by the user>\"]7 }\nExample Payload\n1 {2   \"type\": \"email_list\",3   \"action_id\": \"emails\",4   \"action_type\": \"remote\",5   \"timestamp\": \"2023-07-21T05:33:52.182Z\",6   \"value\": [\"hello@hello.com\", \"example@example.com\", \"bonjour@hello.com\"]7 }\nStatic Select\nA select menu that allows a user to choose one item from a list of options. Works with Input Layout and Actions blocks.\nProperties\n\noptions (required): A list of options that appear in the menu, of type Plain Text Option.\ninitial_selected_option (optional): The initial option that's selected when the element is loaded. A single option that exactly matches one of the options within options.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the static select component, should be set to \"static_select\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nA static select snap with 4 options.\n\n1 {2   \"action_id\": \"static_select\",3   \"action_type\": \"remote\",4   \"initial_selected_option\": {5     \"text\": {6       \"text\": \"Forrest Gump\",7       \"type\": \"plain_text\"8     },9     \"value\": \"forrest-gump\"10   },11   \"options\": [12     {13       \"text\": {14         \"text\": \"Forrest Gump\",15         \"type\": \"plain_text\"16       },17       \"value\": \"forrest-gump\"18     },19     {20       \"text\": {21         \"text\": \"The Shawshank Redemption\",22         \"type\": \"plain_text\"23       },24       \"value\": \"the-shawshank-redemption\"25     },26     {27       \"text\": {28         \"text\": \"The Godfather\",29         \"type\": \"plain_text\"30       },31       \"value\": \"the-godfather\"32     },33     {34       \"text\": {35         \"text\": \"The Dark Knight\",36         \"type\": \"plain_text\"37       },38       \"value\": \"the-dark-knight\"39     }40   ],41   \"type\": \"static_select\"42 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"static_select\".\n1 {2   \"type\": \"static_select\",3   \"action_id\": \"<the action identifier of the static select>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": \"<selected Plain Text Option object>\"7 }\nExample Payload\n1 {2   \"action_id\": \"static_select\",3   \"action_type\": \"remote\",4   \"type\": \"static_select\",5   \"value\": {6     \"text\": { \"text\": \"The Godfather\", \"type\": \"plain_text\" },7     \"value\": \"the-godfather\"8   },9   \"timestamp\": \"2023-07-12T08:21:06.027Z\"10 }\nMulti Static Select\nA select menu that allows a user to choose multiple items from a list of options. Works with Input Layout and Actions blocks.\nProperties\n\noptions (required): A list of options that appear in the menu, of type Plain Text Option.\ninitial_selected_options (optional): The initial options that are selected when the element is loaded. Each of them should exactly match one of the options within options.\nmax_selected_items (optional): The maximum number of items that can be selected.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the multi static select component, should be set to \"multi_static_select\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nA multi static select snap with 4 options.\n\n1 {2   \"action_id\": \"multi_static_select\",3   \"action_type\": \"remote\",4   \"initial_selected_options\": [5     {6       \"text\": {7         \"text\": \"Forrest Gump\",8         \"type\": \"plain_text\"9       },10       \"value\": \"forrest-gump\"11     }12   ],13   \"options\": [14     {15       \"text\": {16         \"text\": \"Forrest Gump\",17         \"type\": \"plain_text\"18       },19       \"value\": \"forrest-gump\"20     },21     {22       \"text\": {23         \"text\": \"The Shawshank Redemption\",24         \"type\": \"plain_text\"25       },26       \"value\": \"the-shawshank-redemption\"27     },28     {29       \"text\": {30         \"text\": \"The Godfather\",31         \"type\": \"plain_text\"32       },33       \"value\": \"the-godfather\"34     },35     {36       \"text\": {37         \"text\": \"The Dark Knight\",38         \"type\": \"plain_text\"39       },40       \"value\": \"the-dark-knight\"41     }42   ],43   \"type\": \"multi_static_select\"44 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"multi_static_select\".\n1 {2   \"type\": \"multi_static_select\",3   \"action_id\": \"<the action identifier of the multi static select>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": [\"<array of selected Plain Text Option objects>\"]7 }\nExample Payload\n1 {2   \"action_id\": \"multi_static_select\",3   \"action_type\": \"remote\",4   \"type\": \"multi_static_select\",5   \"value\": [6     {7       \"text\": { \"text\": \"Forrest Gump\", \"type\": \"plain_text\" },8       \"value\": \"forrest-gump\"9     },10     {11       \"text\": { \"text\": \"The Dark Knight\", \"type\": \"plain_text\" },12       \"value\": \"the-dark-knight\"13     }14   ],15   \"timestamp\": \"2023-07-12T08:21:24.700Z\"16 }\nRadio Buttons\nList of radio inputs that allow a user to choose one item from a list of options. Works with input layout and actions blocks.\nProperties\n\noptions (required): A list of options that appear in stack of radio inputs, of type plain text option.\ninitial_selected_option (optional): The initial option that's selected when the element is loaded. A single option that exactly matches one of the options within options.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the radio button group component, should be set to \"radio_buttons\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nA radio buttons snap with 3 options.\n\n1 {2   \"action_id\": \"in-app\",3   \"action_type\": \"remote\",4   \"options\": [5     {6       \"text\": {7         \"text\": \"Important updates only (Mentions & assignments)\",8         \"type\": \"plain_text\"9       },10       \"value\": \"imp\"11     },12     {13       \"text\": {14         \"text\": \"All new updates\",15         \"type\": \"plain_text\"16       },17       \"value\": \"all\"18     },19     {20       \"text\": {21         \"text\": \"Never\",22         \"type\": \"plain_text\"23       },24       \"value\": \"none\"25     }26   ],27   \"type\": \"radio_buttons\"28 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"radio_buttons\".\n1 {2   \"type\": \"radio_buttons\",3   \"action_id\": \"<the action identifier of the radio buttons>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": \"<selected Plain Text Option object>\"7 }\nExample Payload\n1 {2   \"action_id\": \"in-app\",3   \"action_type\": \"remote\",4   \"type\": \"radio_buttons\",5   \"value\": {6     \"text\": { \"text\": \"All new updates\", \"type\": \"plain_text\" },7     \"value\": \"all\"8   },9   \"timestamp\": \"2023-07-12T08:21:46.621Z\"10 }\nToggle Button\nToggles allow users to quickly switch between two possible states. Works with Input Layout and Actions blocks.\nProperties\n\ninitial_value (optional): The initial value of the toggle (a boolean).\ndescription (optional): A Plain Text element that defines the description shown below the toggle.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the toggle button component, should be set to \"toggle\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\n\n1 {2   \"elements\": [3     {4       \"elements\": [5         {6           \"action_id\": \"toggle\",7           \"description\": {8             \"text\": \"This is a toggle\",9             \"type\": \"plain_text\"10           },11           \"type\": \"toggle\"12         },13         {14           \"action_id\": \"toggle_checked\",15           \"description\": {16             \"text\": \"This is a checked toggle\",17             \"type\": \"plain_text\"18           },19           \"initial_value\": true,20           \"type\": \"toggle\"21         },22         {23           \"action_id\": \"toggle_disabled\",24           \"description\": {25             \"text\": \"This is a disabled toggle\",26             \"type\": \"plain_text\"27           },28           \"disabled\": true,29           \"type\": \"toggle\"30         }31       ],32       \"type\": \"actions\"33     }34   ],35   \"type\": \"card\"36 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"toggle\".\n1 {2   \"type\": \"toggle\",3   \"action_id\": \"<the action identifier of the toggle>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": \"<boolean indicating the state of the toggle>\"7 }\nExample Payload\n1 {2   \"action_id\": \"toggle\",3   \"action_type\": \"remote\",4   \"type\": \"toggle\",5   \"value\": true,6   \"timestamp\": \"2023-07-12T08:22:10.723Z\"7 }\nUpload Input\nA component that allows a user to upload a file. Works with Input Layout and Actions blocks.\nProperties\n\nupload_button (required): A button that can be clicked to upload files.\nmin_files (optional): The minimum number of files that can be uploaded.\nmax_files (optional): The maximum number of files that can be uploaded.\ninitial_artifacts_ids (optional): The initial artifacts that are selected when the element is loaded. A list of DONv2 IDs.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the upload input component, should be set to \"upload\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\n\n1 {2   \"elements\": [3     {4       \"elements\": [5         {6           \"action_id\": \"upload\",7           \"action_type\": \"remote\",8           \"max_files\": 5,9           \"min_files\": 1,10           \"type\": \"upload\",11           \"upload_button\": {12             \"action_id\": \"upload_btn\",13             \"style\": \"primary\",14             \"text\": {15               \"text\": \"Upload\",16               \"type\": \"plain_text\"17             },18             \"type\": \"button\",19             \"value\": \"upload\"20           }21         }22       ],23       \"type\": \"actions\"24     }25   ],26   \"type\": \"card\"27 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"upload\".\n1 {2   \"type\": \"upload\",3   \"action_id\": \"<the action identifier of the upload input>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": [\"<an array of artifact IDs as strings>\"]7 }\nExample Payload\n1 {2   \"action_id\": \"upload\",3   \"action_type\": \"remote\",4   \"type\": \"upload\",5   \"value\": [6     \"don:core:dvrv-us-1:devo/H66a8LUt:artifact/5\",7     \"don:core:dvrv-us-1:devo/H66a8LUt:artifact/6\"8   ],9   \"timestamp\": \"2023-07-12T08:25:47.451Z\"10 }\nLayout Elements\nActions\nUsed when you want the user to interact without filling a form. Similar to the Form block but without a submit button. It contains an array of elements.\nProperties\n\nelements (required): An array of elements. See list of allowed elements below.\ndisable_on_action (optional): A boolean indicating whether all elements in the actions block should be disabled when one of the elements is interacted with. When the action is completed, the elements is re-enabled. Defaults to false. A use-case for enabling this is if you have multiple actions that shouldn't be executed concurrently or are incompatible with each other. An example of this would be a snap-in for selecting a meal for a company event. When the user selects a meal, the other meal options should be disabled until the order is placed. After that, the Snap-kit can be updated with the information about the selection.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the actions component, should be set to \"actions\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Layout:\n\ndirection (optional): The direction of the layout. Similar to flex-direction. Possible values: \"row\", \"column\".\nalignment (optional): The alignment of the layout. Similar to align-items. Possible values: \"start\", \"center\", \"end\", \"baseline\", \"stretch\".\njustify (optional): The justification of the layout. Similar to justify-content. Possible values: \"start\", \"center\", \"end\", \"between\", \"around\", \"evenly\".\n\nAllowed elements\nThe elements array can contain the following Snaps:\n\nButton\nCheckboxes\nRadio Buttons\nActions\nStatic Select\nMulti Static Select\nDivider\nTag Picker\nUser Picker\nPart Picker\nToggle Button\nUpload Input\n\nExample\n\n1 {2   \"elements\": [3     {4       \"action_id\": \"actions\",5       \"action_type\": \"remote\",6       \"options\": [7         {8           \"text\": {9             \"text\": \"Checkbox 1\",10             \"type\": \"plain_text\"11           },12           \"value\": \"checkbox_1\"13         },14         {15           \"text\": {16             \"text\": \"Checkbox 2\",17             \"type\": \"plain_text\"18           },19           \"value\": \"checkbox_2\"20         }21       ],22       \"type\": \"checkboxes\"23     },24     {25       \"action_id\": \"submit\",26       \"action_type\": \"remote\",27       \"style\": \"primary\",28       \"text\": {29         \"text\": \"Button\",30         \"type\": \"plain_text\"31       },32       \"type\": \"button\",33       \"value\": \"submit\"34     }35   ],36   \"type\": \"actions\"37 }\nThe following video shows the behavior of the Actions block with disable_on_action set to true.\n\n1 {2   \"elements\": [3     {4       \"elements\": [5         {6           \"text\": \"This is an example of an Actions Snap with disable_on_action set to true. When you click one of the buttons, the other buttons is disabled until the action finishes.\",7           \"type\": \"plain_text\"8         }9       ],10       \"type\": \"content\"11     },12     {13       \"direction\": \"row\",14       \"disable_on_action\": true,15       \"elements\": [16         {17           \"action_id\": \"button_1\",18           \"action_type\": \"remote\",19           \"style\": \"primary\",20           \"text\": {21             \"text\": \"Button 1\",22             \"type\": \"plain_text\"23           },24           \"type\": \"button\",25           \"value\": \"button_1\"26         },27         {28           \"action_id\": \"button_2\",29           \"action_type\": \"remote\",30           \"style\": \"secondary\",31           \"text\": {32             \"text\": \"Button 2\",33             \"type\": \"plain_text\"34           },35           \"type\": \"button\",36           \"value\": \"button_2\"37         },38         {39           \"action_id\": \"button_3\",40           \"action_type\": \"remote\",41           \"style\": \"destructive\",42           \"text\": {43             \"text\": \"Button 3\",44             \"type\": \"plain_text\"45           },46           \"type\": \"button\",47           \"value\": \"button_3\"48         }49       ],50       \"type\": \"actions\"51     }52   ],53   \"type\": \"card\"54 }\nCard\nA card is a container for various types of content. It contains an array of elements.\nProperties\n\nelements (required): An array of elements. See list of allowed elements below.\ntitle (optional): The title of the card.\nis_collapsible (optional): Whether the card is collapsible or not. Defaults to false.\ndefault_collapsed (optional): Whether the card is collapsed by default or not. Defaults to false.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the card component, should be set to \"card\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Layout:\n\ndirection (optional): The direction of the layout. Similar to flex-direction. Possible values: \"row\", \"column\".\nalignment (optional): The alignment of the layout. Similar to align-items. Possible values: \"start\", \"center\", \"end\", \"baseline\", \"stretch\".\njustify (optional): The justification of the layout. Similar to justify-content. Possible values: \"start\", \"center\", \"end\", \"between\", \"around\", \"evenly\".\n\nAllowed elements\nThe elements array can contain the following Snaps:\n\nActions\nContent\nForm\nDivider\n\nExample\nDefault and collapsible card example.\n\n1 [2   {3     \"elements\": [4       {5         \"elements\": [6           {7             \"text\": \"Hello this is an example of card which can have different types of elements inside it\",8             \"type\": \"plain_text\"9           }10         ],11         \"type\": \"content\"12       }13     ],14     \"type\": \"card\"15   },16   {17     \"default_collapsed\": true,18     \"elements\": [19       {20         \"elements\": [21           {22             \"text\": \"Hello this is an example of collapsible card\",23             \"type\": \"plain_text\"24           }25         ],26         \"type\": \"content\"27       }28     ],29     \"is_collapsible\": true,30     \"title\": {31       \"text\": \"Collapsible Card Example\",32       \"type\": \"plain_text\"33     },34     \"type\": \"card\"35   }36 ]\nContent\nA content block is used to hold various types of content. It contains an array of elements.\nProperties\n\nelements (required): An array of elements. See list of allowed elements below.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the content component, should be set to \"content\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Layout:\n\ndirection (optional): The direction of the layout. Similar to flex-direction. Possible values: \"row\", \"column\".\nalignment (optional): The alignment of the layout. Similar to align-items. Possible values: \"start\", \"center\", \"end\", \"baseline\", \"stretch\".\njustify (optional): The justification of the layout. Similar to justify-content. Possible values: \"start\", \"center\", \"end\", \"between\", \"around\", \"evenly\".\n\nAllowed elements\nThe elements array can contain the following Snaps:\n\nPlain Text\nRich Text\nImage\nContent\nDivider\n\nExample\n\n1 {2   \"elements\": [3     {4       \"text\": \"Hello this is an example of content\",5       \"type\": \"plain_text\"6     },7     {8       \"alt_text\": \"My heart goes\",9       \"image_url\": \"https://media1.giphy.com/media/5kq0GCjHA8Rwc/giphy.gif?cid=ecf05e47uvd6y50d5jrxs2odyj0y90oq2v6hd6xz6j578183&rid=giphy.gif&ct=g\",10       \"type\": \"image\"11     }12   ],13   \"type\": \"content\"14 }\nForm\nA form block that collects information from users.\nProperties\n\nelements (required): An array of elements. See list of allowed elements below.\nsubmit_action (required): A button that can be clicked to submit the form.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the form component, should be set to \"form\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Layout:\n\ndirection (optional): The direction of the layout. Similar to flex-direction. Possible values: \"row\", \"column\".\nalignment (optional): The alignment of the layout. Similar to align-items. Possible values: \"start\", \"center\", \"end\", \"baseline\", \"stretch\".\njustify (optional): The justification of the layout. Similar to justify-content. Possible values: \"start\", \"center\", \"end\", \"between\", \"around\", \"evenly\".\n\nAllowed elements\nThe elements array can contain the following Snaps:\n\nInput Layout\nDivider\n\nExample\nA form composed of plain text inputs, number inputs, checkboxes, radio buttons, static select and multi static select snaps.\n\n1 {2   \"action_id\": \"user_form\",3   \"elements\": [4     {5       \"element\": {6         \"action_id\": \"name\",7         \"action_type\": \"remote\",8         \"min_length\": 10,9         \"placeholder\": {10           \"text\": \"Enter your name\",11           \"type\": \"plain_text\"12         },13         \"type\": \"plain_text_input\"14       },15       \"hint\": {16         \"text\": \"Please enter your name\",17         \"type\": \"plain_text\"18       },19       \"label\": {20         \"text\": \"User Name\",21         \"type\": \"plain_text\"22       },23       \"optional\": true,24       \"type\": \"input_layout\"25     },26     {27       \"element\": {28         \"action_id\": \"age\",29         \"max_value\": 120,30         \"min_value\": 10,31         \"type\": \"number_input\"32       },33       \"label\": {34         \"text\": \"Age\",35         \"type\": \"plain_text\"36       },37       \"type\": \"input_layout\"38     },39     {40       \"element\": {41         \"action_id\": \"checkboxes\",42         \"options\": [43           {44             \"description\": {45               \"text\": \"Description for option 1\",46               \"type\": \"plain_text\"47             },48             \"text\": {49               \"text\": \"Option 1\",50               \"type\": \"plain_text\"51             },52             \"value\": \"option_1\"53           },54           {55             \"description\": {56               \"text\": \"Description for option 1\",57               \"type\": \"plain_text\"58             },59             \"text\": {60               \"text\": \"Option 2\",61               \"type\": \"plain_text\"62             },63             \"value\": \"option_2\"64           }65         ],66         \"type\": \"checkboxes\"67       },68       \"type\": \"input_layout\"69     },70     {71       \"element\": {72         \"action_id\": \"radio_buttons\",73         \"options\": [74           {75             \"description\": {76               \"text\": \"Description for option 1\",77               \"type\": \"plain_text\"78             },79             \"text\": {80               \"text\": \"Radio Option 1\",81               \"type\": \"plain_text\"82             },83             \"value\": \"radio_option_1\"84           },85           {86             \"description\": {87               \"text\": \"Description for option 1\",88               \"type\": \"plain_text\"89             },90             \"text\": {91               \"text\": \"RadioOption 2\",92               \"type\": \"plain_text\"93             },94             \"value\": \"radio_option_2\"95           }96         ],97         \"type\": \"radio_buttons\"98       },99       \"type\": \"input_layout\"100     },101     {102       \"element\": {103         \"action_id\": \"multi_static_select\",104         \"options\": [105           {106             \"text\": {107               \"text\": \"Select option 1\",108               \"type\": \"plain_text\"109             },110             \"value\": \"select-option-1\"111           },112           {113             \"text\": {114               \"text\": \"Select option 2\",115               \"type\": \"plain_text\"116             },117             \"value\": \"select-option-2\"118           }119         ],120         \"type\": \"multi_static_select\"121       },122       \"label\": {123         \"text\": \"Multi Select\",124         \"type\": \"plain_text\"125       },126       \"type\": \"input_layout\"127     },128     {129       \"element\": {130         \"action_id\": \"single_static_select\",131         \"initial_selected_option\": {132           \"text\": {133             \"text\": \"Single 1\",134             \"type\": \"plain_text\"135           },136           \"value\": \"single-option-1\"137         },138         \"options\": [139           {140             \"text\": {141               \"text\": \"Single 1\",142               \"type\": \"plain_text\"143             },144             \"value\": \"single-option-1\"145           },146           {147             \"text\": {148               \"text\": \"Single 2\",149               \"type\": \"plain_text\"150             },151             \"value\": \"single-option-2\"152           }153         ],154         \"placeholder\": {155           \"text\": \"Placeholder here\",156           \"type\": \"plain_text\"157         },158         \"type\": \"static_select\"159       },160       \"label\": {161         \"text\": \"Single Select\",162         \"type\": \"plain_text\"163       },164       \"type\": \"input_layout\"165     }166   ],167   \"submit_action\": {168     \"action_id\": \"submit\",169     \"style\": \"primary\",170     \"text\": {171       \"text\": \"Submit\",172       \"type\": \"plain_text\"173     },174     \"type\": \"button\",175     \"value\": \"submit\"176   },177   \"type\": \"form\"178 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"form\".\n1 {2   \"type\": \"form\",3   \"action_id\": \"<the action identifier of the form>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": \"<an object containing action payloads of nested Snaps>\"7 }\nExample payload\n1 {2   \"action_id\": \"user_form\",3   \"action_type\": \"remote\",4   \"type\": \"form\",5   \"value\": {6     \"name\": {7       \"action_id\": \"name\",8       \"type\": \"plain_text_input\",9       \"value\": \"Chuck Norris\"10     },11     \"age\": { \"action_id\": \"age\", \"type\": \"number_input\", \"value\": \"83\" },12     \"checkboxes\": {13       \"action_id\": \"checkboxes\",14       \"type\": \"checkboxes\",15       \"value\": [16         {17           \"description\": {18             \"text\": \"Description for option 1\",19             \"type\": \"plain_text\"20           },21           \"text\": { \"text\": \"Option 1\", \"type\": \"plain_text\" },22           \"value\": \"option_1\"23         },24         {25           \"description\": {26             \"text\": \"Description for option 1\",27             \"type\": \"plain_text\"28           },29           \"text\": { \"text\": \"Option 2\", \"type\": \"plain_text\" },30           \"value\": \"option_2\"31         }32       ]33     },34     \"radio_buttons\": {35       \"action_id\": \"radio_buttons\",36       \"type\": \"radio_buttons\",37       \"value\": {38         \"description\": {39           \"text\": \"Description for option 1\",40           \"type\": \"plain_text\"41         },42         \"text\": { \"text\": \"RadioOption 2\", \"type\": \"plain_text\" },43         \"value\": \"radio_option_2\"44       }45     },46     \"multi_static_select\": {47       \"action_id\": \"multi_static_select\",48       \"type\": \"multi_static_select\",49       \"value\": [50         {51           \"text\": { \"text\": \"Select option 1\", \"type\": \"plain_text\" },52           \"value\": \"select-option-1\"53         },54         {55           \"text\": { \"text\": \"Select option 2\", \"type\": \"plain_text\" },56           \"value\": \"select-option-2\"57         }58       ]59     },60     \"single_static_select\": {61       \"action_id\": \"single_static_select\",62       \"type\": \"static_select\",63       \"value\": {64         \"text\": { \"text\": \"Single 1\", \"type\": \"plain_text\" },65         \"value\": \"single-option-1\"66       }67     }68   },69   \"timestamp\": \"2023-07-12T08:26:10.842Z\"70 }\nInput layout\nA layout that holds the elements which user can interact with in a form. Works with Form blocks.\nProperties\n\nelement (required): The input element. See list of allowed elements below.\nlabel (optional): A Plain Text element that defines the label shown above the input element.\nhint (optional): A Plain Text element that defines the hint shown below the label.\noptional (optional): A boolean that indicates whether the input element may be empty when a user submits the modal. For toggle, if this value is false, then it needs to be always toggled (needs to be true). Defaults to false.\ndisabled (optional): Disables the input and prevents changes to the value.\ndisabled_text (optional): The text that's shown on hover if the component is disabled.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the input layout component, should be set to \"input_layout\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Hideable:\n\nhidden (optional): Indicates whether the element is hidden. You can use this to pass values to the backend without showing them to the user.\n\nAllowed element types\n\nInput\nCheckboxes\nRadio Buttons\nStatic Select\nMulti Static Select\nUser Picker\nPart Picker\nTag Picker\nToggle Button\nUpload Input\n\nExample\n\n1 {2   \"action_id\": \"user_form\",3   \"alignment\": \"end\",4   \"direction\": \"row\",5   \"elements\": [6     {7       \"element\": {8         \"action_id\": \"name\",9         \"min_length\": 10,10         \"placeholder\": {11           \"text\": \"Enter your name\",12           \"type\": \"plain_text\"13         },14         \"type\": \"plain_text_input\"15       },16       \"label\": {17         \"text\": \"User Name\",18         \"type\": \"plain_text\"19       },20       \"optional\": true,21       \"type\": \"input_layout\"22     },23     {24       \"element\": {25         \"action_id\": \"age\",26         \"max_value\": 120,27         \"min_value\": 10,28         \"type\": \"number_input\"29       },30       \"label\": {31         \"text\": \"Age\",32         \"type\": \"plain_text\"33       },34       \"type\": \"input_layout\"35     },36     {37       \"element\": {38         \"action_id\": \"hidden_field\",39         \"initial_value\": \"something you do not wish to expose to the user\",40         \"type\": \"plain_text_input\"41       },42       \"hidden\": true,43       \"type\": \"input_layout\"44     },45   ],46   \"justify\": \"between\",47   \"submit_action\": {48     \"action_id\": \"submit\",49     \"style\": \"primary\",50     \"text\": {51       \"text\": \"Submit\",52       \"type\": \"plain_text\"53     },54     \"type\": \"button\",55     \"value\": \"submit\"56   },57   \"type\": \"form\"58 }\nData pickers\nPart picker\nA component that provides a list of parts that allow a user to choose multiple parts from a list. Works with Input Layout and Actions blocks.\nProperties\n\ninitial_parts_selected_options (optional): The initially selected parts, a list of DONv2 IDs.\nmax_selected_items (optional): The maximum number of parts that can be selected.\nallowed_part_types (optional): A list of part types that are selectable from the list of parts in the dropdown. Possible values: \"capability\", \"component\", \"custom_part\", \"enhancement\", \"feature\", \"linkable\", \"microservice\", \"product\", \"runnable\".\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the part picker component, should be set to \"part_picker\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nPart picker snap with 2 selected parts.\n\n1 {2   \"element\": {3     \"action_id\": \"part_picker\",4     \"action_type\": \"remote\",5     \"max_selected_items\": 5,6     \"type\": \"part_picker\"7   },8   \"label\": {9     \"text\": \"Part\",10     \"type\": \"plain_text\"11   },12   \"type\": \"input_layout\"13 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"part_picker\".\n1 {2   \"type\": \"part_picker\",3   \"action_id\": \"<the action identifier of the part picker>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": [\"<an array of part DONv2 IDs as strings>\"]7 }\nExample payload\n1 {2   \"action_id\": \"part_picker\",3   \"action_type\": \"remote\",4   \"type\": \"part_picker\",5   \"value\": [6     \"don:core:dvrv-us-1:devo/H66a8LUt:feature/1\",7     \"don:core:dvrv-us-1:devo/H66a8LUt:feature/2\"8   ],9   \"timestamp\": \"2023-07-12T08:29:01.788Z\"10 }\nTag picker\nA component that provides a list of tags that allow a user to choose multiple tags from a list. Works with Input Layout and Actions blocks.\nProperties\n\ninitial_tags_selected_options (optional): The initially selected tags, a list of DONv2 IDs.\nmax_selected_items (optional): The maximum number of tags that can be selected.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the tag picker component, should be set to \"tag_picker\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nTag picker snap with 1 selected tag.\n\n1 {2   \"element\": {3     \"action_id\": \"tag_picker\",4     \"action_type\": \"remote\",5     \"max_selected_items\": 5,6     \"type\": \"tag_picker\"7   },8   \"label\": {9     \"text\": \"Tag\",10     \"type\": \"plain_text\"11   },12   \"type\": \"input_layout\"13 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"tag_picker\".\n1 {2   \"type\": \"tag_picker\",3   \"action_id\": \"<the action identifier of the tag picker>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": [\"<an array of tag DONv2 IDs as strings>\"]7 }\nExample payload\n1 {2   \"action_id\": \"tag_picker\",3   \"action_type\": \"remote\",4   \"type\": \"tag_picker\",5   \"value\": [\"don:core:dvrv-us-1:devo/H66a8LUt:tag/7\"],6   \"timestamp\": \"2023-07-12T08:32:15.001Z\"7 }\nUser picker\nA component that provides a list of users that allow a user to choose multiple users from a list. Works with Input Layout and Actions blocks.\nProperties\n\nuser_types (optional): The types of users that are allowed to be selected. Defaults to [\"rev_user\", \"dev_user\"]. Possible values: \"rev_user\", \"dev_user\", \"sys_user\".\ninitial_rev_users_selected_options (optional): The initially selected customers, a list of DONv2 IDs.\ninitial_dev_users_selected_options (optional): The initially selected dev users, a list of DONv2 IDs.\ninitial_sys_users_selected_options (optional): The initially selected sys users, a list of DONv2 IDs.\nmax_selected_items (optional): The maximum number of users that can be selected.\n\nInherited properties\nInherited from Snap:\n\ntype (required): Type of the user picker component, should be set to \"user_picker\".\nblock_id (optional): A unique identifier for the snap. If not provided, a random ID is generated.\n\nInherited from Action:\n\naction_id (required): An identifier for the action. Should be unique in the snap.\naction_type (optional): Indicates whether the action is handled by the backend or client. This is mandatory to pass if you have an action to be performed. Possible values: \"remote\", \"client\".\n\nInherited from Focusable:\n\nfocus_on_load (optional): Indicates whether the component should be focused on load or not. Only 1 item can have the property set to true in the snap. Defaults to false.\n\nInherited from Placeholder:\n\nplaceholder (optional): A Plain Text element that defines the placeholder text shown on the element.\n\nInherited from Disabled:\n\ndisabled (optional): Indicates whether the element is disabled.\n\nExample\nUser picker snap with 1 selected user.\n\n1 {2   \"element\": {3     \"action_id\": \"user_picker\",4     \"action_type\": \"remote\",5     \"max_selected_items\": 5,6     \"type\": \"user_picker\"7   },8   \"label\": {9     \"text\": \"User\",10     \"type\": \"plain_text\"11   },12   \"type\": \"input_layout\"13 }\nAction payload\nInherits type, action_id, action_type and timestamp from Base Payload, type is set to \"user_picker\".\n1 {2   \"type\": \"user_picker\",3   \"action_id\": \"<the action identifier of the user picker>\",4   \"action_type\": \"<the type of the action as defined in the Snap>\",5   \"timestamp\": \"<timestamp as string in ISO 8601 format>\",6   \"value\": [\"<an array of user DONv2 IDs as strings>\"]7 }\nExample Payload\n1 {2   \"action_id\": \"user_picker\",3   \"action_type\": \"remote\",4   \"type\": \"user_picker\",5   \"value\": [\"don:identity:dvrv-us-1:devo/H66a8LUt:devu/5\"],6   \"timestamp\": \"2023-07-12T08:32:15.001Z\"7 }\nExample snap-kit\nIn this updated JSON, the divider component is added to create a visual separation. The checkboxes component allows for selecting multiple options. The part_picker component allows for selecting parts, and the tag_picker component allows for selecting tags. You can customize the options, initial selections, and other values according to your requirements.\n1 {2   \"object\": \"source_id\",3   \"body\": \"Giphy\",4   \"type\": \"timeline_comment\",5   \"snap_kit_body\": {6     \"snap_in_id\": \"snap_in_id\",7     \"snap_in_action_name\": \"giphy\",8     \"body\": {9       \"snaps\": [10         {11           \"type\": \"card\",12           \"title\": {13             \"text\": \"Hip hip hurray!\",14             \"type\": \"plain_text\"15           },16           \"elements\": [17             {18               \"type\": \"content\",19               \"elements\": [20                 {21                   \"type\": \"image\",22                   \"image_url\": \"https://example.com/image.jpg\",23                   \"alt_text\": \"Awesome GIF\"24                 }25               ]26             },27             {28               \"type\": \"divider\"29             },30             {31               \"type\": \"checkboxes\",32               \"options\": [33                 {34                   \"text\": {35                     \"text\": \"Option 1\",36                     \"type\": \"plain_text\"37                   },38                   \"value\": \"option1\"39                 },40                 {41                   \"text\": {42                     \"text\": \"Option 2\",43                     \"type\": \"plain_text\"44                   },45                   \"value\": \"option2\"46                 }47               ]48             },49             {50               \"type\": \"part_picker\",51               \"initial_parts_selected_options\": [\"part1\"],52               \"max_selected_items\": 253             },54             {55               \"type\": \"tag_picker\",56               \"initial_tags_selected_options\": [\"tag1\"],57               \"max_selected_items\": 358             },59             {60               \"type\": \"actions\",61               \"direction\": \"row\",62               \"justify\": \"center\",63               \"elements\": [64                 {65                   \"type\": \"button\",66                   \"action_id\": \"send\",67                   \"action_type\": \"remote\",68                   \"style\": \"primary\",69                   \"text\": {70                     \"text\": \"Send\",71                     \"type\": \"plain_text\"72                   },73                   \"value\": \"send\"74                 },75                 {76                   \"type\": \"button\",77                   \"action_id\": \"shuffle\",78                   \"action_type\": \"remote\",79                   \"style\": \"primary\",80                   \"text\": {81                     \"text\": \"Shuffle\",82                     \"type\": \"plain_text\"83                   },84                   \"value\": \"shuffle\"85                 },86                 {87                   \"type\": \"button\",88                   \"action_id\": \"cancel\",89                   \"action_type\": \"remote\",90                   \"style\": \"danger\",91                   \"text\": {92                     \"text\": \"Cancel\",93                     \"type\": \"plain_text\"94                   },95                   \"value\": \"cancel\"96                 }97               ]98             }99           ]100         }101       ]102     }103   }104 }"
    },
    {
        "id": "ART-874",
        "dataset_source": "devrev-dev0",
        "title": "DevRev CLI reference",
        "content": "\nThe following is a list of DevRev CLI commands:\nCLI version\nCheck the version of CLI:\n\nCLI help\nTo check all the available commands, run the following command:\n\nUse devrev [command] --help for more information about a command.\nAuthentication\nTo authenticate, run the following command:\n1 devrev profiles authenticate --org <DevOrg-slug-name> --usr <your-email@example.com>\nArguments:\n\n\n<DevOrg-slug-name>: The unique slug name of your DevOrg to which you want to log in.\n\n\n<your-email@example.com>: Your registered user email for profile.\n\n\nThe browser opens up and asks you to log in to DevRev. Once you log in, a local dev org profile is created and an access token is stored.\nAlternative\nTo set up authentication using the DevRev token, run the following command:\nUsing DevRev's interface, you can generate a DevRev token.\n1 echo $DevRevToken | devrev profiles set-token --org <dev-org-name> --usr <email>\nIt enables CLI operations on the dev org.\nSnap-in package\nCreate a snap-in package\nTo create a snap-in package, run the following command:\n1 devrev snap_in_package create-one --slug <slug name>\nFor example:\n1 devrev snap_in_package create-one --slug github | jq .\nWhen the snap-in package is created, its ID is stored in the snap-in context. Run the following command to view the ID:\n1 devrev snap_in_package show\nFor example:\n1 devrev snap_in_package show | jq .\n[id] is optional. If not provided, it uses the snap-in package ID from the snap-in context.\nDelete a snap-in package\nTo delete a snap-in package, run the following command:\n1 devrev snap_in_package delete-one [id]\nFor example:\n1 devrev snap_in_package delete-one | jq .\nIf id isn't provided, it picks up the snap-in package id from the snap-in context.\nList the snap-in package\nTo list the snap-in package, run the following command:\n1 devrev snap_in_package list\nFor example:\n1 devrev snap_in_package list | jq .\nLogs for the snap-in package\nTo view the snap-in package logs, run the following command:\n1 devrev snap_in_package logs\nFor example:\n1 devrev snap_in_package logs | jq .\nAdditional flags:\n\n--after string timestamp after which to fetch logs. For example, 2023-01-15T10:24:17Z. Defaults to 15 minutes earlier.\n--before string timestamp before which to fetch logs. For example, 2023-02-15T10:24:17Z. Defaults to now.\n--filters string Filters for the log message as a JSON. For example, {\"level\": {\"values\": [\"info\"]}, \"dev_org\": {\"exclude\": true, \"values\": [\"don:identity:<partition>:devo/<dev-org-id>\"]} }\n--limit uint32 Number of logs to fetch.\n\nSnap-in version\nCreate a snap-in version\nTo create a snap-in version, run the following command:\n1 devrev snap_in_version create-one --path <path to the snap-in code>\nFor example:\n1 devrev snap_in_version create-one --path ./code\nOnce the snap_in_version is created, its ID is stored in the snap-in context too.\nAdditional flags:\n\n--package <id> : Optional. If not provided, it uses the id from the snap-in context.\n--manifest <path>: specify the path to the manifest.yaml file using this flag.\n--archive <path> : specify the path to the archive file (build.tar.gz) using this flag.\n--create-package: creates a new snap_in_package in interactive mode and then creates a snap-in version using the newly created snap-in package id.\n\nShow the snap-in version\nTo show the snap-in version, run the following command:\n1 devrev snap_in_version show [id]\nFor example:\n1 devrev snap_in_version show | jq .\n[id] is optional. If not provided, it uses the snap_in_version id stored in the snap-in context.\nDelete the snap-in version\nTo delete a snap-in version, run the following command:\n1 devrev snap_in_version delete-one [id]\nFor example:\n1 devrev snap_in_version delete-one | jq .\n[id] is optional. If not provided, it uses the id stored in the snap-in context.\nList the snap-in versions\nTo list the snap-in version, run the following command:\n1 devrev snap_in_version list\nFor example:\n1 devrev snap_in_version list | jq .\nAdditional flags:\n\n--package <id>: Optional. If not provided, it uses the id from the snap-in context.\n\nSnap-in\nCreate a snap-in draft\nTo create a snap-in draft instance, run the following command:\n1 devrev snap_in draft --snap_in_version <id>\nFor example:\n1 devrev snap_in draft | jq .\nAdditional flags:\n\n--snap_in_version <id>: Optional. If not provided, it uses the snap-in version ID from the snap-in context.\n\nOnce the snap_in draft command is successful, it also generates the interface link.\nUpdate the snap-in with keyrings and inputs\nTo update the snap-in with keyrings and inputs, run the following command:\n1 devrev snap_in update [snap_in id]\nFor example:\n\n[id] is optional. If not provided, it uses the snap_in id stored in the snap-in context.\nFor non-interactive mode, use the following command with the appropriate values:\n1 echo '{\"connection\":[{\"name\":\"github-oauth\", \"reference\":\"test 1\"},{\"name\":\"github\", \"reference\":\"test 2\"}], \"global\":[{\"name\":\"post_message\",\"value\":\"some-value\"},{\"name\":\"put_message\",\"value\":\"some-value\"}]}' | devrev snap_in update\nActivate the snap-in\nTo activate a snap-in, run the following command:\n1 devrev snap_in activate [snap_in_id]\n[snap_in_id] is optional. If not provided, it uses the ID stored in the local profile.\nDeactivate the snap-in\nTo deactivate a snap-in, run the following command:\n1 devrev snap_in deactivate [snap_in_id] [--force]\n[snap_in_id] is optional. If not provided, it uses the ID stored in the local profile.\n--force flag deactivates the snap-in even if the deactivate hook fails. If the flag isn't specified, then the snap-in moves to the Error state if the deactivate hook fails.\nShow the snap-in details\nTo show the snap-in details, run the following command:\n1 devrev snap_in show [snap-in id]\n[snap_in_id] is optional. If not provided, it uses the ID stored in the local profile.\nList the snap-ins\nTo list the snap-ins, run the following command:\n\nFor example:\n1 devrev snap_in list | jq .\nDelete a snap-in\nTo delete a snap-in, run the following command:\n1 devrev snap_in delete-one [snap-in id] [--force]\n[snap-in id] is optional. If not provided, it uses the id stored in the snap-in context.\nThe --force flag deletes the snap-in even if the deactivate hook fails. If the flag isn't specified, then the snap-in moves to the Error state if the deactivate hook fails.\nSnap-in context\nThe CLI persists in the context of the CLI in a snap-in context. The context is used to store the following information per snap-in package slug:\n\nThe ID of the snap-in package owning the slug.\nThe ID of the last created/upgraded snap-in version, if any.\nThe ID of the latest deployed snap-in, if any.\n\nShow the snap-in context\nTo show the current snap-in context, run the following command:\n1 devrev snap_in_context show\nFor example:\n1 devrev snap_in_context show\nOutput:\n1 $ devrev snap_in_context show2 snap_in_context: <snap-in-context name>3 \tsnap_in: don:integration:<partition>:devo/<dev-oid>:snap_in/<snap-in-id>4 \tsnap_in_package: don:integration:<partition>:devo/<dev-oid>:snap_in_package/<snap-in-package-id>5 \tsnap_in_version: don:integration:<partition>:devo/<dev-oid>:snap_in_package/<snap-in-package-id>:snap_in_version/<snap-in-version-id>\nList the snap-in context\nTo list the snap-in context, run the following command:\n1 devrev snap_in_context list\nFor example:\n1 devrev snap_in_context list\nCheckout a snap-in context\nTo check a different snap-in context, run the following command:\n1 devrev snap_in_context checkout <snap_in_context_name>\nFor example:\n1 devrev snap_in_context checkout test_1"
    },
    {
        "id": "ART-875",
        "dataset_source": "devrev-dev0",
        "title": "Snap-ins upgrades",
        "content": "\nThe platform supports upgrading snap-in versions and corresponding snap-ins that haven't been published to the marketplace.\nUpgrades can be performed using the upgrade subcommand of snap_in_version.\nFor example:\n1 $ devrev snap_in_version upgrade -h2 Upgrades a snap-in version.3 4 Usage:5   devrev snap_in_version upgrade [flags]6 7 Flags:8       --archive string    Archive path9       --force             Force upgrade of snap-in version even if it isn't compatible for upgrade with existing version10   -h, --help              help for upgrade11       --manifest string   Manifest path12       --path string       Path to the directory containing the manifest file and source code for snap-in functions13       --version string    snap-in version ID14 \nYou can pass only the manifest if that's the only thing that has changed. If you have changed the source code of the snap-in functions, you can pass the path to the directory containing the manifest file and the source code. The path to the archive file containing the functions can also be passed if you have already created it.Only one path, either directory containing the manifest file or archive should be passed.\nThe actual snap-in version to be upgraded is specified using the --version flag.\nUpgrade behavior\nThe upgrade command checks if the updated version is compatible with the existing version. If it isn't compatible, the upgrade fails. If you want to force an upgrade, you can use the\u00a0--force\u00a0flag.\nIf the upgrade is compatible, the upgrade command does the following:\n\nCreate a new snap-in version with the new manifest and source code. If either of them isn't provided, the existing manifest or source code is used.\nUpgrade the snap-in to use the updated version.\nDelete the old snap-in version.\n\nIf the upgrade isn't compatible, the upgrade command does the following:\n\nFail if the --force flag isn't used.\nDelete the existing snap-in if the --force flag is used.\n\nVersion compatibility\nThe following table shows compatibility between snap-in versions:\nComponentCompatibility checkKeyringsFor existing keyrings:  - The description can be changed.  - The display name can be changed.  - New values for allowed types under that connection could be added, but existing allowed types can't be removed.   Any existing connection can be removed  A new connection can't be added.Event sourcesFor existing event sources:  - The description can be changed.  - The display name can be changed.  - Type can't be changed.  - Connection can't be changed but can be removed.  - Config can change whether or not changes reflect depending on the event source type. Test if you change the config.  - Instructions can change.   An existing event source can't be removed.  A new event source can be added.TagsFor existing tags:  - The description can be changed.   A new tag can be added.  Any existing tags can be removed.AutomationsFor existing automations:  - The description can be changed.  - The source can be changed.  - Allowed event types can be changed.  - The function to execute can be changed.   Any existing automation can be removed.  A new automation can be added.HooksFor existing hooks:  - The function to execute can be changed.   Any existing hooks can be removed.  A new hook can be added.FunctionsFor existing functions:  - The description can be changed.  - Actual code can be changed.   Any existing function can be removed.  A new function can be added.CommandsFor existing commands:  - All properties can be changed.   Any existing command can be removed.  A new command can be added.Snap-kit actionsFor existing snap-kit-actions:  - The description can be changed.  - The function can be changed.   Any existing snap-kit-action can be removed.  A new snap-kit-action can be added.Service accountThe display name of the service account can be changed.InputsInputs can't be changed.\nExample scenarios\nThe following are some examples of when you might need to run these upgrades:\n\nChanging the source code of a function used in the snap-in\nAdding a new automation\nAdding a new command\nChanging the description of a snap-in\nChanging the identity of a snap-in (changing the service account)\n\nIdempotency\nIf you run the upgrade command for the same snap-in version multiple times, the command does the following:\n\nReturns an already existing error if an upgrade is currently in progress or completed for the same snap-in version.\nWhen the previous upgrade failed, starts another upgrade if :\n\nthe manifest is different.\nthe --archive or --path parameter is passed to the upgrade command.\n\n\n\nChecking status of the upgrade\nWhen you run devrev snap_in_version list for the same package after the upgrade succeeds, you should see the updated snap-in version. In the list, you might see the old snap-in version and the updated snap-in version while the upgrade is in progress. In the case of a failure, you only see the old snap-in version."
    },
    {
        "id": "ART-886",
        "dataset_source": "devrev-dev0",
        "title": "Nudges | The Book of DevRev",
        "content": "One of the most important things any vendor can do is to drive engagement with their prospects, customers, and supporters. This can help keep them engaged, help with nurture as well as a plethora of other benefits. Commonly this is done via social media or manual interactions via various channels.\n\nHowever, why not do this where they are, in your app or site? In comes DevRev Nudges, which provides the ability to \u201cpush\u201d nudges to your users.\n\nWant to get straight to the video? Click HERE.\n\n\n  But first, what is a nudge?\nIt\u2019s a push offer or notification displayed to the user. In fact, there\u2019s one in the corner you can see on this page!\n\n\nThe DevRev Nudges feature provides a simple, convenient platform that allows you to do the following:\n\n\n  Configure nudges and display them anywhere where PLuG is installed (e.g. website, app, etc.)\n  Push engaging nudges directly to users\n  Enable interaction with the nudges to invoke certain actions\n  Have granular control of when and where nudges appear including pages, wildcards and frequency of display\n  View detailed engagement analytics\n\n\nNot only can this be useful for notifying users of important items like outages, new features, or news, but it may also be used to help nurture a user in growth cases.\n\nFor example, if we want to target users who hit a landing page (e.g. https://devrev.ai/thebook) with a distinct offer, we can configure a targeted DevRev nudge to show our offer, the image, and action (e.g. launch URL).\n\nI\u2019ve configured this and you can check it out HERE!\n\nTypes of Nudges\n\nDevRev Nudges currently supports two core types of nudges:\n\n\n  Banner\n    \n      A banner at the top of the webpage\n      Can only be text\n      Can contain an action on click\n    \n  \n  Spotlight\n    \n      A card located by the PLuG widget\n      Can contain an image\n      Can contain an action on click\n    \n  \n\n\nSee It In Action\n\nThe following video shows the DevRev Nudges feature in action:\n\n\n  \n\n\nHow to leverage\n\nConfiguration\n\nConfiguration of Nudges is simple and can be done in the DevRev app. To configure a nudge, perform the following steps:\n\n\n  Navigate to settings > Support > PLuG Nudges\n  \n    Click on spotlight or banner nudge\n\n  \n  \n    Input nudge content (will vary by type)\n\n  \n  \n    Click on Rules and input conditions.\n\n\n    \n      Multiple page rules and operators can be used to select a single page, a URL containing text, or a wildcard\n      The example rule above will only show the nudge when the exact URL is matched.\n      For wildcards, you can use the Contains operator\n      The Action can either launch a URL, launch the PLuG widget, or do nothing (e.g. notification only)\n    \n  \n  Validate preview\n  When satisfied, click on Publish\n  Enjoy your new nudge!\n\n\nAnalytics\n\nDevRev Nudges have full tracking including impressions, clicks, and more metrics to come.\n\nTo view nudge analytics, click on a nudge and navigate to the Analytics tab:\n\n\nTL;DR\n\n\n  DevRev Nudges provides a native way to notify, nudge and engage with users\n  Available anywhere where PLuG is deployed\n  Has potential to also be driven on additional event types"
    },
    {
        "id": "ART-888",
        "dataset_source": "devrev-dev0",
        "title": "Privacy Policy",
        "content": "Effective starting: December 1, 2022OverviewThis Privacy Policy was developed by DevRev, Inc. and its related entities (\"DevRev\", \"we\", \"us\" or \"our\") and is applicable to all visitors and registered or licensed users of our Website(s), our Products, and our Services (collectively \"DevRev Services\").We are committed to protecting your personal data and privacy and we follow the best practices and guidelines while collecting, processing, transferring and storing any Personally Identifiable Information (PII). Accordingly, we have developed this Policy in order to explain to you how we collect, secure, use, communicate and disclose, share and handle data pertaining to you.By using or registering on the DevRev website (https://devrev.ai) or the DevRev app (app.devrev.ai) or any other DevRev Services, you consent to the collection, use and processing of any data pertaining to you as described in this privacy policy.Why do we collect your information?We collect some information related to you automatically while you are using the DevRev website or app and some information directly from you. We collect your for the following reasons:To confirm your identity. We need to identify you uniquely and for that purpose we use your PII, including your email address.Service provision. We need to use your PII to provide the services through the DevRev platforms. Here are some instances: your country is used to identify the jurisdiction you belong to so that we can handle your data, and provide services adhering to applicable laws. If you request support, we use your contact details to get in touch with you. If you want to pay for a service, we use your payment details to process that payment.To improve and customize your content. In order to provide the best user experience, based on the familiarity level of the user with the DevRev platform and the use cases they try to implement.Analyze how the DevRev platform is being used. We rely on analytics of youbrowser based activity and applications to improve the performance of our platform. Among examples: we use analytics to evaluate design decisions, find bugs in the systems, and recommend actions and features to users. These are collected in an anonymous manner.To update you on our services. If there are updates to your service, important information you need to know, or if we think you would be interested in our technology and what we\u2019re doing with it, we\u2019ll get in touch with you using your contact details. You can unsubscribe from our marketing emails at any time by either clicking on the unsubscribe link at the bottom of the email.How do we collect your information?Information we collect automatically: As is the case with almost all services and websites available on the Internet, we collect some information related to you automatically while you are using the DevRev Services. Here is the information we collect automatically when you visit the DevRev website or product:Your I.P. address, your browser type, device info, the time and frequency you access our site, and the URL you came from. This type of generic information won\u2019t reveal your identity as a visitor but is still useful to us to analyze the user regions, frequently visited portions of our site and develop device specific improvements.The interactions with app.devrev.ai as a logged-in user. This information is important to us to analyze the ways in which you interact with the DevRev App, to understand the users\u2019 needs and to make our service better suited to those needs. Such usage data does not identify you personally.The application logs that are corresponding to the activities you do on app.devrev.ai as a logged-in user. These logs will be tracked against your corresponding DevRev identity for auditing and troubleshooting purposes.When you sign up or/ sign in to the app.devrev.ai from an external identity provider, we store a persistence reference to your account at the external identity provider, provided to the DevRev platform by your identity provider.Information we collect directly: We collect the following information from you directly when you interact with the DevRev platform at different stages. When you sign up on the DevRev website or on the DevRev App at app.devrev.ai we collect your display name, country, and email address with your consent. If you are subscribing to paid services we collect your payment information.Information you provide: When you interact with the DevRev platform at different stages, you may decide to provide certain information to the DevRev platform with respect to users under your control. In such a case DevRev platform is only activating as a processor of the corresponding Personally Identifiable Information (PII) and you take the responsibility of taking any appropriate consent from the users, before sharing any PII with the DevRev platform.When you import data from any of the available connectors such as to the DevRev platform, the attributes each connector collects from the corresponding external services are defined by the connector itself:The connector may import the following attributes from the corresponding connector account:groups, roles, user names and email addresses; issues; comments; attachments; projects including configurations.The connector may also import the following attributes from the corresponding organization: users, teams;; source code; milestones; issues; comments; projects; pull-requests; commits.Please note that any information you provide when using certain services that are open, public or forum including (without limitation) any blog, community or discussion board, is not considered confidential, does not constitute \u201cPersonal Information\u201d, and is not subject to protection under the Privacy Policy. Since such public environments are accessible by third parties, it is possible that third parties may collect and collate and use such information for their own purposes. You should accordingly be careful when deciding to share any of your \u201cPersonal Information\u201d in such public environments. We are not liable to you or any third party for any damages that you or any third party may suffer howsoever arising from your disclosure of \u201cPersonal Information\u201d in such a public environment. Accordingly, any disclosure of information in a public environment is at your own risk.How is the information used?We use the information we collect about you (including PII to the applicable extent) for a variety of purposes, including to:Provide, operate, maintain, improve, and promote DevRev Services;Enable you to access and use DevRev Services;Process and complete transactions, and send you related information, including purchase confirmations and invoices;Communicate with you, including responding to your requests, comments, questions; providing customer service and support; providing you with information about updates, new launches, improvements, services, features, surveys, newsletters, offers, promotions, contests and events; providing other news or information about us and our select partners; and sending you technical notices, updates, security alerts, and support and administrative messages. Generally, you have the ability to opt out of receiving any promotional communications.Monitor and analyze trends, usage, and activities in connection with DevRev Services and for marketing or advertising purposes;Investigate and prevent fraudulent transactions, unauthorized access to DevRev Services, and other illegal activities;Personalize DevRev Services, including by providing content, features, or suggestions that match your interests and preferences;Enable you to communicate, collaborate, and share content with users you designate;For any other purposes that we notify you about.AnalyticsWe make extensive use of analytics information to understand how DevRev Services are being configured and used, how they can be improved for the benefit of all of our users, and to develop new products and services.Securing PIIDevRev is committed to secure your personal information while collecting, processing, transferring and storing. All personal information is transmitted over a secured channel with Transport Layer Security (TLS) and stored securely. Access to the PII via APIs are strictly restricted by access control policies. We treat data as an asset that must be protected against loss and unauthorized access. Please be aware that while we take reasonable efforts to guard your PII, no security system is impenetrable and due to the inherent nature of the Internet as an open global communications mechanism, we cannot guarantee that information, during transmission through the Internet or while stored on our systems or otherwise in our care, will be absolutely safe from intrusion by others, such as hackers.Information sharing and disclosure.We do not share or disclose your PII with third-parties, except as described in this policy, We share information with third parties that help us operate, provide, improve, integrate, customize, support and market our Services. We do not sell your PII, and we do not share your PII with third-parties for their marketing purposes without your permission. This is how your information may be shared:With your consent: We may share your PII with third-parties when you have consented to it.Business partners and service providers: We may work with third-party service providers to provide storage, infrastructure, analysis or other services, who may have access to or process your PII as part of providing those services for us.Legal compliance, protection and security: We may disclose your Information (including your PII) to a third-party if (a) we believe that disclosure is reasonably necessary to comply with any applicable law, regulation, legal process or governmental request; (b) to protect the security or integrity of DevRev's products and services; (c) to enforce our agreements, policies and terms; (d) to protect DevRev, our customers or the public from harm or illegal activities; or (e) to respond to an emergency which we believe in the good faith requires us to disclose information to assist in preventing the death or serious bodily injury of any person.Business reasons: We may share or transfer your information (including your PII) in connection with, or during negotiations of, any merger, sale of company assets, financing, or acquisition of all or a portion of our business to another company.Anonymized or aggregate data: We may also share aggregated or anonymized information that does not directly identify you with the third-parties described above.Third-party applications: You may choose to make use of third-party add-ons in conjunction with DevRev Services. Third-party add-ons are software written by third-parties to which you grant access privileges to your information (including your PII). We do not control the processing of information that you choose to share with such third-party add-on providers even though they may be available through the DevRev Services. This Privacy Policy does not cover the collection or use of your data by third-party add-ons and you should review their terms separately.How long we keep information?How long we keep information we collect about you depends on the type of information, as described in further detail below. After such time, we will either delete or de-identify your information or, if this is not possible (for example, because the information has been stored in backup archives), then we will securely store your information and isolate it from any further use until deletion is possible.Account information: We retain your account information for as long as your account is active and a reasonable period thereafter in case you decide to re-activate the Services. We also retain some of your information as necessary to comply with our legal obligations, to resolve disputes, to enforce our agreements, to support business operations, and to continue to develop and improve our Services. Where we retain information for Service improvement and development, we take steps to eliminate information that directly identifies you, and we only use the information to uncover collective insights about the use of our Services, not to specifically analyze personal characteristics about you.Information you share on the Services: If your account is deactivated or disabled, some of your information and the content you have provided will remain in order to allow your team members or other users to make full use of the Services. For example, we continue to display messages you sent to the users that received them and continue to display content you provided, but when requested, details that can identify you will be removed.Managed accounts: If the Services are made available to you through an organization (e.g., your employer), we retain your information as long as required by the administrator of your account.Marketing information: If you have elected to receive marketing emails from us, we retain information about your marketing preferences for a reasonable period of time from the date you last expressed interest in our Services, such as when you last opened an email from us or ceased using your DevRev account. We retain information derived from cookies and other tracking technologies for a reasonable period of time from the date such information was created.How to access and control your information: You have certain choices available to you when it comes to your information. Below is a summary of those choices, how to exercise them and any limitations.Your Choices:You have the right to request a copy of your information, to object to our use of your information (including for marketing/growth purposes), to request the deletion or restriction of your information, or to request your information in a structured, electronic format. Below, we describe the tools and processes for making these requests. You can exercise some of the choices by logging into the Services and using settings available within the Services or your account. Where the Services are administered for you by an administrator (see \"Notice to End Users\" below), you may need to contact your administrator to assist with your requests first. For all other requests, you may contact us as provided in the \u201cContact Us\u201d section below to request assistance.Your request and choices may be limited in certain cases: for example, if fulfilling your request would reveal information about another person, or if you ask to delete information which we or your administrator are permitted by law or have compelling legitimate interests to keep. Where you have asked us to share data with third parties, for example, by installing third-party apps, you will need to contact those third-party service providers directly to have your information deleted or otherwise restricted. If you have unresolved concerns, you may have the right to complain to a data protection authority in the country where you live, where you work or where you feel your rights were infringed.Access and update your information: Our Services and related documentation give you the ability to access and update certain information about you from within the Service. For example, you can access your profile information from your account and search for content containing information about you using keyword searches in the Service. You can update your profile information within your profile settings and modify content that contains information about you using the editing tools associated with that content.Deactivate your account: If you no longer wish to use our Services, you or your administrator may be able to deactivate your Services account. If you wish to deactivate your own account, that setting is available to you in your account settings. Otherwise, please contact your administrator. If you are an administrator and are unable to deactivate an account through your administrator settings, please contact the appropriate support team (see DevRev support pages). Please be aware that deactivating your account **does not delete your information**; your information remains visible to other Service users based on your past participation within the Services. For more information on how to delete your information, see below.Delete your information: Our Services give you the ability to delete certain information about you from within the Service. For example, you can remove content that contains information about you using the key word search and editing tools associated with that content, and you can remove certain profile information within your profile settings. Please note, however, that we may need to retain certain information for record keeping purposes, to complete transactions or to comply with our legal obligations.Request that we stop using your information: In some cases, you may ask us to stop accessing, storing, using and otherwise processing your information for purposes mentioned in this Privacy Policy and for marketing and advertising purposes where you believe we don't have the appropriate rights to do so. For example, if you believe a Services account was created for you without your permission or you are no longer an active user, you can request that we delete your account. Where you gave us consent to use your information for a limited purpose, you can contact us to withdraw that consent, but this will not affect any processing that has already taken place at the time. You can also opt-out of our use of your information for marketing purposes by contacting us. When you make such requests, we would need time to investigate and facilitate your request. If there is delay or dispute as to whether we have the right to continue using your information, we will restrict any further use of your information until the request is honored or the dispute is resolved, provided your administrator does not object (where applicable). If you object to information about you being shared with a third-party app, please disable the app or contact your administrator to do so. If you have permitted us to share your information with a third-party app and would want to withdraw your consent thereafter, you will need to contact those third-party service providers directly to have your information deleted or otherwise restricted.Opt-out of communications: You may opt out of receiving promotional communications from us by using the unsubscribe link within each email, updating your email preferences within your Service account settings menu, or by contacting us to have your contact information removed from our promotional email list or registration database. Even after you opt out from receiving promotional messages from us, you will continue to receive transactional messages from us regarding our Services. You can opt out of some notification messages in your account settings. Please note, you will continue to receive generic ads.You may be able to opt out of receiving personalized advertisements from other companies who are members of the Network Advertising Initiative or who subscribe to the Digital Advertising Alliance's Self-Regulatory Principles for Online Behavioral Advertising. For more information about this practice and to understand your options, please visit: http://www.aboutads.info, http://optout.networkadvertising.org/ and http://www.youronlinechoices.eu.Send \"Do Not Track\" Signals: Some browsers have incorporated \"Do Not Track\" (\u201cDNT\u201d) features that can send a signal to the websites you visit indicating you do not wish to be tracked. Because there is not yet a common understanding of how to interpret the DNT signal, our Services do not currently respond to browser DNT signals. You can use the range of other tools we provide to control data collection and use, including the ability to opt out of receiving marketing from us as described above. Having content embedded on DevRev's website such as a social feature may set cookies on your browser and/or obtain information about the fact that a web browser visited a specific Devrev website with a certain IP address. Third parties can't collect any other PII from our website unless you directly provide it to them.Data portability: Data portability is the ability to obtain some of your information in a format you can move from one service provider to another (for instance, when you transfer your mobile phone number to another carrier). Depending on the context, this applies to some of your information, but not to all of your information. Should you request it, we will provide you with an electronic file of your basic account information and the information you create on the spaces under your sole control.How we transfer information we collect internationallyInternational transfers of information we collectWe collect information globally and may transfer, process and store your information outside of your country of residence, to wherever we or our third-party service providers operate for the purpose of providing you the Services. Whenever we transfer your information, we take steps to protect it.International transfers within the DevRev Companies: To facilitate our global operations, we transfer information globally and allow access to that information from countries in which the DevRev owned or operated companies and have operations for the purposes described in this policy. These countries may not have equivalent privacy and data protection laws to the laws of many of the countries where our customers and users are based. When we share information about you within and among DevRev corporate affiliates, we make use of standard contractual data protection clauses, which have been largely adopted by countries worldwide or other appropriate legal mechanisms to safeguard the transfer.International transfers to third parties: Some of the third parties described in this privacy policy, which provide services to us under contract, are based in other countries that may not have equivalent privacy and data protection laws to the country in which you reside. When we share information of customers in the European Economic Area, the UK, or Switzerland, we make use of the European Commission-approved standard contractual data protection clauses, binding corporate rules for transfers to data processors, or other appropriate legal mechanisms to safeguard the transfer.Notice to End UsersMany of our products are intended for use by organizations. Where the Services are made available to you through an organization (e.g. your employer), that organization is the administrator of the Services and is responsible for the accounts and/or Service sites over which it has control. If this is the case, please direct your data privacy questions to your administrator, as your use of the Services is subject to that organization's policies. We are not responsible for the privacy or security practices of an administrator's organization, which may be different than this policy.Administrators are able to:require you to reset your account password;restrict, suspend or terminate your access to the Services;- access information in and about your account;access or retain information stored as part of your account;install or uninstall third-party apps or other integrationsIn some cases, administrators can also:restrict, suspend or terminate your account access;change the email address associated with your account;change your information, including profile information;restrict your ability to edit, restrict, modify or delete informationEven if the Services are not currently administered to you by an organization, for e.g., if you use an email address provided by an organization (such as your work email address) to access the Services, then the owner of the domain associated with your email address (e.g. your employer) may assert administrative control over your account and use of the Services at a later date. You will be notified if this happens.If you do not want an administrator to be able to assert control over your account or use of the Services, you should deactivate your membership with the relevant enterprise, or use your personal email address to register for or access the Services. If an administrator has not already asserted control over your account or access to the Services, you can update the email address associated with your account through your account settings in your profile. Once an administrator asserts control over your account or use of the Services, you will no longer be able to change the email address associated with your account without administrator approval.Please contact your organization or refer to your administrator\u2019s organizational policies for more information.California Requirements(Exercising your rights: If you are a California resident, there are some additional rights that may be available to you under the California Consumer Protection Act (\u201cCCPA\u201d) such as the right to deletion and the right to request access to the categories of information we have collected about you. We encourage you to manage your information, and to make use of the privacy controls we have included in our Services. You will not be discriminated against for exercising any of your privacy rights under the CCPA. In order to protect your information from unauthorized access or deletion, we may require you to provide additional information for verification. If we cannot verify your identity, we will not provide or delete your information.)Exercising Your Rights.In accordance with the CCPA, and subject to exceptions, California Consumers (as that term is defined in the CCPA) have the following rights:Access. You have the right to request that DevRev disclose and deliver the categories of Personal Information DevRev has collected about you, or the specific pieces of Personal Information the business has collected about you;Deletion. You have the right to request the deletion of your Personal Information in certain situations, except where the law allows a business to maintain a Consumer\u2019s Personal Information, including where the Personal Information is necessary to perform a contract between the business and the consumer;Opt-Out. You have the right to opt-out of the sale of your Personal Information, but as stated above.Non-Discrimination. You have the right to not be discriminated against, for exercising any of your privacy rights under the CCPA.In order to protect your information from unauthorized access or deletion, we may require you to provide additional information for verification. If we cannot verify your identity, we will not provide or delete your information. We encourage you to manage your information, and to make use of the privacy controls we have included in our ServicesSharing your personal information: We don't sell any of your personal information. We do share your information with third-party apps. We also show ads that we think are relevant. Accordingly no personal information has been sold/shared in the past 12 months subject to this Privacy Policy.Processing your information: We may process your information for \"business purposes\" under the CCPA - such as to protect against illegal activities, and for the development of new products, features, and technologies.If you have any questions or would like to exercise your rights under the CCPA, you can reach out to us at support@devrev.aiUpdates and modification to the Privacy PolicyWe reserve the right to change the Privacy Policy from time to time as seen fit and the last updated date will be mentioned on the page. If there is any substantive change to this Privacy Policy, you will be notified by an email sent to you at your most recently provided E-mail address, a prominent notice posted on the website homepage, or by other means in accordance with the applicable law. ( Since we will not be notifying you individually when the Policy is revised, ) you are advised to re-read the Privacy Policy on a regular basis.Your continued use of the DevRev Services will signify your acceptance of any amendment to these terms. Should it be that you do not accept any of the modifications or amendments to the Privacy Policy, you may terminate your use of DevRev Services.Our policy towards childrenThe Services are not directed to individuals under 13. We do not knowingly collect personal information from children under 13. If we become aware that a child under 13 has provided us with personal information, we will take steps to delete such information in accordance with the Children's Online Privacy Protection Act of 1998 (\"COPPA\"). If you become aware that a child has provided us with personal information, please contact us.European Economic Area (\"EEA\") Requirements.If you are an individual in the European Economic Area (EEA), we collect and process information about you only where we have legal bases for doing so under applicable EU laws. The legal bases depend on the Services you use and how you use them.If you have questions or concerns about how your information is handled, please direct your inquiry to DevRev, which we have appointed to be responsible for facilitating such inquiries or, if you are a resident of the European Economic Area, please contact our EU Representative.Questions.For further information about our privacy policy or any concerns or complaints, please contact us via email: support@devrev.ai.Last revised on: 1st December 2022"
    },
    {
        "id": "ART-890",
        "dataset_source": "devrev-dev0",
        "title": "Bulk ticket uploader",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nValidations while creating tickets How to use bulk ticket uploader\nBulk ticket uploader.\n\nThe bulk ticket uploader enables you to upload multiple tickets from a CSV file to DevRev. It's useful when migrating tickets from a third-party system to DevRev or creating tickets in bulk from a CSV file.\n\nFor detailed information about DevRev tickets, refer to Tickets.\n\nValidations while creating tickets.\n\nThe following validations are done while importing or creating a ticket in DevRev:\n\nA maximum of 50 tickets can be created at once. If more than 50 tickets are listed in a CSV file, the system doesn't upload any tickets.\nThe title field is mandatory. Rows with blank titles are skipped.\nA ticket isn't created if a part or user ID mentioned in a row doesn't exist. Other tickets aren't impacted by this.\nIf the CSV lists multiple owners, only the first is set as the owner in the DevRev ticket.\n\nHow to use bulk ticket uploader.\n\nIn the Discussion. tab of an account, ticket, or part, enter /upload_tickets.. A Ticket Creator Bot. appears.\n\nFrom the Select tickets' owners (max 1). drop-down menu, select the ticket's owner name.\n\nFrom the Select a part to assign to tickets. drop-down menu, select a part for the tickets. If the bulk ticket upload is done using a part, the part is automatically selected.\n\nIn the Customer ID. drop-down menu, select from the available workspaces associated with this account. If the bulk ticket upload is done using an account, the relevant workspaces are shown in the Customer ID. drop-down menu.\n\nTo upload the CSV file, click Upload. , browse, and select the file. The CSV file is uploaded.\n\nClick Submit..\n\nThe Ticket Creator Bot. processes the CSV file and creates tickets with the defined parameters. The newly created tickets are listed displaying the ticket number and title.\n\nPrevious Automate opportunities Next Convergence\nOn this page\n\nValidations while creating tickets How to use bulk ticket uploader\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-891",
        "dataset_source": "devrev-dev0",
        "title": "Email",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nYour inbox after email integration Let's set up the email integration for you Create a new connection Configure email integration Configure email forwarding Conversation and ticket creation for emails\nEmail.\n\nSimplify the process of managing incoming emails, creating conversations, and handling tickets. DevRev's email integration works with various email providers, including Google Workspace, Microsoft Outlook, Yahoo Mail, Zoho Mail, and custom domain email services. DevRev enables you to connect your support, sales, or any email address ensuring that all queries are efficiently handled without ever leaving the DevRev app. When an external user sends you an email, DevRev uses their email address to determine their association with your workspace and generates either a conversation or a ticket directly in your workspace. This process streamlines the management of incoming email requests, ensuring they are addressed promptly and accurately.\n\nFor more information, refer to the Email snap-in on the DevRev marketplace.\n\nYour inbox after email integration.\n\nWhen an external user sends an email to your organization's support email address, DevRev identifies whether the user is a part of your workspace with the help of their email address and creates a conversation or a ticket in your workspace. If a user with the originating email address already exists in the workspace, the workspace and customer identity is determined by the email address rather than by the email domain. If a user with the email address does not exist in the workspace, DevRev creates the user in your workspace, and all their conversations/tickets can be found there. The conversations show up in Support. > Inbox. and the tickets in Support. > Tickets..\n\nAdhering to DMARC standards.\n\nBy verifying the association of external users with your workspace through their email addresses, DevRev establishes a secure and efficient method for generating conversations or tickets. Regardless of your chosen email service, DevRev empowers you to build trust with mailbox providers and recipients, reducing the likelihood of your emails being marked as spam and safeguarding your brand identity by adhering to DMARC standards.\n\nReply to the email never having to leave the conversation. Meanwhile, the DevRev AI bot sends an automated reply, borrowing some time for response and requesting any additional information that may help in the customer\u2019s inquiry.\n\nNow, when customers reach out to your organization, they receive replies directly from your organization's email address. This ensures a professional and personalized experience, strengthening your brand image and fostering better customer engagement.\n\nLet's set up the email integration for you.\n\nFollow these steps to get your own unified space for managing all end-user communication.\n\nCreate a new connection.\n\nIf your organization uses Google as the mail service provider, refer to the Gmail connection. tab for details about creating a connection.\n\nIf your organization uses a custom domain or other mail providers, refer to the Email connection. tab for details about creating a connection.\n\nEmail connection Gmail connection\n\nIn DevRev app, go to Integrations. > Snap-ins. and click Connections..\n\nIn the top-right corner, select + Connection. , choose Email service. and enter your connection name and domain name. Click Next..\n\nThis opens the Email Domain Configuration. box. Here you can see the records that you have to add to your domain\u2019s DNS settings.\n\nIn the DNS settings of your domain provider, copy and paste the Name. and the Value. from your DevRev app, selecting the appropriate record Type.. Select the TTL. as required. Repeat the steps for all 6 records and click Save.. Then click Verify. on your DevRev app.\n\nThe verification process may take some time. If the verification does not work instantly, retry after some time.\n\nThis confirmation indicates that the connection is ready.\n\n1 DNS records configuration verified successfully\nAdd DNS records.\n\nThis section provides a step-by-step guide on adding DNS records for your email provider, ensuring smooth email integration and authentication.\n\nGoogle Workspace Office 365 Yahoo Mail Zoho Mail\nLog in to Google Domains.\nSelect the domain that you want to change and go to Menu. > DNS. > Resource records. > Custom records. > Manage records.. If you don\u2019t have any resource records yet, click Custom Records..\nFor each record set, edit the Type, TTL. , or Data. fields directly. Alternatively, you can create the new records by clicking Create new record. and selecting the types mentioned for each record in the Email Domain Configuration. box from the DevRev app.\nCopy and paste the \"name/host\" and \"value\" from the box into their respective fields and save the changes.\nTo add another record, click Create new record. and then Save.. Confirm that the altered resource record is now visible.\nClick Verify. in your DevRev app.\n\nTroubleshoot DNS record configuration.\n\nWhen setting up DNS records for DMARC configuration, it's important to ensure the correct format to avoid any issues. Here are some common troubleshooting tips for setting up DNS records:\n\nSome DNS providers automatically append the domain name at the end when adding DNS keys. For example, if your domain is support@example.com ensure that the DNS key is added as support@example.com and not support@example.com.example.com. This duplication can cause validation errors.\n\nDouble-check that the DNS record is correctly formatted according to the instructions provided by DevRev. Any mistakes or incorrect formatting can lead to DNS record validation failures.\n\nTake note of the TTL value specified during the DNS record configuration. Changes to DNS records may take some time to propagate across different DNS servers due to the TTL. Be patient and allow sufficient time for the changes to take effect.\n\nIf you encounter any issues with DNS record validation, you can try clearing your DNS cache from your servers or workstations. This helps ensure that your DNS queries fetch the latest DNS information without any cached records causing conflicts.\n\nConfigure email integration.\n\nGo to Settings. > Snap-ins.. In the top-right corner, click Explore Marketplace..\nScroll down the page to find the Email Integration. snap-in and click Install..\nIn the Connections. tab, select the connection that you created. You could create a new connection here as well.\nIn the Configuration. tab, enter your organization\u2019s email address in the Primary Email Address. field in the following format: Company name <company-name@example.com>.\nSelect Ticket. or Conversation. from the menu in Primary Use Case.. For guidelines on how to make this selection, see conversation and ticket creation for emails.\n(Optional) Add your organization's additional email address in Additional Emails for Tickets. and Additional Emails for Conversations. if you want to create multiple tickets/conversations.\nSelect Default part. and Default Owner. to which the tickets/conversations are assigned.\n(Optional) Enable Allow automations to send emails. and personalize the Auto reply message. to greet your customers when they reach out for support. Tailor the message to include relevant information or instructions that may assist them further.\nEnable Link new contacts to account. to use the domain of the sender's email to link them to an existing account or create a new account.\n\nDevRev does not create accounts for common domains such as gmail.com or yahoo.com.\n\nYou can also specify a signature (plain text or HTML) to append to outgoing emails from the support address.\n\nExample email HTML signature\n1 < table\n2 style = \"font-family: Arial, Helvetica, sans-serif; font-size: 12px; border: solid; border-width: 1px; border-color: gray\"\n3 >\n4 < tr >\n5 < td style = \"padding-right: 20px\" >\n6 < img\n7 src = \"https://d36urhup7zbd7q.cloudfront.net/a/bb923e8f-0044-4646-a84e-3a8128d90971.png#logo\"\n8 alt = \"DevRev\"\n9 width = \"30\"\n10 />\n11 </ td >\n12 < td style = \"padding-right: 20px\" > DevRev </ td >\n13 < td style = \"padding-right: 20px\" >\n14 < a href = \"https://devrev.ai\" > Support chat </ a >\n15 </ td >\n16 < td style = \"padding-right: 20px\" >\n17 < a href = \"mailto:support@devrev.ai\" > support@devrev.ai </ a >\n18 </ td >\n19 </ tr >\n20 </ table >\nShow more\nResult.\n\nWhen you have set the desired parameters, click Save. and Install Snap-in..\n\nConfigure email forwarding.\n\nIn the DevRev app, under the Instructions. tab you can see a forwarding email address displayed as v___________@hooks.devrev.ai. This is the address where you can forward your support emails.\n\nTo create a conversation using the forwarding email address v___________@hooks.devrev.ai in your Inbox, the emails must be forwarded from your email provider.\n\nConfigure your email provider, such as Microsoft Outlook, or any other email service, to forward incoming emails from your support email address to v___________@hooks.devrev.ai. This ensures that all customer communication is routed to the DevRev app.\n\nIf you are using Google Groups to send emails then you must be a part of the group and have permission to send emails to the Google Group. Add your support address as a member of the Google Group and follow the steps mentioned in Google Workspace.\n\nGoogle Workspace Office 365 Yahoo Mail Zoho Mail\nGo to the settings of your support Gmail account.\nNavigate to Forwarding and POP/IMAP. and add the forwarding email address v___________@hooks.devrev.ai. Click Next..\nClick Proceed. when you are redirected to a new webpage. You are asked for a confirmation code sent to this forwarding address.\nOn the DevRev app, go to Support. > Tickets. if Primary Use Case. is Tickets. ; else go to Inbox. is used when the Primary Use Case. is Conversation.. Find and open your verification message here.\nOpen the given link to confirm the request. Make sure you click the link that allows your support address to be forwarded to v___________@hooks.devrev.ai.\nGo back to your Gmail forwarding settings, select Forward a copy of incoming mail. and Save Changes. to get this confirmation message on the top.\n\nNow, when customers reach out to your organization, they receive replies directly from your organization's email address. This ensures a professional and personalized experience, strengthening your brand image and fostering better customer engagement.\n\nConversation and ticket creation for emails.\n\nWhether to create a conversation or a ticket depends on the nature of the emails received at a specific email address. Refer to the table below for guidelines to help you make this determination.\n\nThis configuration operates at the email address level, ensuring that all emails are sent to the designated address consistently.\n\nYou can choose either a conversation or ticket creation method for a single email address, but not both simultaneously. When needed, you can link a conversation to a ticket. This is particularly useful if you decide to use conversations for all your communication requirements.\n\nCharacteristic Conversation Ticket Nature of communication For ongoing dialogs where timely, back-and-forth responses are anticipated. For specific problems, issues, or requests needing structured resolution. Duration & resolution Resolved in a single session or a few quick responses. Issues that take time, involve multiple steps or need intervention from different teams. Tracking & reporting needs Primarily to document a discussion without extensive tracking. Requires structured follow-ups, escalations, and clear paths to resolution. Examples Product inquiries, general feedback, clarification requests. Technical issues, billing disputes, service complaints, and complex inquiries.\n\nRead more about conversations and tickets.\n\nPrevious Google Calendar Next Slack\nOn this page\n\nYour inbox after email integration Let's set up the email integration for you Create a new connection Configure email integration Configure email forwarding Conversation and ticket creation for emails\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-893",
        "dataset_source": "devrev-dev0",
        "title": "Object customization (Beta)",
        "content": "\nDevRev\u2019s customization framework offers workspace admins the ability to customize DevRev objects to your organization\u2019s needs.\nExtend entities in your DevRev workspace by adding new custom fields or defining new subtypes from existing objects.\nGlossary\n\nLeaf type: A DevRev object type. For example, issue, ticket.\nSubtype: A flavor of a leaf type. For example, incident can be a subtype of issue.\n\nCustomization options\nTenant custom fields\nUse tenant custom fields to extend a DevRev object type with new fields that apply to all records of the object type in your application workspace.\n\nSubtypes\nUse subtypes to create specific flavors of a DevRev object type that includes an additional fieldset and stock fields on the object type.\nOnce subtypes are defined, your application can maintain records of the original object type, and optionally a subtype with its defined fields.\n\nConcepts\nSchema fragments\nObjects in DevRev are customized with \"schema fragments\".\nWhen an object record is created or updated, multiple such schema fragments can be mixed to define the aggregate custom fields available to that record.\nMultiple object records can reference the same fragment specifying a set of custom fields.\n\nCustom schema fragments are immutable, and thus updating a fragment means creating a new one.\nTwo older objects (1 and 2) and one newer object referencing different fragment versions.\n\nReferences\nReferences to each fragment describing the object fields are stored with the object. An object can contain references to a subtype fragment and a tenant fragment.\nPrefixing\nFields defined by different schema fragments are held in different namespaces in an object. Stock fields, subtype fields, tenant custom fields, and app custom fields live in their respective namespaces to prevent field name conflicts. Specifically:\n\nNames for tenant custom fields are in the form tnt__<name>.\nNames for subtype custom fields are of the form ctype__<name>.\n\nFor illustration, a fully populated object might look like this:\n1 {2     \"id\": \"don:core:dvrv-us-1:devo/test:issue/1\",3     \"dev_oid\": \"don:identity:dvrv-us-1:devo/test\",4     ... // other stock fields5 6     // references to schema fragments used7     \"schema_fragments\": [8         \"don:core:dvrv-us-1:devo/test:tenant_fragment/1\"9         \"don:core:dvrv-us-1:devo/test:custom_type_fragment/1\",10     ],11 12     // map of custom fields13     \"custom_fields\": {14         \"tnt__field_1\": 1234,15         \"tnt__field_2\": \"enterprise custom data\",16         \"ctype__field_1\": 567817         ...18     }19 }\nUsing the APIs for customization\nCreating a custom schema fragment\nAn example usage of custom fields is to extend the DevRev schema for ticket to track incidents across various environments (dev, QA, prod). This can be done by creating a subtype called \"Incident\". The following API call describes the custom attributes introduced by the subtype.\n1 curl --location 'https://api.devrev.ai/schemas.custom.set' \\2 --header 'Content-Type: application/json' \\3 --header 'Accept: application/json' \\4 --header 'X-Devrev-Scope: beta' \\5 --header 'Authorization: <TOKEN>' \\6 --data '{7     \"type\": \"custom_type_fragment\",8     \"description\": \"Attributes for tracking an incident\",9     \"leaf_type\": \"ticket\",10     \"subtype\": \"Incident\",11     \"fields\": [12         {13             \"field_type\": \"enum\",14             \"allowed_values\": [15                 \"Yes\",16                 \"No\"17             ],18             \"is_filterable\": true,19             \"name\": \"regression\",20             \"is_required\": true,21             \"default_value\": \"No\",22             \"ui\": {23                 \"display_name\": \"Regression\",24             }25         },26         {27             \"field_type\": \"text\",28             \"name\": \"pia\",29             \"ui\": {30                 \"display_name\": \"PIA\",31             }32         },33         {34             \"field_type\": \"array\",35             \"base_type\": \"enum\",36             \"allowed_values\": [37                 \"Dev\",38                 \"QA\",39                 \"Prod\"40             ],41             \"name\": \"impacted_environments\",42             \"ui\": {43                 \"display_name\": \"Impacted Environments\",44             }45         }46     ]47 }'\nSupported custom field types\nThe following custom field types are supported -\nTypeExampleint42double3.14booltruetokens\"apple\", \"orange\"text\"Hello, world!\"rich_text\"**Hello**, world!\"enum\"red\"timestamp\"2020-10-20T00:00:00Z\" (RFC3339)date\"2020-10-20\" (YYYY-MM-DD)id\"don:core:dvrv-us-1:devo/test:issue/1\"\nThe list variants of all the supported custom field types are also supported ([]tokens, []text and more).\nDeprecating a custom schema fragment\nCustom schema fragments can be marked as deprecated to avoid creating work items with them. The following POST request payload can be used for the same.\n1 {2     \"type\": \"custom_type_fragment\",3     \"description\": \"Attributes for tracking an incident\",4     \"leaf_type\": \"ticket\",5     \"subtype\": \"Incident\",6     \"fields\": [7         ...8     ],9     \"deprecated\": true,10 }\nListing custom schema fragments\nTo verify the result of the above API invocation, you can list the custom schema fragments in the org:\n1 curl --location 'https://api.devrev.ai/schemas.custom.list' \\2 --header 'Accept: application/json' \\3 --header 'X-Devrev-Scope: beta' \\4 --header 'Authorization: <TOKEN>'\nDeprecated fragments aren't returned when listing custom schema fragments."
    },
    {
        "id": "ART-896",
        "dataset_source": "devrev-dev0",
        "title": "Effortless",
        "content": "Why attendWe believe that tech companies, given their unique challenges, deserve purpose-built solutions, and this event is your space to learn together about all things AI, and all things design to make many things in tech effortless. Join us at Effortless 2023 to help shape this future.Agenda11:00 AM PST - 12:10 PM PSTLunch & NetworkingEnjoy a lunch to fuel up, make some new connections, and spend some time exploring the latest in tech and innovations at our exhibits.12:10 PM PST - 12:15 PM PSTWelcome NoteBhavana Thudi12:15 PM PST - 1:20 PM PSTOpening Keynote: Efforts for Effortless!The world of SaaS and tech demands purpose-built solutions that can keep up with its continuous and fast-paced nature. How can AI and design play a crucial role in making your life in tech effortless?Dheeraj PandeyVinod KhoslaScott BelskyEly Greenfield1:20 PM PST - 2:20 PM PSTDevRev, Purpose Built for TechDive deeper into the needs of tech companies and the convergence of teams to build products, support customers, and grow revenue as one with DevRev.Manoj AgarwalMichael MachadoVinod Muthukrishnan2:20 PM PST - 2:30 PM PSTBreakTake a short break to rest and recharge.2:30 PM PST - 3:00 PM PSTIndustry PanelJoin leading voices as they unpack the future of tech through the lens of GenAI and analytics. Explore how industries can leverage these tools to reimagine work, tap into vast potential, and ensure relevance in an evolving, fast-paced landscape.Mollie HollandShikhar AgarwalAmit PrakashHari Bayireddy3:00 PM PST - 3:20 PM PSTConscious AIA fireside chat to explore the concept of conscious AI and its implications for technology and society.Navin ChaddhaDr Emma LundbergDanny Fortson3:20 PM PST - 3:30 PM PSTClosing with Zaza Pachulia!Join us for closing remarks joined by special guest Zaza Pachulia of Golden State WarriorsZaza Pachulia3:30 PM PST - 5:00 PM PSTExhibitExplore the DevRev Booths, where you can learn more about the platform and its features. Don't miss out the Partner Stage featuring Rishi Bhargava, Descope, Amit Prakash, ThoughtSpot and more.5:00 PM PST - 5:30 PM PSTHappy Hour, Networking & 49ers Museum tour!Wrap up the day with a happy hour session and an exclusive tour, providing an opportunity to network, connect with fellow attendees, and explore the 49ers museum.Speakers from the following organizations will be presenting.What is DevRevDevRev\u2019s OneCRM, purpose-built for the SaaS vertical, comprises three modern CRM apps for support, product, and growth teams. It connects end users, sellers, support, product people, and developers, reducing 9 business apps and converging 6 teams onto a common platform.  \nUnlike horizontal CRMs, DevRev takes a blank canvas approach to collaboration, AI, and analytics, enabling SaaS companies to increase product velocity and reduce customer churn. DevRev is used by thousands of companies in search of low latency analytics and customizable LLMs to thrive in this era of GenAI.  \nDevRev was founded in October 2020 and raised over $85 million in seed money from investors such as Khosla Ventures and Mayfield, making it the largest seed in the history of Silicon Valley. It is led by its co-founder and CEO, Dheeraj Pandey, who was previously the co-founder and CEO of Nutanix, and by Manoj Agarwal, DevRev's co-founder and former SVP of Engineering at Nutanix. DevRev is headquartered in Palo Alto, California, and has offices in seven global locations.Frequently Asked Questions"
    },
    {
        "id": "ART-899",
        "dataset_source": "devrev-dev0",
        "title": "Nudges | The Book of DevRev",
        "content": "With most things in life, the more context you have, the more informed you are and the better the decisions you can make.\n\nAs a support engineer we are constantly bombarded with customers reaching out for help. Now, what if we could see what the user was doing prior to contacting support? As a developer seeing if the customer\u2019s problem is a defect, seeing the steps they took can be enlightening.\n\nIn comes PLuG Session Replay\u2026 Just wanna see it? Click HERE\n\nWith DevRev PLuG Session Replay we provide the ability to record a users session and automatically attach it to a conversation when its started. This allows those providing support to the customer to see exactly what the customer was doing, and any potential errors, before they contacted support.\n\nThis allows them to have context, empathy, any ideally provide much better support without needing to ask the traditional boring questions of \u201cwhat were you doing when this happened?\u201d\n\nAt-a-glance\n\nThe PLuG Session Replay feature provides the ability to:\n\n\n  Natively record user sessions anywhere where PLuG is installed\n  Automatically attaches session recordings to conversation upon creation\n  Provides full privacy and data masking\n  Replay user sessions, view events and errors\n\n\nHow it works\n\nThis feature can be leveraged anywhere where the PLuG widget is installed. Meaning, if you deploy the DevRev PLuG widget on your website for chat support, you have the ability to natively record user sessions.\n\nFor example, we have the PLuG widget deployed on this site, our marketing site and others. Through the nature of this widget being on our sites, we can take advantage of this feature and track user sessions when new conversations are started.\n\n\n\nSee it in action"
    },
    {
        "id": "ART-904",
        "dataset_source": "devrev-dev0",
        "title": "DevRev Documentation",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nDevRev Documentation.\n\nExplore DevRev's features and usage.\n\nSearch for anything CTRL + K\nOneCRM.\n\nLearn about DevRev to enable next-generation customer support and software development.\n\nSupport.\n\nCreate a culture of support: track work requested by customers and drive product decisions with development teams to delight them.\n\nBuild.\n\nPlan product development activities with now/next/later and sprints.\n\nGrow.\n\nGrow customers, not departments, with a common platform where all teams can collaborate to optimize customer lifetime value.\n\nSnap-ins.\n\nConnect tools, automate work, and extend your experience with add-on modules provided by DevRev.\n\nDeveloper.\n\nEnabling developers to create tools for the future with DevRev APIs.\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-905",
        "dataset_source": "devrev-dev0",
        "title": "Customer email notifications",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nReply to the customer on a conversation Reply to the customer on a ticket Ticket linked to a conversation Change of stage of a ticket/conversation CSAT survey for conversation/ticket Auto customer reply Auto reply on email\nCustomer email notifications.\n\nAt DevRev, our commitment is to streamline collaboration and ensure that the teams and their customers are always in the loop. To help achieve this, we've established specific email notification rules. This guide provides a clear understanding of when and how email notifications are triggered within the DevRev platform.\n\nThe email senders and subject lines are subject to change based on organizational settings and preferences.\n\nReply to the customer on a conversation.\n\nTrigger. : When a reply is made to a customer on a conversation and they are not online anymore.\nAction. : The system sends out a notification to the customer with the recent messages while highlighting the latest message that triggered the email.\nSender. : DevRev no-reply@devrev.ai\nSubject. : \"You are missing messages from <Org Name> \"\n\nReply to the customer on a ticket.\n\nTrigger. : When a reply is made to a customer on a ticket.\nAction. : The system sends out a notification to the customer with the reply message.\nSender. : DevRev notifications@devrev.ai\nSubject. : \"[DevRev] Update on TKT-XXX from <Org Name> \"\n\nTicket linked to a conversation.\n\nTrigger. : A ticket is linked to an existing conversation.\nAction. : The system sends out a notification with the linked ticket number.\nSender. : DevRev notifications@devrev.ai (customizable for your domain)\nSubject. : \" <customer email subject from Conversation> \"\n\nThis email is only sent to the organizations with Convergence snap-in\n\nChange of stage of a ticket/conversation.\n\nTrigger. : When there's a change of stage in a ticket or conversation.\nAction. : The system sends out a notification detailing the Ticket/Conversation number and stage change.\nSender. : DevRev notifications@devrev.ai (customizable for your domain)\nSubject. : \" <customer email subject> \"\n\nThis email is only sent to organizations that have installed Convergence Snap-in.\n\nCSAT survey for conversation/ticket.\n\nTrigger. : A CSAT survey is sent for a conversation or ticket.\nAction. : The system sends out a notification with the ticket/conversation number and CSAT form.\nSender. : DevRev no-reply@devrev.ai\nSubject. : \"CSAT for TKT-XXX\"\n\nThis email is only sent to organizations that have installed CSAT Snap-in.\n\nAuto customer reply.\n\nTrigger. : A new conversation is initiated from a customer.\nAction. : An automated reply is sent.\nSender. : DevRev notifications@devrev.ai (customizable for your domain)\nSubject. : \" <customer email subject> \"\n\nThis email is only sent to organizations that have installed Auto-reply Snap-in.\n\nAuto reply on email.\n\nTrigger. : A new email is received from a customer.\nAction. : An automated reply is sent.\nSender. : DevRev notifications@devrev.ai (customizable for your domain)\nSubject. : \" <customer email subject> \"\n\nThis email is only sent to organizations that have installed Auto-reply Snap-in.\n\nPrevious Updates Next Roles\nOn this page\n\nReply to the customer on a conversation Reply to the customer on a ticket Ticket linked to a conversation Change of stage of a ticket/conversation CSAT survey for conversation/ticket Auto customer reply Auto reply on email\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-906",
        "dataset_source": "devrev-dev0",
        "title": "Routing",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSupported routing scenarios Assignment Assignment Scenarios Customer escalation\nRouting.\n\nRouting is the process of determining the appropriate group of individuals responsible for handling a conversation or ticket. It ensures that inquiries are directed to the right team for efficient resolution. For more information about managing groups, refer to Groups.\n\nSupported routing scenarios.\n\nTime. : Assign tickets or conversations based on their time of creation. This is especially useful when teams operate across different time zones.\n\nContent. : Route inquiries to teams with expertise in specific parts of your product.\n\nAttribute. : Customize ticket routing based on specific attributes or custom parameters relevant to your workflow.\n\nAssignment.\n\nAssignment complements routing by identifying the owner of a conversation or ticket within the designated team. The owner is responsible for resolving the inquiry.\n\nAssignment Scenarios.\n\nLoad. : New requests are assigned to team members with the fewest open requests to distribute the workload evenly.\n\nAvailability. : Assign new requests exclusively to users who have set their status as \"online\" on DevRev.\n\nCustom. : Tailor assignment criteria to your needs, such as routing based on time, specific content parts, or other attributes that reflect the skills of your team members.\n\nCustomer escalation.\n\nCustomers may occasionally require escalations for urgent issues or requests that need special attention. Escalation is the customer's way of signaling that a particular ticket warrants immediate action.\n\nPrevious Tickets Next Support best practices\nOn this page\n\nSupported routing scenarios Assignment Assignment Scenarios Customer escalation\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-907",
        "dataset_source": "devrev-dev0",
        "title": "Question & answers",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nTuring answering behavior Manual creation Creating a Q&A Automatic creation Enabling automatic creation of Q&As Searching for Q&As Components of Q&A Status definitions Access permissions\nQuestions & Answers.\n\nQuestions & Answers (Q&As) refer to a collection of commonly posed questions and their answers regarding a particular product, service, or topic. The Questions & Answers (Q&A) feature on DevRev works as an additional knowledge source for Turing bot to answer customer queries in conversations to provide efficient customer support.\n\nTuring answering behavior.\n\nUnlike knowledge articles , Q&As are never quoted as sources to the end user. Q&As are preferred to answer customer queries over articles.\n\nQ&As can be created either manually or automatically from your customer conversations by Turing.\n\nManual creation.\n\nIn the following cases, you may choose to create Q&As manually:\n\nYou can create Q&As manually for website FAQs that you prefer not to display as articles but are crucial for Turing to access to effectively respond to customer inquiries.\n\nYou can incorporate internal knowledge base content into Q&As for internal documentation that's not intended for public search but is valuable for Turing to understand, enhancing response quality.\n\nYou can include details about bugs or issues in Q&As that shouldn't be publicly searchable in your knowledge base and are not relevant to all customers but are essential for Turing to address specific customer questions.\n\nCreating a Q&A.\n\nGo to Settings. > Knowledge Base. > Questions and Answers..\nClick +Q&A. in the top-right corner.\nFill in the Question. , Answer. , and select the relevant Part..\nSet the appropriate Status. and Access level.. Set the status to External or Public if you want Turing to answer using it.\nConfirm by clicking Create..\nAutomatic creation.\n\nYour customer conversations include a lot of knowledge, including some of the most accurate and current information. With the automated creation of Q&As, Turing learns from customer conversations\u00a0in which a human answers a question that Turing previously could not answer.\n\nAnswer using published Q&As Satisfactory answer No answer or talk to engineer Similar Q&A found Customer query Turing behavior Conversation resolved Creates Q&As Improves Turing No new Q&As created Enabling automatic creation of Q&As.\n\nTo enable automatic creation, go to Settings > Knowledge Base > Question and Answers. and click Preferences. on the top right.\n\nEnable Auto generate Q&As. and click Save..\n\nYou need to be an admin to set preferences\n\nHow Turing learns from customer conversations.\n\nWhen a customer initiates a conversation seeking answers, Turing springs into action, drawing upon published Q&As and knowledge articles to provide a solution. If Turing falls short or the user prefers a more personalized touch, they opt to connect with a customer experience engineer and resolve the conversation. Turing doesn't just move on\u2014it learns. Autonomously, it generates new Q&As based on the resolved conversation, marking them for review under the Review Needed status. A Q&A won't be created if it is similar to the existing Q&A to avoid duplication.\n\nReviewing and publishing Q&As.\n\nThe conversation's owner receives a notification regarding these newly created Q&As. It's their chance to ensure accuracy before deciding whether to Publish them if needed or Archive if not.\n\nOnce approved and published, these Q&As become Turing's knowledge base, ready to tackle similar questions in the future. Each conversation can generate up to three unique Q&As, increasing Turing's knowledge base with every interaction.\n\nEvery Q&A is intricately linked to its originating conversation, preserving the context of its creation. Even if initially overlooked, support team members can revisit pending Q&As from Settings > Knowledge Base > Question and Answers. filtering for those in the Review Needed state.\n\nSearching for Q&As.\n\nSearch for a previously created Q&A on the DevRev app by pressing cmd+K on Mac or Ctrl+K on Windows. Q&As appear within the KB section of the Search bar. You can search Q&As by entering keywords within a Question or Answer.\n\nComponents of Q&A.\n\nQuestion. : Define the customer query.\nAnswer. : Provide the corresponding solution or information.\nPart. : Choose the product or service area the Q&A pertains to.\nStatus. : Determine the progress phase of the Q&A - Published , Draft , Review Needed , or Archived.\nAccess Level. : Determine who can view and access the Q&A.\n\nStatus definitions.\n\nPublished : These Q&As are live and actively used by the Turing bot to answer customer queries in conversations.\nDraft : Indicates that the Q&A is still being written or is a work in progress.\nReview needed : If the author requires validation, the QA can be marked for review, typically by a manager or designated reviewer.\nArchived : Denotes Q&As that have become redundant, incorrect, or obsolete.\n\nAccess permissions.\n\nPrivate / Internal / Restricted : Not visible to external users, not used by the bot, and only searchable within the app.\nExternal / Public : Available for all, the Turing Bot employs these Q&As extensively, and they appear in search results both for app users and portal and PLuG visitors.\n\nPrevious Customer portal Next Articles\nOn this page\n\nTuring answering behavior Manual creation Creating a Q&A Automatic creation Enabling automatic creation of Q&As Searching for Q&As Components of Q&A Status definitions Access permissions\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-908",
        "dataset_source": "devrev-dev0",
        "title": "Articles",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nCreate an article Status Access Collections Create a collection Edit collection Organize your hierarchy Assign articles to collections Help Center\nArticles.\n\nArticles are pieces of information about your product or organization in a knowledge base that's used to answer customer queries with the help of Turing bot, customer portal, or PLuG.\n\nArticles are associated with a part (product or service) and can be created by internal users. Your customers can search across your articles and serve themselves on their queries. This empowers your customers to find answers on their own instead of waiting for your support team to get back to them.\n\nArticles can be found under Settings. > Support. > Knowledge base. > Articles..\n\nCreate an article.\n\nGo to Settings. > Support. > Knowledge base. > Articles..\n\nYou can create an article in the following ways:\n\nLink an external URL.\nUpload a document.\nWrite a new article with DevRev's rich text editor. Click Next..\n\nFill in the following to get your article ready for publishing:\n\nTitle of the article.\nPart of the article.\nStatus Access Collection\n\nClick Create..\n\nYou can also create articles automatically by using smart import KBs snap-in.\n\nStatus.\n\nDraft\n\nThe article isn't ready to be released to the public. You can make edits at this stage.\n\nPublished\n\nThe articles have already been released to the public.\n\nReview needed\n\nArticles that need approval and to be reviewed by others before releasing them.\n\nArchived\n\nArticles that are outdated and no longer required can be removed by archiving them.\n\nAccess.\n\nTo grant access to view articles, select one of the following options from the Visible to. drop-down menu:\n\nCustomers. : Open to anyone who visits your PLuG widget or customer portal publicly. Enable a public portal for unrestricted access, otherwise, a login is required.\n\nVerified Customers. : These articles are visible to portal users who have signed in to your portal and are verified via the PLuG widget.\n\nCustomer Admins. : Manually add users through Settings. > Groups. > Customer Admin.. They can also view all account tickets.\n\nIf an article is intended for internal use only and should not be visible to customers, leave the field blank.\n\nContact us via the PLuG widget for custom groups until the group builder is available in DevRev.\n\nCollections.\n\nCollections are the parent for articles in your Help Center. Parent helps you define the multi-level hierarchy of your directories. Keeping the parent as the home page creates a top-level collection for you. If you wish to organize this collection into some other directory then you can change the parent to the other directory you wish to organize it in. They organize your articles so people can browse your help content and find what they want.\n\nYou can nest as many collections inside a single collection giving a proper structure to your customer support portal and PLuG Widget by DevRev.\n\nCreate a collection.\n\nTo create a collection, go to Settings. > Support. > Article Collections. and then click on +Collection. from the top right corner of your screen. Fill in the following details to create your collection:\n\nTitle\nDescription\nParent\n\nEdit collection.\n\nTo edit your collection, go to Settings. > Support. > Article Collections. and then click \u22ee. present next to the collection you want to edit. Click on Edit. to edit the collection name, collection description, and the parent of that collection.\n\nTo delete your collection go to the article you want to delete, click \u22ee. next to it. Click Delete..\n\nYou won't be able to delete a collection if there are items inside it.\n\nOrganize your hierarchy.\n\nIn Article Collections. you would be able to view your customer portal hierarchy where you can see all your parent collections with more collections and articles nested inside it. You can also drag & drop your nested hierarchy to define the order in which your customers can see your collections and articles inside it.\n\nAssign articles to collections.\n\nYou can assign your articles to your collections in the following ways:\n\nGo to Settings > Knowledge Base. and open the article and then change the Collection. attribute for that article. The Collection. attribute gives you a list of all the collections that you have created and you can select any one of them.\nGo to Settings > Articles Collection. and then click +Add. which is present next to the collection that you have created. You can search all the articles that you have created and multi-select the list of articles you wish to add to the specific collection.\n\nAn article can be a part of only one collection.\n\nHelp Center.\n\nHelp Center makes your articles and collections visible on your customer portal. Customers can browse through necessary information in the customer portal. You can go to Settings > Portal settings. and enable Help Center.. Ensure that a collection already exists before enabling this option. Create a collection if it does not exist.\n\nPrevious Question & answers Next Turing bot\nOn this page\n\nCreate an article Status Access Collections Create a collection Edit collection Organize your hierarchy Assign articles to collections Help Center\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-909",
        "dataset_source": "devrev-dev0",
        "title": "Automate",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nAutomate.\n\nAutomatic customer reply.\n\nAuto routing.\n\nAuto parts to conversation.\n\nAutomate opportunities.\n\nBulk ticket uploader.\n\nConvergence.\n\nCSAT on conversation.\n\nCSAT on ticket.\n\nDescope identity validation.\n\nFollow-up ticket.\n\nLink preview.\n\nSentiment evaluator.\n\nSmart import KBs.\n\nSLA status change Slack notifier.\n\nSlash commands.\n\nSmart sprint.\n\nTicket age in engineering.\n\nWork duration.\n\nPrevious Snap-ins Next Automatic customer reply\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-910",
        "dataset_source": "devrev-dev0",
        "title": "Integrate",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nIntegrate.\n\nCalendly.\n\nGoogle Calendar.\n\nEmail.\n\nSlack.\n\nZoomInfo enricher.\n\nWhatsApp.\n\nGitHub.\n\nHarness.\n\nInstabug.\n\nPrevious Work duration Next Calendly\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-912",
        "dataset_source": "devrev-dev0",
        "title": "Airdrop",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nAirdrop features General process Setting up a new import or sync Post-import options Historical imports Dev user deduplication Dev user deduplication logic **User has no email or it's not accessible** **User has an email but doesn't match any existing DevRev user email** **User has an email that matches an existing DevRev email** Manual dev user merging **Find duplicated Airdrop created user** **Merge duplicated user** Account deduplication Manual account merging Contact deduplication Work deduplication Available sources\nAirdrop.\n\nWith DevRev's Airdrop, you can migrate data from various platforms or keep data in sync between DevRev and external sources. Whether you perform a one-time import, set up a one-way sync, or establish a two-way sync, Airdrop supports a flexible data migration or co-existence strategy.\n\nAirdrop features.\n\nThe Airdrop features available vary per external source but support one or more of these:\n\n1-time import:. Migrate data from an external source to DevRev.\n1-way sync:. Keep data in sync from an external source to DevRev.\n2-way sync:. Synchronize data bidirectionally between DevRev and an external source.\nRecipe manager:. Select the types and fields you want to import or sync from an external source.\n\nGeneral process.\n\nSetting up a new import or sync.\n\nFor source-specific instructions, see Available Sources.\n\nWhether you want to perform only a one-time import or set up an ongoing sync, performing an initial import is required.\n\nNavigate to Imports: Go to Settings > Imports. and click Start Import. or Import..\n\nChoose Source: Select the external platform (for example, Jira, Zendesk) from which you want to import data.\n\nInitiate the import process, which brings in enough data and metadata to allow you to configure the rest of the process.\n\nConfigure the Import: Configure the import settings, such as selecting specific objects and mapping fields.\n\nPost-import options.\n\nAfter a successful import, you have several options to manage and sync your data:\n\nSync to DevRev:. Synchronize new items created and modifications made in the external source to corresponding items in DevRev.\n\nSync to External Source:. Synchronize new items created in DevRev and modifications made in DevRev to the external source.\n\nPeriodic Sync:. Enable automatic periodic sync to keep data updated between DevRev and the external source.\n\nView Report:. Access detailed information about the initial import and subsequent syncs.\n\nDelete Import:. Remove the import and associated items from DevRev.\n\nEdit Connection:. Modify the connection settings for future actions. This can be used if the connection goes stale or the connection owner leaves the company.\n\nHistorical imports.\n\nYou can view information about currently running and previous imports from various sources, providing insights into migration activities.\n\nTo view existing imports, follow these steps:\n\nGo to Settings. > Imports..\nDev user deduplication.\n\nWhen migrating data, ensuring the accuracy and consistency of the data is paramount. This section describes how Airdrop handles potential duplicates and the processes that can be used to clean up duplicates.\n\nDev users are team members, specifically, they're considered members of the DevRev organization. Examples of Airdrop-created dev users include engineers working on imported Jira issues, support agents who own imported Zendesk tickets, and account owners for imported Hubspot accounts.\n\nWhen importing external dev users, the email address is used as a means of deduplication.\n\nDev user deduplication logic.\n\nUser has no email or it's not accessible.\n\nA new dev user is created in DevRev. This user is marked as Shadow. Shadow users can't log in and have no access to DevRev. All work, comments, and assignments imported from the external source and associated with the external user are associated with the shadow DevRev user.\n\nThis user can be manually merged with an existing user.\n\nUser has an email but doesn't match any existing DevRev user email.\n\nA new dev user is created in DevRev. This user is marked as Unassigned. Unassigned users cannot log in and have no access to DevRev. All work, comments, and assignments imported from the external source and associated with the external user are associated with the unassigned DevRev user.\n\nIf a new user joins DevRev and that user's email matches the email of the unassigned user, the person joining assumes the existing unassigned user. The unassigned user is marked as active, is able to access DevRev, and all the work, comments, and assignments remain with the now active user.\n\nThis user can be manually merged with an existing user.\n\nUser has an email that matches an existing DevRev email.\n\nNo new dev user is created in DevRev. All work, comments, and assignments imported from the external source are associated with the existing DevRev user with the matching email.\n\nManual dev user merging.\n\nThere are cases where the automatic Airdrop dev user deduplication logic doesn't catch duplicates. This can happen when an imported user has no email address or the email address doesn't match that of an existing user in DevRev. In these cases, it's possible to manually resolve these duplicate entries after the Airdrop import.\n\nTo do this, you will need to:\n\nBe a DevRev admin.\nFind the duplicated Airdrop created user.\nMerge the duplicated Airdrop created user with the desired active DevRev user.\nFind duplicated Airdrop created user.\n\nYou can find Airdrop created users that weren't deduplicated into an existing user with a few different methods:\n\nPerform a dev users search (CMD-K/Ctrl-K).\nYou can search by name or email and in some cases by unique external ID (such as Jira user ID).\nSelect the user in imported records.\nYou can click on users on records, such as an imported issue they own.\nFind the user in the dev users list.\nYou can go to Settings. -> User Management. -> Users and filter by Unassigned and Shadow users.\n\nMerge duplicated user.\n\nThe merge dev user option is only available from Unassigned and Shadow users with Active users and must be performed by a DevRev admin. The merge option will move all records owned by the unassigned/shadow user to the active user. The unassigned/shadow user will be deactivated, and any future imported items will be assigned to the active user.\n\nTimeline events, such as comments made or actions taken in existing records, aren't updated and continue to reference the now-deactivated user.\n\nTo perform a merge:\n\nOpen the list of Unassigned or Shadow users.\nSelect the action \u22ee menu.\nSelect Merge User..\nFind the Active user you wish to merge with.\nAccount deduplication.\n\nDevRev accounts help you keep track of your customers. Airdop can import accounts from various external sources. Accounts from external sources can have varying names, such as companies in Hubspot, organizations in Zendesk, or accounts in Salesforce.\n\nAn Airdrop doesn't deduplicate imported accounts; rather, it modifies them so that new accounts don't violate DevRev constraints. These accounts can be merged after the import has completed. Since DevRev has several constraints on uniqueness of different DevRev account fields, Airdrop avoids breaking these constraints by following these rules when another account is already using the unique value:\n\nAccount Field Rule Display Name Imported account display name is appended with a unique external ID. External Reference(s) Conflicting imported account external reference dropped. Domain(s) Conflicting imported account domain dropped. Website(s) Conflicting imported account website dropped.\n\nManual account merging.\n\nAccounts, whether natively created in DevRev or migrated via Airdrop, can be merged by a DevRev administrator.\n\nTo perform a merge:\n\nOpen the account you want to merge from..\nThis account will be the one that will be deleted.\nSelect the merge option from the account menu.\nIn the merge accounts dialog, select the account to merge to..\n\nThe from. account, which was selected in step 1, and associated discussions will be deleted.\nAll associated users, conversations, tickets, and workspaces are preserved in the to. account.\nAny future items synced via Airdrop (such as new users or tickets) associated with the from. account will be associated with the to. account.\n\nSelect Merge..\nContact deduplication.\n\nDevRev contacts help you keep track of your customers. Contacts are the individual users, which may or may not be associated with an account. DevRev contacts aren't globally unique. The same user may have multiple contact records.\n\nAirdrop imported contacts are deduplicated against existing contacts. The user email is used as the deduplication field. The deduplication happens at the account level. Contacts without an account are treated as being in the same pseudo-account. When a contact is deduplicated, the records and comments of the incoming contact are associated with the existing contact.\n\nThe following scenarios illustrate how this Airdrop contact deduplication mechanism works:\n\nExisting Contact Incoming Contact Result email: a@example.com account: None. email: a@example.com account: None. Existing contact used email: a@example.com account: \"Example\" email: a@example.com account: \"Example\" Existing contact used email: a@example.com account: \"Example\" email: a@example.com account: None. New contact created email: a@example.com account: None. email: a@example.com account: \"Example\" New contact created\n\nWork deduplication.\n\nAirdrop doesn't deduplicate work objects (issues, tickets, opportunities). Unlike identity objects (users, accounts), these objects do not typically have duplicates in other systems.\n\nAvailable sources.\n\nHubspot Airdrop.\n\nSalesforce Airdrop.\n\nZendesk Airdrop.\n\nRocketlane Airdrop.\n\nConfluence Airdrop.\n\nServiceNow Airdrop.\n\nJira Airdrop.\n\nLinear Airdrop.\n\nPrevious Instabug Next Hubspot Airdrop\nOn this page\n\nAirdrop features General process Setting up a new import or sync Post-import options Historical imports Dev user deduplication Dev user deduplication logic Manual dev user merging Account deduplication Manual account merging Contact deduplication Work deduplication Available sources\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-913",
        "dataset_source": "devrev-dev0",
        "title": "Rocketlane Airdrop",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSupported objects Importing from Rocketlane Post import options Historical imports Sync to DevRev Periodic sync Delete import\nRocketlane Airdrop.\n\nDevRev's Rocketlane Airdrop allows you to perform a sync from Rocketlane to DevRev. The snap-in extracts the data needed from Rocketlane projects to create DevRev accounts.\n\nSupported objects.\n\nThe following is the Rocketlane object and its DevRev equivalent.\n\nRocketlane Object DevRev Sync to DevRev Organization Account \u2705\n\nImporting from Rocketlane.\n\nFollow the steps below to import from Rocketlane:\n\nGo to Settings. > Imports. and click Start Import. or Import..\nCreate a new connection to your Rocketlane account, or use an existing connection if you already have one.\nOnce the connection is established, select the Rocketlane workspace you want to import and specify the DevRev part where the imported tickets should be created. This initiates a bulk import of the selected workspace.\nDevRev makes an effort to automatically map the fields from Rocketlane to corresponding fields in DevRev. However, you may be prompted to manually map certain fields if needed.\n\nThe duration of the import depends on the size of the Rocketlane account. It can take seconds for an account with only a few tickets to a few hours for an account with tens of thousands of tickets with many attachments. DevRev honors the Rocketlane API rate limits and back-off and resume automatically.\n\nPost import options.\n\nAfter a successful import, you have the following options available for the imported project:\n\nSync to DevRev\nThis option allows you to synchronize any modifications made in Rocketlane with the corresponding items previously imported into DevRev. It also creates new items in DevRev for any new organizations created in Rocketlane after the last sync or import.\nPeriodic Sync\nBy enabling this option, you can automatically sync new changes from Rocketlane to DevRev on a periodic basis. The default frequency is once an hour.\nView Report\nThis option allows you to access detailed information about the initial import and any subsequent syncs performed.\nDelete Import\nIf you wish to remove the import and all items that were imported from Rocketlane into DevRev, you can use this option.\nEdit Connection\nUse this option to change the connection used for any subsequent actions. It can be helpful if a connection becomes inactive or the user who established it is no longer available.\n\nHistorical imports.\n\nTo view currently running and previous imports from various sources, including Rocketlane, go to Settings > Imports..\n\nSync to DevRev.\n\nAfter a successful import from a Rocketlane workspace, you can choose to sync the imported data with DevRev. This feature imports any new organizations and any changes made to previously imported items from Rocketlane.\n\nTo perform a one-time sync to DevRev, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect the \u21c6. > \u21fe From Rocketlane to DevRev. option.\n\nSyncing DevRev with Rocketlane may override fields in previously imported items, even if they were modified in DevRev.\n\nPeriodic sync.\n\nAfter successfully importing from a Rocketlane account, you have the option to enable a periodic sync. This allows for automatic synchronization between Rocketlane and DevRev on a regular basis. By default, the sync occurs once an hour. The sync can be configured to be Sync to DevRev, Sync to Rocketlane or both.\n\nTo enable a periodic sync, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect the \u21c6. > Start Periodic Sync. option.\n\nTo disable a periodic sync, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect the \u21c6. > Stop Periodic Sync. option.\nDelete import.\n\nThis deletes any content created by the import, including accounts, users, works, and parts.\n\nUsers not created by the import but created under an Airdrop account will also be deleted as part of the account deletion..\n\nAn import and all the content it creates can be deleted from DevRev. This can be useful when running POCs or to change the recipe used during the import. Once an import has been deleted, all the content it created gets deleted, even if they were modified in DevRev. It's possible to import the project again after its deletion.\n\nTo delete and import all the content it created, go to Settings. > Imports. > Past Imports. , find the previously imported project, and select \u21c6 > Delete Import..\n\nPrevious Zendesk Airdrop Next Confluence Airdrop\nOn this page\n\nSupported objects Importing from Rocketlane Post import options Historical imports Sync to DevRev Periodic sync Delete import\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-915",
        "dataset_source": "devrev-dev0",
        "title": "Grow",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\n\ud83d\udcbc Account \ud83d\udda5\ufe0f Workspace \ud83d\udca1 Opportunity \ud83d\udc65 Contact \ud83e\udd1d Engagement\nGrow.\n\nThe DevRev Grow app is a unified platform for support, customer success, sales, and product teams in SaaS to collaborate and optimize customer lifetime value.\n\nThe Grow app accomplishes this by democratizing data, creating a holistic customer 360-degree profile, and fostering a company-wide culture of customer centricity. To maintain a coherent customer journey, it constructs a knowledge graph of customer data across product-led user interactions, sales-led customer engagements, and automated touchpoints.\n\n\ud83d\udcbc Account.\n\nAn account represents a customer organization, and it holds information about the company, including its name, address, industry, domain, and website address.\n\nDevRev leverages convergence to link DevRev accounts with other DevRev entities, including tickets, conversations, opportunities, workspaces, and engagements. This linking offers a 360-degree view of an account across sales, customer success, and support. To enable real-time collaboration among employees from different departments on an account, it provides a discussion timeline.\n\nYou can use a customizable set of states and stages to manage the lifecycle of an account, from prospect to customer to churned.\n\n\ud83d\udda5\ufe0f Workspace.\n\nA workspace represents an instance of a signed-up organization on your application. A workspace is also known as rev-org in the DevRev API. Customers can create multiple workspaces on your application. Therefore, you can link multiple workspaces to a single account. This allows us to consolidate various workspaces under one account.\n\nIn modern SaaS applications, customers often create multiple workspaces for testing, production, and staging. All entities that drive support workflows\u2014such as creating tickets, conversations, and SLAs\u2014are linked to workspaces.\n\n\ud83d\udca1 Opportunity.\n\nAn opportunity record represents a potential source of revenue for your organization. Opportunities feature customizable states and stages that communicate their position within the sales pipeline.\n\nIf an account has multiple sales opportunities, you can connect multiple opportunities to it. You can also associate tickets with opportunities to signal the necessary development work for closing the opportunity. Likewise, linked conversations represent dialogues between a sales representative and a customer concerning the opportunity's closure.\n\nOpportunities incorporate a discussion timeline to support real-time collaboration in advancing an opportunity. They play a pivotal role in prioritizing development enhancements.\n\n\ud83d\udc65 Contact.\n\nA contact record represents individual prospects or users associated with an organization's workspaces or accounts. A contact is also known as a rev-user in the DevRev API.\n\nContacts represent customers, leads, and stakeholders with whom a business interacts. Contacts can be associated with an account or workspace, but not always.\n\n\ud83e\udd1d Engagement.\n\nDevRev uses engagements to capture all interactions between employees and customers, encompassing communications across various channels and touchpoints. DevRev records these interactions to create a comprehensive picture of the relationship.\n\nBased on their participation, DevRev links accounts, contacts, and employees to engagements. Additionally, they can be linked to opportunities if they are relevant to a specific opportunity.\n\nPrevious Build snap-ins Next Grow snap-ins\nOn this page\n\n\ud83d\udcbc Account \ud83d\udda5\ufe0f Workspace \ud83d\udca1 Opportunity \ud83d\udc65 Contact \ud83e\udd1d Engagement\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-916",
        "dataset_source": "devrev-dev0",
        "title": "PLuG",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nPLuG.\n\nDevRev PLuG empowers your customers and customer-facing teams with ready access to relevant information to enable more effective communication.\n\nPLuG refers to the part of the DevRev platform that directly enables communication with and understanding of your users, including your customer success and support teams.\n\nThe PLuG widget is an in-app engagement center that your customers use to interact with you. Conversations started in the PLuG widget are found in the Support Inbox.\n\n\ud83c\udfa5 Video: Support with PLuG and Inbox\n\nYou can see an example of the PLuG widget on the Maple Software website.\n\nTo integrate PLuG into your environment, refer to the PLuG integration instructions.\n\nTo customize PLuG for your needs, refer to Customize.\n\nRefer to PLuG SDK documentation to integrate it with your iOS or Android applications.\n\nPrevious Linear Airdrop Next Install PLuG widget on your website\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-919",
        "dataset_source": "devrev-dev0",
        "title": "Sep 15 to Oct 12, 2023",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSep 15 to Oct 12, 2023 What's new\nSep 15 to Oct 12, 2023.\n\n3 new enhancements\n\nWhat's new.\n\nAirdrop Jira DevRev's Airdrop Jira now supports per-type mapping, enabling the import and synchronization of data between DevRev and Jira, including all unique types with matching statuses and fields. Note:. Previously imported projects need to be upgraded to the new version by deleting the import and reimporting. Future syncs may fail unless the import is upgraded. To upgrade to the new version, go to Settings. > Imports. > Past Imports. , select the import's action menu \u22ee. , and Delete Import..\n\n\ud83d\udec8 For more information about Airdrop Jira , refer to the following article: Jira import | Documentation\n\nAirdrop Reporting & Notifications Airdrop will now notify the import/sync owner if their attention is required, such as when an import requires mapping or an ongoing sync fails.\n\nCustomer Portal SSO Introducing single sign-on (SSO) for the DevRev Customer Portal, a streamlined solution for organizations to simplify their customer authentication and authorization, decrease password-related support requests, and ensure uniform access policies across their applications and DevRev.\n\nPrevious Oct 13 to Nov 09, 2023 Next Aug 17 to Sep 14, 2023\nOn this page\n\nSep 15 to Oct 12, 2023 What's new\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-920",
        "dataset_source": "devrev-dev0",
        "title": "Aug 17 to Sep 14, 2023",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nAug 17 to Sep 14, 2023 What's new What's fixed\nAug 17 to Sep 14, 2023.\n\n3 new enhancements; 4 resolved issues\n\nWhat's new.\n\nNudges Nudges are a great way to engage and nurture your customers. The DevRev Nudges feature provides a simple, convenient platform that allows you to configure different types of nudges, set different engagement actions, and specify detailed rules for showcasing this to your users. Not only can nudges be useful for notifying users of important items like outages, new features, or news, but it may also be used to help nurture a user in growth cases.\n\n\ud83d\udec8 For more information about Nudges , refer to the following article: Nudges | The Book of DevRev\n\nPart customization This enhancement enables customization on parts, allowing users to create and update custom fields through the UI.\n\nTrails We have improved the Trails feature to help align your team on product vision and plan improvements. With the latest updates, Trails will be the place to conceptualize your roadmap, visualize your product's direction, and present your roadmap for the next cycle to stakeholders. Here\u2019s the latest and greatest in Trails. Sort and filter: you can now apply filter and sort for each column in trails. Filtering by owner and stage can help locate the data you need much faster. Part nodes can be sorted alphabetically or based on event dates. Search navigation: our global and localized search bars in each column of Trails now navigate directly to the node for that searched part, saving you time and effort. Richer part nodes: trails just got a whole lot better with the ability to customize which fields show up on each part node. You can enrich part nodes by selecting additional info like owner and stage.\n\nWhat's fixed.\n\nAirdrop Jira DevRev's Airdrop Jira now supports per-type mapping, enabling the import and synchronization of data between DevRev and Jira, including all unique types with matching statuses and fields. See the Jira snap-in docs for upgrade details.\n\nBuild Automations Added automated reminders for approaching due dates on work items like tickets, issues, enhancements, tasks and opportunities as a part of convergence snap-in.\n\nImproving Customer Satisfaction (CSAT) Add the ticket ID, title, and description in the CSAT survey sent through email.\n\nIssue Management Fixed the problem of child issues appearing twice (once outside and once indented under the parent issue) to improve readability.\n\nPrevious Sep 15 to Oct 12, 2023 Next Jul 20 to Aug 16, 2023\nOn this page\n\nAug 17 to Sep 14, 2023 What's new What's fixed\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-921",
        "dataset_source": "devrev-dev0",
        "title": "Jul 20 to Aug 16, 2023",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nJul 20 to Aug 16, 2023 What's new What's fixed\nJul 20 to Aug 16, 2023.\n\n3 new enhancements; 5 resolved issues\n\nWhat's new.\n\n[PLuG Widget] We\u2019ve updated our docs with information about the PLuG\u2019s SDK Methods and Customizations. Dive in for a DIY journey into customizing our widget in ways that are beyond basic no-code native.\n\n[Snap-In Platform] This exciting enhancement adds the functionality for users to create their own custom Snap-ins. Now, you have the flexibility to craft your own workflows and processes on top of DevRev.\n\n[User, Org Management] Introducing Multi-Workspace Magic! Seamlessly switch workspaces on our Customer Portal with the new workspace picker.\n\nWhat's fixed.\n\n[APIs] Our Work-list-post API in the early access API section introduces the ability to filter work based on the date range. Wrangle your work like a pro using actual_close_date and target_close_date fields.\n\n[Issue Management] We made creation of child issues a breeze. Update the title, and we\u2019ll take care of the rest.\n\n[KB extraction] Never manually duplicate documents from Confluence again! This snap-in seamlessly extracts all pages from your Confluence space, creating articles that populate your knowledge base effortlessly.\n\n[Opportunity Management] You can now see associated opportunities from the contact record view.\n\n[Support Turing Bot] You can now use the /summarize slash command on tickets with messages from customers\n\nPrevious Aug 17 to Sep 14, 2023 Next Jul 06 to Jul 19, 2023\nOn this page\n\nJul 20 to Aug 16, 2023 What's new What's fixed\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-922",
        "dataset_source": "devrev-dev0",
        "title": "Jul 06 to Jul 19, 2023",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nJul 06 to Jul 19, 2023 What's new What's fixed\nJul 06 to Jul 19, 2023.\n\n2 new enhancements; 6 resolved issues\n\nWhat's new.\n\n[AI Assist] DevRev Turing AI now conducts a comprehensive search of your entire knowledge base and identifies the top three most relevant articles. The links to these articles are then posted on the ticket, enabling swift resolution.\n\n[Sprint mode]\n\nWe\u2019ve made it easier for you to assign sprints to issues by using our multi-select toolbar, dropdown menu, and filter + group by sprint options. You can now also track sprint updates for a specific issue on the issue\u2019s events tab. Plus, we updated the left nav for easy access to sprint boards and quick editing of sprint durations and start dates.\nIntroducing new and improved issue stages in DevRev! We've replaced 'Now' and 'Next' with the shiny new 'Prioritized' stage under the Open state. Say goodbye to ambiguity and confusion, and hello to easy planning. Items in this stage are automatically mapped to the Next bucket of NNL, so that you can easily stay on top of your priorities.\n\nWhat's fixed.\n\n[Parts] To better communicate what this button actually does, we renamed \u201cArchive\u201d to \u201cDelete\u201d on Parts. Remember, this change can't be undone.\n\n[RevU Portal Preferences] We added support for your company\u2019s branding on the customer portal landing page. Anyone that visits your portal is met with your company\u2019s unique flair.\n\n[Routing]\n\nWe made it even easier for your support team to escalate tickets. With this change, your L1 teams can effortlessly escalate tickets to L2 teams by simply changing the group. Users can also easily configure the notifications and actions that should be taken when a customer experience engineer wants to escalate a ticket\nWe added the ability to assign tickets and conversations to team members who are currently available. Don't leave your customers hanging when they reach out. Availability based assignment ensures your customer\u2019s queries are routed to team members who can respond quickly.\nWe made it possible for your customers to escalate tickets from the customer portal. Now, customers can ask for more attention on their ticket if they haven\u2019t heard back. When your customer does this, we\u2019ll notify the ticket owner so they can effectively prioritize your customer\u2019s most important requests.\n\n[Support Turing Bot] DevRev Turing bot now cites the source article when automatically responding to a customer and when suggesting an answer to a customer experience engineer in suggestion mode.\n\nPrevious Jul 20 to Aug 16, 2023 Next Jun 20 to Jul 05, 2023\nOn this page\n\nJul 06 to Jul 19, 2023 What's new What's fixed\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-923",
        "dataset_source": "devrev-dev0",
        "title": "Jun 20 to Jul 05, 2023",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nJun 20 to Jul 05, 2023 What's new What's fixed\nJun 20 to Jul 05, 2023.\n\n7 new enhancements; 4 resolved issues\n\nWhat's new.\n\n[Auth on Ext Services - Cellarman] Snap-ins now fully support private connections, providing you with an even higher level of security. Rest assured that unauthorized users won\u2019t be able to access your connection.\n\n[Build Automations] Keep product enhancements and work in sync through timely reminders to link your work to ongoing enhancements and to move enhancements to \u201cIn progress\u201d when any related work is moved to \u201cIn progress\u201d. We\u2019ll also automatically subscribe your customer experience engineers to relevant product enhancements, ensuring they stay up to date on your product and can confidently handle any customer inquiry that comes their way.\n\n[MFZ] We added the ability for admins to create custom groups and define owners for those groups.\n\n[Public Marketplace] You can now enjoy seamless use of both the DevRev app and the Marketplace without needing to repeatedly log in when switching tabs.\n\n[Snap-In] We improved the Snap-in installation process with clearer and more helpful error messages. Snap-in users can also now interact and discuss topics directly within the settings page through the shiny new discussion section.\n\n[Snap-In Platform] If you are building Snap-ins, you can now fetch snap-in logs with CLI to monitor or debug. More power to the builders!\n\n[CLI] Introducing the DevRev CLI, equipped with powerful features for seamless management of works, users, parts, tags, and more. Experience enhanced control and productivity in your development workflow.\n\nWhat's fixed.\n\n[Airdrop Platform] Extended support for bidirectional sync of custom Jira fields.\n\n[CSAT on PLuG] You can now configure your CSAT survey to match your branding and objectives with the help of our CSAT snap-in.\n\n[Part Enhancements] We enabled an \"actual close date\" attribute on parts. This is especially useful for tracking the enhancements that were deployed in the past month, quarter and so on.\n\n[SLA] You can now define SLA policies using custom fields created for your tickets. Do you need to define response and resolution time SLAs based on a specific field of a ticket? We\u2019ve got you covered.\n\nPrevious Jul 06 to Jul 19, 2023 Next Jun 05 to Jun 19, 2023\nOn this page\n\nJun 20 to Jul 05, 2023 What's new What's fixed\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-924",
        "dataset_source": "devrev-dev0",
        "title": "Jun 05 to Jun 19, 2023",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nJun 05 to Jun 19, 2023 What's new What's fixed\nJun 05 to Jun 19, 2023.\n\n6 new enhancements; 5 resolved issues\n\nWhat's new.\n\n[KB extraction] Import and organize your articles from any URL. Simply provide the URL where your articles are currently hosted, and this snap-in automatically crawls through the URL and creates articles.\n\n[MFZ] We\u2019ve added a custom ticket form to the Customer Portal. With this change, you can take charge and decide which fields you want your users to fill in before filing a ticket from the portal.\n\n[Marketplace]\n\nThis enhancement to our Marketplace makes it even easier to install and configure snap-ins.\nIf you\u2019ve installed something from our Marketplace, you can rest easy knowing auto-update ensures you\u2019re always using the latest version.\n\n[Customization] DevRev now fully supports custom attributes in lists (Vistas) and record views. You have complete control over customization. This includes seamless and flexible customization-backed list/table views with filter, sort, and group operations for custom attributes, as well as customization-backed record/sidepane view\n\n[Airdrop HubSpot] With HubSpot Airdrop, you can seamlessly import all your companies and contacts into DevRev.\n\nWhat's fixed.\n\n[Automations] The Part Owner Notification snap-in changes the way product owners stay informed when their assistance is required. Designed to make collaboration a breeze, this snap-in ensures owners are promptly notified whenever duty calls.\n\n[Rev Import/Export] Importing customer data is a walk in the park with DevRev. Visit the Customer Vistas (list views) and easily upload your accounts by clicking the \"Upload CSV\" button in the top right\n\n[SLA]\n\nWe added support for first response and follow up response SLAs on tickets where your customer can comment.\nAdd support for Custom attributes for Ticket SLA policy.\n\n[Vistas] You can now edit tags inline from the list view. Just imagine all the time you'll save!\n\nPrevious Jun 20 to Jul 05, 2023 Next May 22 to Jun 05, 2023\nOn this page\n\nJun 05 to Jun 19, 2023 What's new What's fixed\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-925",
        "dataset_source": "devrev-dev0",
        "title": "May 22 to Jun 05, 2023",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nMay 22 to Jun 05, 2023 What's new What's fixed\nMay 22 to Jun 05, 2023.\n\n3 new enhancements; 6 resolved issues\n\nWhat's new.\n\n[New User Experience - Onboarding Wizard] We're excited to announce an enhanced user onboarding experience with several improvements aimed at helping new users get started quickly and efficiently. This update brings a new Onboarding page, accessible from the bottom of the left navigation menu, providing convenient access to essential resources, documentation, and product walkthrough tours. We'll continue to update the onboarding page with DevRev's latest features, so check back often.\n\n[PLuG Customization] Now, when you make changes to the PLuG widget's settings, presto! You can preview them immediately in our app.\n\n[AI Assist] Set a reminder (/remind), rephrase your reply to a customer (/rephrase), summarize a conversation (/summarize), or clone a record (/clone) with just a simple slash command. Install this snap-in from our Marketplace and slash your workload with commands powered by Turing AI.\n\nWhat's fixed.\n\n[Airdrop Zendesk] We introduced documentation for Zendesk Airdrop to make it easier to migrate your data from Zendesk to DevRev.\n\n[Documentation Website] Document how to setup ZenDesk connection and copy data.\n\n[Email Integration] Our email integration was stuck in the past. 1970 to be exact. Conversations initiated from email were showing a long past date by default. We fixed it.\n\n[Notifications] If you've enabled ticket creation for your customers through the Support Portal, we'll send you an email notification whenever they post a comment on the ticket. You won't miss a beat.\n\n[Snap-In Platform] Automations powered by Snap-Kit and connections to third-party apps now have real-time response support. This allows for improved customization and seamless user experience when creating records from apps and workflows using shortcuts.\n\n[Support Inbox] Ever had an attachment fail to upload and wonder why? We added an alert system that notifies you when a file size exceeds the email limits. For conversations initiated by email, the attachment size is now limited to 15 MB, which is a standard supported by emails. Stay within the limits and ensure smooth communication in your inbox.\n\nPrevious Jun 05 to Jun 19, 2023 Next Apr 22 to May 22, 2023\nOn this page\n\nMay 22 to Jun 05, 2023 What's new What's fixed\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-926",
        "dataset_source": "devrev-dev0",
        "title": "Apr 22 to May 22, 2023",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nApr 22 to May 22, 2023 What's new What's fixed\nApr 22 to May 22, 2023.\n\n12 new enhancements; 18 resolved issues\n\nWhat's new.\n\n[Airdrop Salesforce Service Cloud] Streamline development and customer support with this snap-in. Our 1-time import allows you to effortlessly import all relevant account, user, and case data from Salesforce into DevRev. Say goodbye to the days of tedious data transfers.\n\n[Knowledge Base Management] We added functionality to index knowledge base articles imported from any external source. Now, our intelligent Turing bot can search through these articles and generate accurate and appropriate answers to customer questions.\n\n[MFZ] This change to our access control service lets your support team manage access to tickets on the customer portal.\n\n[PLuG Banner] Great customer success is a 2-way street. Your customers reach out when they need help, but you have lots to share with them too. Banners allow you to spread the word about release notes, event information, or anything else through our widget. The best part? No-code and you can customize however you'd like.\n\n[PLuG Platform]\n\nWhile we think PLuG is pretty great, it wasn't all that simple for customers to install and configure. Now, it's much easier and doesn't require a developer.\nBooking a meeting is crucial for capturing and converting leads. You can now enable a card on your support widget that encourages users and prospects to book a meeting with your team\u2014no code required.\nIt's useful to be able to mark a conversation as concluded, so that the customer and the support team doesn't have to deal with clutter. However, you might also want to see what conversations have happened in the past. Now, you can see concluded work in the PLuG widget.\n\n[PLuG Widget A La Carte] Support teams can configure and choose which cards are shown on the PLuG widget from our UI\u2014assistance from a developer not required.\n\n[Part Enhancements] We made it easier to fold your shiny new product enhancements into your existing product, plus added support for staged releases like Limited and General Availiability. But wait, there\u2019s more! You can now create new product enhancements from AI clustered tickets to sniff out the most crucial insights from your users.\n\n[Parts] We improved the Parts list view with a group-by function and new attributes (such as tags and created by) for better tracking and visibility. Plus, automatic creation of your product roadmap based on which stage your new product enhancements are in.\n\n[Sprint mode] DevRev offers a lightweight development methodology called Now, Next, Later that brings customer-centricity to software development. But if your organization prefers traditional agile (we get it, old habits die hard), you now have the option to manage development work in sprints. With DevRev, you get the best of both worlds.\n\n[Support Portal (Help Center)] Our immersive customer portal at support.devrev.ai allows users to get answers, create tickets, and learn. Your users can now search through all your knowledge base articles from within the portal, plus your DevRev admin can control exactly what functionality users see in the portal.\n\nWhat's fixed.\n\n[Airdrop Jira]\n\nTwo-way sync between Jira and DevRev didn't start when you told it to under certain cases.\nAnd then after all that, when you did get it running, it would get stuck. So much for that. We made sure that wouldn't happen.\n\n[Airdrop Platform] Notifications are great until you get hundreds for the same thing, right? We're learning how to ensure notifications are always personal and relevant. This fixed too many notifications when importing data.\n\n[Airdrop Salesforce Service Cloud] We added a warning to the Salesforce Airdrop when a user with insufficient Salesforce access attempts an import to keep them in check. Caught ya!\n\n[Airdrop Zendesk] It wasn\u2019t your fault, but time seemed to not be on our side. We\u2019ve fixed a pesky timeout error with Zendesk 1-way sync. If you are ready to make a move, now is the time!\n\n[Auto Parts Attribution on Conversation] Automatic part attribution to conversations was slacking off on the job and failing to suggest a part. We gave it a pep talk, and now it\u2019s back on track.\n\n[External Comments on Ticket, convo Relationship Improvement] Who needs redundant conversations, right? Your customers can create tickets directly and in that case, we won\u2019t automatically create a conversation.\n\n[Notifications]\n\nUsers were incorrectly being shown as deactivated in email notifications. We\u2019ve given them the VIP status they deserve and fixed that bug.\nWe also jazzed up the order and formatting of email notifications to make them easier to follow.\n\n[PLuG Customization] The PLu\u2026 got cut off on small screens. Now, all screens get the full PLuG experience.\n\n[PLuG Widget] The PLuG widget was too leisurely in updating recent messages. We gave it a caffeine boost.\n\n[PLuG Widget A La Carte] We believe in making friends\u2014even with unauthenticated users. That\u2019s why we now kindly ask them who they are before we start a chat. It\u2019s a chance to make new connections or greet old pals. Win-win!\n\n[Parts] When assigning a work item to a part, a user was able to select a part that had been deleted. We fixed that. No more zombie parts.\n\n[RevU Management] Regrettably, sometimes you and a customer may have to part ways. When that does happen, you can remove the user from the customer org in the UI.\n\n[Slack App]\n\nWhen someone shares a ticket in a Slack channel, a summary should be embedded. (Does not apply to Slack Connect channels since you wouldn't want to run the risk of oversharing.)\nSometimes when you tried to create a ticket from Slack the modal wouldn't show up. It's better now.\n\n[Slack for Support]\n\nShh, creating a ticket in a Slack connected channel can now be done silently by unchecking \"Send Updates\" and \"Sync Thread\".\nAnd hey, assigning ownership is really important! An owner can now be assigned when creating a ticket through Slack.\n\nPrevious May 22 to Jun 05, 2023 Next Developer\nOn this page\n\nApr 22 to May 22, 2023 What's new What's fixed\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-932",
        "dataset_source": "devrev-dev0",
        "title": "Snap-ins",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nSnap-ins.\n\nAdd-on modules for DevRev, called snap-ins, are available on the Marketplace.\n\nSnap-ins are of the following types:\n\nIntegrations. let you connect DevRev with existing systems such as Slack and Jira.\nAutomations. perform tasks within DevRev based on events, like responding to customer conversations and linking tickets and issues.\nAirdrop. helps you bring data from external sources to DevRev and keep them in sync.\n\nWhile numerous snap-ins are available and more are in development, you can create your own using DevRev APIs.\n\nSupport.\n\nAuto parts to conversation Calendly Salesforce Auto-reply Email Zendesk Auto-routing Google Calendar ZoomInfo Bulk ticket uploader Slack Rocketlane Convergence WhatsApp Confluence CSAT on conversation Instabug CSAT on ticket Follow-up ticket Sentiment evaluator SLA change notifier Slash commands Smart import KBs Smart sprint Work duration\n\nAutomate Integrate Airdrop\n\nBuild.\n\nConvergence GitHub Jira Work duration Harness Linear Ticket age in engineering\n\nAutomate Integrate Airdrop\n\nGrow.\n\nAutomate opportunities Calendly Salesforce Google Calendar Hubspot ServiceNow\n\nAutomate Integrate Airdrop\n\nPrevious Grow snap-ins Next Automate\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-936",
        "dataset_source": "devrev-dev0",
        "title": "PLuG (0)",
        "content": "\nDevRev PLuG empowers your customers and customer-facing teams with ready access to relevant information to enable more effective communication.\nPLuG refers to the part of the DevRev platform that directly enables communication with and understanding of your users, including your customer success and support teams.\nThe PLuG widget is an in-app engagement center that your customers use to interact with you. Conversations started in the PLuG widget are found in the Support Inbox.\n\ud83c\udfa5 Video: Support with PLuG and Inbox\nYou can see an example of the PLuG widget on the Maple Software website.\nTo integrate PLuG into your environment, refer to the PLuG integration instructions.\nTo customize PLuG for your needs, refer to Customize."
    },
    {
        "id": "ART-939",
        "dataset_source": "devrev-dev0",
        "title": "Jira import",
        "content": "Migrate from Jira to DevRev or use DevRev for support while continuing to use Jira for development.\nJira import V2 was released September 25, 2023. This version introduces backwards incompatible changes. Jira import syncs on the older version may fail. Any Jira import sync performed before September 25, 2023 was done with V1 and should be upgraded if syncs are desired.To upgrade to the new version, delete the import and reimport the project.\nSupported objects\nThe following is a list of Jira objects and their corresponding DevRev equivalent. Those marked as Sync to DevRev are eligible for import/sync to DevRev from Jira. Those marked as Sync to Jira are eligible to be synced to Jira from DevRev.\nJiraDevRevSync to DevRevSync to JiraIssueIssue/Ticket\u2705\u2705CommentComment\u2705\u2705LabelTags\u2705\u2705LinkLink\u2705\u2705AttachmentAttachment\u2705\u2705UserDevUser\u2705\u274cWorkflowStage Workflow\u274c\u274cSprintSprint\u274c\u274cFilterVista\u274c\u274cAutomationSnap-in\u274c\u274c\nMigrate from Jira to DevRev\nIn this scenario, the intention is to replace Jira with DevRev. Once the migration is complete, the work that was normally done in Jira would continue in DevRev. This can also be used to evaluate DevRev with real data.\nTo migrate from Jira to DevRev:\n\nPerform a project import to migrate over an entire Jira project.\n(Optionally) Perform a sync from Jira to DevRev to bring over changes made after the initial import. This step can be repeated as needed.\n\nUsing Jira for development\nIn this scenario, the intention is to keep using Jira for development work. DevRev is used to provide support (tickets, customer conversations, etc) and product planning. Development work can continue in Jira but it's synced to DevRev issues. This allows you to search over issues in Jira and link them to customer tickets without leaving DevRev. You can also take advantange of DevRev's Convergence Snap-in to automatically update tickets and conversations based on issue updates happening in Jira.\nTo continue using Jira for development:\n\nPerform a project import to migrate over an entire Jira project.\nSync from DevRev to Jira to configure the recipe to Jira.\nEnable the periodic Sync to automatically sync changes to and from the Jira project.\n(Optionally) mark a DevRev work item for syncing if you want to create issues in DevRev and have them appear in Jira. Otherwise, only previously imported issue changes are synced to and from the Jira project.\n\nProject import\nTo ease the transition from Jira to DevRev, you can choose to import your Jira projects into DevRev. The project import is a 1-time bulk import of a Jira project into DevRev. Once ths import is complete, several options are made avaible for that project, such as resyncing changes, syncing back to Jira and bidirectional syncing.\nTo import a Jira project, navigate to Settings > Imports then select Start Import or Import. From there, create a new connection to a Jira site or use an existing connection if you already have one. Once the connection is established, select the project you wish to import. At this point you are prompted to configure how to import the Jira project.\nSetting up the import recipe\nA Jira project import is highly configurable, and the configurations for a specific project import is refered to as the recipe. Here are some guidelines on what to expect:\n\nWhat type of work to create in DevRev?\n\nYou have the option to import Jira issues as DevRev issues (common - default) or DevRev tickets (uncommon).\nChoose issues if you use the Jira project to track primarily development work.\nChoose tickets if you use the Jira project to track only customer requests.\n\n\nWhat Jira types to import?\n\nTypically Jira projects contain multiple types: epics, stories, bugs and tasks are common.\nYou can configure which types to import from Jira.\n\n\nHow to map Jira fields to DevRev fields?\n\nDevRev tries to automatically and sensibly map your Jira fields to corresponding fields in DevRev, but it may prompt you on how you want to map certain fields.\n\n\n\nHistorical imports\nYou can view currently running and previous imports from any source, including Jira, by navigating to Settings > Imports > Past Imports.\nSync from Jira to DevRev\nAfter a successful import of a Jira project, you have the sync from Jira to DevRev option.\nThis feature imports any new issues and any new changes to previously imported issues.\nTo perform a one-time sync from Jira to DevRev, go to Settings > Imports > Past Imports, find the previously imported project and select the \u21c6 > \u2192 From Jira to DevRev option.\n\nYou can track the progress by going to Settings > Imports > Ongoing Imports.\n\nThis overrides work's fields, even if they were changed in DevRev.\nSync from DevRev to Jira\nAfter a successful import of a Jira project, you have the sync from DevRev to Jira option.\nThis feature writes back any changes made in DevRev to previously imported issues from Jira. Additionally, any new DevRev work marked for sync to this project is created in Jira.\nTo perform a one-time sync to Jira, go to Settings > Imports > Past Imports, find the previously imported project and select the \u21c6 > \u2190 From DevRev to Jira option.\n\nYou can track the progress by going to Settings > Imports > Ongoing Imports.\n\nThis overrides issue's fields, even if they were changed in Jira.\nMark a DevRev work item for syncing\nMarking via UI\nUsing the Sync from DevRev to Jira feature, it's possible to sync DevRev work items to Jira projects that have been imported to DevRev. In order to sync a DevRev work item to Jira, it must be marked for syncing. Marking a DevRev work item for syncing can only be done during the creation of a work item. During work creation, select the dropdown for Type and set it to the Jira project and type the work item should be synced to. The display format is as follows: _{jira\\_project\\_name}/issues/{type}_. For example, if you want to sync to a Bug to a Jira project called Maple, this would show as Maple/issues/Bug.\nMarking via API\nTo mark an item for sync when creating via the API, the actual subtype name should be used. The subtype format is as follows: _jira\\_{jira\\_site}\\_{jira\\_project\\_name}\\_issues.{type}_. For example, if you want to sync to a Bug to a Jira project called Maple that's served via https://devrev.atlassian.net, this would show as _jira\\_devrev.atlassian.net\\_maple\\_issues.bug_.\nAfter a DevRev work item has been marked for syncing, it's created in the specified Jira project next time the Sync from DevRev to Jira runs. This can be triggered manually or automatically via a periodic sync. Future syncs keeps this item updated on both sides after it has been created in Jira.\nPeriodic sync\nAfter a successful import of a Jira project, you have the option to set up a periodic sync for the project. A periodic sync can be configured to Sync from Jira to DevRev, Sync from DevRev to Jira or both on a periodic basis. The default period is 1 hour.\nTo enable periodic sync, go to Settings > Imports > Past Imports, find the previously imported project, and select the \u21c6 > Start periodic sync option.\n\nIf you are enabling periodic sync on an imported Jira project for the first time, you should manually perform a Sync from Jira to DevRev first to configure how items from DevRev should be synced to Jira.\n\nTo disable periodic sync, go to Settings > Imports > Past Imports, find the previously imported project, and select the \u21c6 > Stop periodic sync option.\nDelete import\nThis deletes any content created by the import, including users, works, and parts.\nAn import and all the content it created can be deleted from DevRev. This can be useful when running POCs or to change the recipe used during the import. Once an import has been deleted, all the content it created gets deleted, even if they were modified in DevRev. It's possible to import the project again after its deletion.\nTo delete and import and all the content it created , go to Settings > Imports > Past Imports, find the previously imported project, and select the \u21c6 > Delete Import option."
    },
    {
        "id": "ART-949",
        "dataset_source": "devrev-dev0",
        "title": "Auto parts to conversation",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nAuto parts to conversation Installing the auto parts to conversation snap-in\nAuto parts to conversation.\n\nThe auto parts to conversation snap-in utilizes advanced natural language processing (NLP) to analyze customer conversations, automatically detecting specific parts mentioned for enhanced customer support insights. It includes automatic part assignment, eliminating manual intervention, channel compatibility across email, PLuG, and Slack, ensuring consistent functionality, and high accuracy through confident part assignment to minimize errors.\n\nInstalling the auto parts to conversation snap-in.\n\nIn DevRev, go to Settings. > Snap-ins. and click Explore Marketplace. in the top-right corner.\nIn the DevRev marketplace, find Auto Parts to Conversation. and click Install..\nIn DevRev, confirm installation and click Deploy..\nPrevious Auto routing Next Automate opportunities\nOn this page\n\nAuto parts to conversation Installing the auto parts to conversation snap-in\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-950",
        "dataset_source": "devrev-dev0",
        "title": "Link preview",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Installing the link preview snap-in\nLink preview.\n\nThe link preview snap-in provides real-time previews of hyperlinks, issues, tickets, and components, streamlining the user experience by automatically generating overviews without manual navigation. It enhances collaboration in project management, support, and development through its context-rich display, presenting key details for efficient communication and decision-making, including title, description, status, owner, priority, and stage.\n\nInstalling the link preview snap-in.\n\nIn DevRev, go to Settings > Snap-ins. and click Explore Marketplace. in the top-right corner.\nIn the DevRev marketplace, find Link preview. and click Install..\nIn DevRev, confirm installation and click Deploy..\nPrevious Follow-up ticket Next Sentiment evaluator\nOn this page Installing the link preview snap-in\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-951",
        "dataset_source": "devrev-dev0",
        "title": "Smart sprint",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page Installing the smart sprint snap-in\nSmart sprint.\n\nThe smart sprint snap-in allows you to automate the management and synchronization of sprints and development tasks in agile software development. Through this automation, issues are automatically assigned to the relevant sprints based on their stage and other relevant factors. This leads to a decrease in manual workload and an improvement in overall efficiency.\n\nInstalling the smart sprint snap-in.\n\nIn DevRev, go to Settings. > Snap-ins. and click Explore Marketplace. in the top-right corner.\nIn the DevRev marketplace, find Smart sprint. and click Install..\nIn DevRev, confirm installation.\nClick Deploy..\nPrevious Slash commands Next Ticket age in engineering\nOn this page Installing the smart sprint snap-in\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-952",
        "dataset_source": "devrev-dev0",
        "title": "Confluence Airdrop",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSupported objects Importing from Confluence Post import options Historical imports Sync to DevRev Periodic sync Delete import\nConfluence Airdrop.\n\nDevRev's Confluence Airdrop allows you to perform a bulk migration and ongoing one-way sync of Confluence pages. A bulk import is a prerequisite to setting up a sync. This Confluence Airdrop creates DevRev articles. These articles can be indexed and used for Turing answers, but the content continues to be hosted in Confluence.\n\nFor more information, refer to the Confluence Airdrop snap-in on the DevRev marketplace.\n\nSupported objects.\n\nThe following is a list of Confluence objects and their DevRev equivalent.\n\nConfluence Object DevRev Object Sync to DevRev Page Article \u2705 Label on Page Tag on Article \u274c Comment on Page Comment on Article \u274c User DevUser \u2705\n\nImporting from Confluence.\n\nFollow the steps below to import from Confluence:\n\nGo to Settings > Imports. and click Start Import. or Import..\nCreate a new connection to your Confluence site, or use an existing connection if you already have one.\n\nTo create a new connection, select Confluence PAT\nFollow the Atlassian PAT instructions to create a PAT in your Atlassian Account\n\nOnce the connection is established, select the Confluence site you want to import and specify the DevRev part the articles should be created under. This initiates a bulk import of the selected account.\n\nArticle indexing is async and may take several minutes to complete after the import is done.\n\nPost import options.\n\nAfter a successful import, you have the following options available for the imported account:\n\nSync to DevRev :\nThis option allows you to synchronize any modifications made in Confluence with the corresponding items previously imported into DevRev. It also creates new articles in DevRev for any new pages created in Confluence after the last sync or import. This is a one-time operation.\nPeriodic Sync :\nBy enabling this option, you can automatically sync new changes from Confluence to DevRev on a periodic basis. The default frequency is once an hour.\nView Report:\nThis option allows you to access detailed information about the initial import and any subsequent syncs performed.\nDelete Import :\nIf you wish to remove the import and all items that were imported from Confluence into DevRev, you can use this option.\nEdit Connection:\nUse this option to change the connection used for any subsequent actions. It can be helpful if a connection becomes inactive or the user who established it's no longer available.\n\nHistorical imports.\n\nTo view currently running and previous imports from various sources, including Confluence, go to Settings. > Imports..\n\nGo to Settings. > Imports..\nSync to DevRev.\n\nAfter a successful import from a Confluence account, you can choose to sync the imported data with DevRev. This feature imports any new items and any changes made to previously imported items from Confluence.\n\nTo perform a one-time sync to DevRev, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect \u21c6. > \u21fe From Confluence to DevRev..\n\nThis may override fields in previously imported items, even if they were modified in DevRev.\n\nPeriodic sync.\n\nAfter successfully importing from a Confluence site, you have the option to enable periodic syncing. This allows for automatic synchronization between Confluence and DevRev on a regular basis. By default, syncing occurs once an hour.\n\nTo enable periodic syncing, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect \u21c6. > Start Periodic Sync..\n\nTo disable the periodic sync, follow these steps:\n\nGo to Settings. > Imports..\nLocate the previously imported project.\nSelect \u21c6. > Stop Periodic Sync..\nDelete import.\n\nThis deletes any content created by the import, including articles and users.\n\nAn import and all the content it creates can be deleted from DevRev. This can be useful when running POCs or to change the recipe used during the import. Once an import has been deleted, all the content it created gets deleted, even if they were modified in DevRev. It's possible to import the project again after its deletion.\n\nTo delete and import all the content it created, go to Settings. > Imports. > Past Imports. , find the previously imported project, and select \u21c6 > Delete Import..\n\nPrevious Rocketlane Airdrop Next ServiceNow Airdrop\nOn this page\n\nSupported objects Importing from Confluence Post import options Historical imports Sync to DevRev Periodic sync Delete import\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-953",
        "dataset_source": "devrev-dev0",
        "title": "ServiceNow Airdrop",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nSupported objects Historical imports Sync from ServiceNow to DevRev Periodic sync Delete import\nServiceNow Airdrop.\n\nThe SerivceNow Airdrop is currently in Beta and has limited functionality. Future versions may require deletion of the import and reimporting.\n\nDevRev's ServiceNow import allows you to perform a sync from ServiceNow to DevRev. The current snap-in focuses on ITSM and CSM products of ServiceNow.\n\nSupported objects.\n\nThe following is a list of ServiceNow objects and their corresponding DevRev equivalent.\n\nServiceNow Object DevRev Object Sync to DevRev Case Ticket \u2705 Task Ticket \u2705 Incident Ticket \u2705 Problem Ticket \u2705 Comment on Case/Task/Incident/Problem Comment on Ticket \u2705 Account Account \u2705 Contact Contact \u2705 Consumer Contact \u2705 Agent DevUser \u2705\n\nTo ease the transition from ServiceNow ITSM/CSM to DevRev, you can choose to import your ServiceNow data into DevRev. The import is a 1-time bulk import of your ServiceNow data into DevRev. Once this import is complete, several options are made available for that project.\n\nTo import from ServiceNow, navigate to Settings. > Imports. then select Start Import. or Import.. From there, create a new connection to a ServiceNow site or use an existing connection if you already have one. Once the connection is established, you can start the import. At this point, you are prompted to configure how to import your ServiceNow data.\n\nHistorical imports.\n\nYou can view currently running and previous imports from any source, including ServiceNow, by navigating to Settings. > Imports. > Past Imports..\n\nSync from ServiceNow to DevRev.\n\nNot available in Beta.\n\nPeriodic sync.\n\nNot available in Beta.\n\nDelete import.\n\nThis deletes any content created by the import, including accounts, users, works, and parts. Users not created by the import but created under an Airdrop account will also be deleted as part of the account deletion.\n\nAn import and all the content it creates can be deleted from DevRev. This can be useful when running POCs or to change the recipe used during the import. Once an import has been deleted, all the content it created gets deleted, even if they were modified in DevRev. It's possible to import the project again after its deletion.\n\nTo delete and import all the content it created, go to Settings. > Imports. > Past Imports. , find the previously imported project, and select \u21c6 > Delete Import..\n\nPrevious Confluence Airdrop Next Jira Airdrop\nOn this page\n\nSupported objects Historical imports Sync from ServiceNow to DevRev Periodic sync Delete import\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-954",
        "dataset_source": "devrev-dev0",
        "title": "Roadmap",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nRoadmap Tracking with list view Tracking with Gantt view\nRoadmap.\n\nThe roadmap feature empowers product managers to effectively track the progress of their products, especially enhancements. It serves as a valuable tool for project management and strategic planning. Using the roadmap, you can:\n\nTracking with list view.\n\nFollow the current progress of your enhancements in Now. by using Stage. and Target close date. by which you can predict the time it might take to finish.\n\nTrack customer requests through tickets, opportunities, and potential revenue which are linked to each enhancement that evaluates the total customer impact. Prioritize enhancements based on customer impact, evaluation of tickets, and issues in Next , gaining insights into customer needs, and estimating the required work.\n\nFollow up with ideas for enhancements that are prioritized next in Later.. You can change the stage from Ideation to Prioritized when it's ready to be developed and bring it to Next..\n\nGroup the enhancements by Created by. , Stage. , and, Type. or by adding any filter and save your roadmap by clicking Save as. on the top right corner.\n\nCustomize the view of the roadmap by going to Customize. and selecting the filters you want to add to your roadmap.\n\nTracking with Gantt view.\n\nVisualize the timeline by replacing the traditional list view with the dynamic Gantt view for a comprehensive perspective of enhancements.\n\nEvaluate completed enhancements by comparing actual start and close dates, providing insights into project completion efficiency.\n\nIdentify planned issues with the Gantt view, highlighting cases where actual close dates differ from planned close dates. Refine future planning strategies based on these insights.\n\nOptimize resource allocation by analyzing the scope of enhancements; reallocate resources based on completed tasks and optimize future planning.\n\nPlan unplanned enhancements by adding target dates directly within the Gantt view.\n\nSwitch between multiple views (day, month, and year) for a granular or broad overview of your roadmap.\n\nCreate custom roadmaps by changing filters to focus on specific aspects of your roadmap. Save your customized views by clicking Save as. on the top right corner.\n\nDynamically adjust schedules within the Gantt view. Optimize your timeline based on project priorities and completion estimates.\n\nPrevious Enhancements Next Build best practices\nOn this page\n\nRoadmap Tracking with list view Tracking with Gantt view\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-962",
        "dataset_source": "devrev-dev0",
        "title": "DevRev Pricing",
        "content": ""
    },
    {
        "id": "ART-963",
        "dataset_source": "devrev-dev0",
        "title": "Support analytics",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nSupport analytics.\n\nThe support analytics is the gateway to actionable insights\u00a0across a spectrum of customer\u00a0experience metrics. Whether your focus is on blocker tickets, SLA compliance, or customer satisfaction, support analytics is the one-stop solution. Explore the depths of your data with dynamic filters and\u00a0unravel\u00a0more details using drill-through functionalities to\u00a0understand\u00a0the contributing factors behind each metric.\n\nAll metrics are calculated within the specified time range, managed by the default range filter. Additional filters can be added to get more specific analytics. However, not all filters apply to all the metrics and hence a warning symbol is displayed over the metric where the particular filter isn't applied.\n\nAll of these metrics undergo periodic refresh cycles, and you can track the last refresh time in the top right corner\u00a0as shown below:\n\nIn optimal scenarios, rest assured that the data powering the support analytics metrics is no more than an hour old. This ensures you have access to the latest and relevant information for informed decision-making.\n\nThe support analytics utilizes browser-based analytics, which may cause a slight delay during the initial data load. However, the user experience is significantly enhanced once the data is cached in the browser, resulting in near-instantaneous dashboard loading thereafter.\n\nOccasionally, the data might fail to load due to various reasons, leading to the display of the error message Failed to download data on the widget.\n\nIn such cases, refreshing the page after a brief pause should resolve the error. If the error persists, please raise a ticket, and someone from the team will assist you.\n\nThe support analytics derives meaningful patterns and information from past customer requests, problems, and interactions. As a result, past data persists even if the association is broken. For example, consider a part alpha in your product, which had 50 tickets associated with it in the past. Despite alpha being deleted last week, the data indicating that part alpha had 50 tickets still persists.\n\nTickets and conversations are the two main support objects and hence, the dashboard is divided into tickets-related and conversation-related customer experience metrics.\n\nTickets dashboard.\n\nConversations dashboard.\n\nPrevious Inbox Next Tickets dashboard\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc."
    },
    {
        "id": "ART-964",
        "dataset_source": "devrev-dev0",
        "title": "Tickets dashboard",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nCustomer and product impact Service level agreements Customer satisfaction (CSAT) Ticket distribution\nTickets dashboard.\n\nExplore the tickets dashboard for key metrics tied to tickets. The default range filter allows you to view metrics for a specific timeframe. Additional filters can be added to obtain more specific analytics.\n\nBlocker tickets. : Displays the percentage of tickets with a severity blocker out of all active tickets in the selected time range. Further drilling down helps identify the tickets that need urgent attention. Knowing the percentage of blocker tickets is essential for maintaining operational efficiency, meeting service-level commitments, and fostering a positive customer experience by addressing critical customer requests.\n\nSLA compliance rate. : Displays the percentage of tickets that comply with the SLA policy out of all the tickets to which the SLA policy was applied. Further drilling through helps identify the tickets that breached the SLA and a more in-depth investigation of possible root causes can be conducted.\n\nCSAT score. : Displays the percentage of positive survey responses out of all survey responses received. It helps identify the overall percentage of satisfied customers with the ticket resolution experience. Further drilling helps to pinpoint the tickets contributing to the CSAT score calculation.\n\nMedian resolution time. : Displays the middle value in the distribution of the time taken to resolve tickets. Understanding this metric helps facilitate better resource allocation, sets realistic customer expectations, and enhances overall service efficiency.\n\nCustomer and product impact.\n\nCustomers and products constitute the two key pillars of effective support processes and experiences. This section helps in analyzing tickets from the perspectives of customers and product parts, aiming to enhance customer satisfaction, guide product development, and inform strategic decisions for continuous improvement.\n\nActive tickets per customer. :\u00a0Displays customers alongside the number of tickets they have created. Customers are ranked based on the number of tickets they have raised, with the customer who created the most tickets appearing first. Understanding the number of tickets per customer offers insights into individual customer support needs, helping in prioritization decisions.\n\nActive tickets per product part. :\u00a0Provides a view of the product parts and the tickets raised for these product parts. Product parts on this list are ranked by the associated number of tickets raised, with the product with the highest number of associated tickets appearing first. Understanding the number of tickets per product part helps identify areas for product improvement and guides development efforts.\n\nService level agreements.\n\nService level agreements (SLAs) are formal commitments defining response and resolution times. Understanding SLA-related metrics enables teams to assess performance, ensure timely issue resolution, and maintain high customer satisfaction. Monitoring various metrics aids in resource management, proactive issue resolution, and continuous improvement, allowing customer experience teams to optimize processes and deliver efficient and effective service. These metrics help customer experience teams meet or exceed customer expectations and build strong, positive relationships.\n\nTicket distribution across SLA stages. :\u00a0Provides the trend and breakdown of tickets across different SLA stages.\u00a0The SLA\u00a0stages are color-coded for identification and analysis. Drilling\u00a0through any\u00a0of the SLA stages shows a list of tickets that belong to that SLA stage at the selected point in time.\n\nSLA breaches. :\u00a0Provides the trend of SLA breaches for\u00a0the metrics applied to tickets. Identifying trends in SLA breaches reveals patterns\u00a0in\u00a0meeting or missing commitments. This insight enables customer experience teams to address recurring challenges, enhance overall service efficiency, and implement strategic measures to consistently meet SLAs.\n\nCustomer satisfaction (CSAT).\n\nCustomer satisfaction (CSAT) measures\u00a0customers' satisfaction with\u00a0the support they receive.\u00a0Analyzing CSAT-related metrics empowers teams to determine overall customer\u00a0satisfaction\u00a0and identify areas for improvement. Monitoring various CSAT metrics is crucial for fostering continuous improvement, ensuring that customer experience teams consistently deliver experiences that align with customer expectations and enhance satisfaction.\n\nCSAT response rate. :\u00a0Displays\u00a0the trend of CSAT surveys sent\u00a0and responses\u00a0received. Understanding the response rate ensures that the collected CSAT data is\u00a0reliable, allowing customer experience teams to make informed decisions based on a comprehensive and representative set of customer feedback. Additionally, a low response rate may signal potential issues\u00a0with\u00a0the survey distribution or the need for adjustments to\u00a0encourage more customer participation. This improves the overall effectiveness of the CSAT measurement process.\n\nCSAT score distribution. : Provides information about the distribution of CSAT scores across the received responses. Analyzing the distribution of CSAT scores offers valuable insights into focus areas for improvement. Additionally, drilling through to identify tickets with low CSAT scores is beneficial for targeted efforts to enhance service quality and address customer concerns.\n\nTicket distribution.\n\nIdentifying the various distributions of tickets is instrumental in understanding the center of workload and pinpointing areas that may need focus. This insight guides teams in allocating resources effectively. Additionally, it assists in strategic planning by allowing teams to adapt their workflows and provide a more responsive customer experience.\n\nTickets linked to product work or enhancements. :\u00a0Provides information about the proportion of tickets that require product-related improvements. It helps identify bottlenecks and improvement areas at\u00a0a single glance.\n\nTickets created vs closed. : Provides information about the trend number of closed and created tickets within the specified time range. It enables the tracking of the balance between incoming ticket volume and successfully resolved tickets, facilitating informed resource allocation, workflow adjustments, and continuous improvement in ticket management processes.\n\nPrevious Support analytics Next Conversations dashboard\nOn this page\n\nCustomer and product impact Service level agreements Customer satisfaction (CSAT) Ticket distribution\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-965",
        "dataset_source": "devrev-dev0",
        "title": "Conversations dashboard",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nCustomer and product impact Service level agreements Customer satisfaction (CSAT) Responsiveness Conversation distribution Turing efficiency\nConversation dashboard.\n\nExplore the conversations dashboard for key metrics tied to conversations. The default range filter allows you to view metrics for a specific timeframe. Additional filters can be added to obtain more specific analytics.\n\nResolution rate. : Provides information about the percentage of conversations resolved within the selected period. This metric is crucial as it enables the team's ability to address user concerns. Monitoring this metric is essential for maintaining high customer satisfaction, optimizing support workflows, and identifying areas for improvement in conversation resolution processes.\n\nSLA compliance rate. : Provides information about the percentage of conversations that comply with the SLA policy out of all the conversations to which the SLA policy was applied. Further drilling through helps identify the conversations that breached the SLA and a more in-depth investigation of possible root causes can be conducted.\n\nCSAT score. : Provides information about the percentage of positive survey responses out of all survey responses received. It helps identify the overall percentage of satisfied customers with the conversation resolution experience. Further drilling helps to pinpoint the conversations contributing to the CSAT score calculation.\n\nMedian first response time. :\u00a0Signifies the middle value in the distribution of the time taken to provide the first response to the customer in a conversation. Knowing this metric helps enable better resource allocation, setting realistic customer expectations, and enhancing overall service efficiency.\n\nCustomer and product impact.\n\nCustomers and products constitute the two key pillars of effective support processes and experiences. This section helps in analyzing conversations from the perspectives of customers and product parts, aiming to enhance customer satisfaction, guide product development, and inform strategic decisions for continuous improvement.\n\nActive conversations per customer. :\u00a0Displays customers alongside the number of conversations they have created. Customers are ranked based on the number of conversations they have created, with the customer who created the most conversations appearing first. Understanding the number of conversations per customer offers insights into individual customer support needs, helping in prioritization decisions.\n\nActive conversations per product part. :\u00a0Provides a view of the product parts and the conversations raised for these product parts. Product parts on this list are ranked by the associated number of conversations raised, with the product with the highest number of associated conversations appearing first. Understanding the number of conversations per product part helps identify areas for product improvement and guides development efforts.\n\nService level agreements.\n\nService level agreements (SLAs) are formal commitments defining response and resolution times. Understanding SLA-related metrics enables teams to assess performance, ensure timely issue resolution, and maintain high customer satisfaction. Monitoring various metrics aids in resource management, proactive issue resolution, and continuous improvement, allowing customer experience teams to optimize processes and deliver efficient and effective service. These metrics help customer experience teams meet or exceed customer expectations and build strong, positive relationships.\n\nSLA breaches. :\u00a0Provides the trend of SLA breaches for\u00a0the metrics applied to conversations. Identifying trends in SLA breaches reveals patterns\u00a0in\u00a0meeting or missing commitments. This insight enables customer experience teams to address recurring challenges, enhance overall service efficiency, and implement strategic measures to consistently meet SLAs.\n\nConversation distribution across SLA stages. :\u00a0Provides the trend and breakdown of conversations across different SLA stages.\u00a0The SLA\u00a0stages are color-coded for identification and analysis. Drilling\u00a0through any\u00a0of the SLA stages shows a list of conversations that belong to that SLA stage at the selected point in time.\n\nCustomer satisfaction (CSAT).\n\nCustomer satisfaction (CSAT) measures\u00a0customers' satisfaction with\u00a0the support they receive.\u00a0Analyzing CSAT-related metrics empowers teams to determine overall customer\u00a0satisfaction\u00a0and identify areas for improvement. Monitoring various CSAT metrics is crucial for fostering continuous improvement, ensuring that customer experience teams consistently deliver experiences that align with customer expectations and enhance satisfaction.\n\nCSAT response rate. :\u00a0Displays\u00a0the trend of CSAT surveys sent\u00a0and responses\u00a0received. Understanding the response rate ensures that the collected CSAT data is\u00a0reliable, allowing customer experience teams to make informed decisions based on a comprehensive and representative set of customer feedback. Additionally, a low response rate may signal potential issues\u00a0with\u00a0the survey distribution or the need for adjustments to\u00a0encourage more customer participation. This improves the overall effectiveness of the CSAT measurement process.\n\nCSAT score distribution. : Provides information about the distribution of CSAT scores across the received responses. Analyzing the distribution of CSAT scores offers valuable insights into focus areas for improvement. Additionally, drilling through to identify conversations with low CSAT scores is beneficial for targeted efforts to enhance service quality and address customer concerns.\n\nResponsiveness.\n\nResponsiveness measures the customer experience engineer's promptness in addressing customer requests. Monitoring engineer responsiveness metrics allows organizations to optimize support workflows, allocate resources effectively, and enhance overall responsiveness to customer needs.\n\nMedian first response time. :\u00a0Shows the trend of the middle value in the distribution of time taken to provide the first response to the customer once they have raised a query or a request through a conversation. It provides a reliable benchmark for evaluating customer experience efficiency in addressing initial user queries and is important for guiding resource allocation strategies to ensure timely and responsive customer interactions.\nConversation distribution.\n\nIdentifying the various distributions of conversations is instrumental in understanding the center of workload and pinpointing areas that may need focus. This insight guides teams in allocating resources effectively. Additionally, it assists in strategic planning by allowing teams to adapt their workflows and provide a more responsive customer experience.\n\nConversations linked to tickets. :\u00a0Provides information about how many conversations are resolved by the customer experience engineer without the requirement of creating tickets and how many needed tickets to be created for further resolution. Useful insights for both customers and service engineers can be derived from this chart.\n\nConversations per channel. : Provides information about the channel-wise distribution of conversations initiated by customers. It helps to understand which channel customers prefer when raising a request. This information assists in identifying popular channels, enabling organizations to prioritize and enhance support on those platforms, improving overall customer engagement and satisfaction.\n\nActive conversations per owner. :\u00a0Provides information about the number of active conversations assigned to the customer experience engineer. This information aids in workload management, enabling teams to ensure equitable distribution, prioritize tasks effectively, and optimize customer experience operations.\n\nConversations created vs closed. : Provides information about the trend number of closed and created conversations within the specified time range. It enables the tracking of the balance between incoming conversation volume and successfully resolved conversations, facilitating informed resource allocation, workflow adjustments, and continuous improvement in conversation management processes.\n\nTuring efficiency.\n\nThe Turing bot is an AI-powered chatbot designed to deflect user queries in conversation. When enabled in auto-response mode, it references the knowledge base to generate answers. Measuring the efficiency of the Turing bot is crucial for assessing its performance, enhancing user experience, optimizing resource allocation, improving the knowledge base, and ensuring a cost-effective and streamlined customer experience.\n\nBot deflection. : Analyze the proportion of customer queries effectively handled by the Turing bot out of all customer queries raised. The bot deflection metric is useful for assessing the effectiveness of the Turing bot at handling customer queries. Drill-throughs can be used to further analyze the conversations that Turing is unable to handle, and updates to the knowledge base can be made accordingly.\n\nBot resolution. :\u00a0Analyze the proportion of customer queries effectively resolved by the Turing bot out of all the customer queries raised. The bot resolution metric provides insights into the proportion of queries the bot successfully manages, offering a clear indication of its impact on reducing human agents' workload.\n\nPrevious Tickets dashboard Next Conversations\nOn this page\n\nCustomer and product impact Service level agreements Customer satisfaction (CSAT) Responsiveness Conversation distribution Turing efficiency\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-966",
        "dataset_source": "devrev-dev0",
        "title": "Mar 01 to Mar 29, 2024",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nAirdrop Jira Airdrop Manage Recipe Orchestration Platform CSAT Conversation and Ticket Management Email Integration GitHub Snap-in Knowledge Base Management Notifications Record View Search Sprint mode Vistas\nMarch 2024.\n\nAirdrop Jira.\n\nIssues created in DevRev and synced to Jira now automatically receive the DevRev tag, which is then added as a label to the Jira issue. This distinction helps in identifying issues created via the Airdrop sync as opposed to those created natively in Jira.\n\nTag in DevRev:\nLabel in Jira:\n\nFor more information about Airdrop Jira , refer to the following article: Jira import\n\nAirdrop.\n\nManage Recipe Resolved an issue where specific text content within an issue description or other body of text could generate invalid Jira ADF, leading to sync failure.\nOrchestration Airdrop syncs from the same system, like Jira, will no longer interfere during user mapping, enhancing efficiency and enabling uninterrupted concurrent syncs.\nPlatform DevRev tickets now include URL links to ServiceNow accounts, contacts, and cases.\n\nFor more information about Airdrop , refer to the following article: Airdrop\n\nCSAT.\n\nThe branding of the CSAT survey email has been made generic to ensure that end customers do not associate it with DevRev.\nConversation and Ticket Management.\n\nImprovement: Changes to the accepted stage validations to enable ticket movement to accepted when linked to an enhancement in ideation or prioritized stage, or when all linked issues are in backlog.\nEmail Integration.\n\nFix: We have increased the attachment limit to 50 for every ticket comment created by and responded to via the Email snap-in.\n\nThe readability of error messages in the DMARC send email API has been enhanced to facilitate easier troubleshooting.\n\nThe new email composer now supports organization-wide email signatures configured within the Email snap-in.\n\nFix: Tickets can now be created from emails with subject lines longer than 256 characters. While the ticket title will be a summarized version of the email subject, the original email subject will be maintained to ensure threading remains intact.\n\nIntroducing improved error reporting for email integration:\n\nGain insights into unprocessed emails due to internal or configuration errors.\n\nDropped emails now appear in the snap-in timeline with a retry feature for seamless synchronization.\n\nCustomer experience team notified of failed timeline comment emails, enabling quick rectifying and resending.\n\nReduces the risk of data loss and communication gaps between the customer experience team and end customers.\n\nFor more information about Email Integration , refer to the following articles: \u2023 Email\n\nGitHub Snap-in.\n\nA new upgraded version of the GitHub snap-in is available, featuring some exciting new features:\n\nManual registration of webhooks during snap-in installation is no longer necessary; we can now automate this process.\nThe snap-in now includes user-level preferences, allowing each developer to choose whether they want automatic issue creation or not.\n\nFor more information about GitHub Snap-in , refer to the following article: GitHub\n\nKnowledge Base Management.\n\nThe awaited Knowledge Base management feature is now live on DevRev. Write, group, and order articles within multiple collections for improved hierarchy and readability. Host them on our support portal. You can read more about it here.\n\nEnable your help center inside the PLuG Widget to ensure seamless access to all help center collections and articles.\n\nNew callout box feature in our Rich Text Editor highlights warnings, errors, and important information to enhance article visibility.\n\nImproved video embedding now supports Loom videos directly within DevRev articles.\n\nIntroducing AI in the DevRev Articles writing experience. Use Ask AI to adjust text length, grammar, and tone.\n\nFor more information about Knowledge Base Management , refer to the following article: Articles\n\nNotifications.\n\nEmail notifications now come from the updater, featuring the record's title in the subject line for quick context identification.\n\nCustomer Chat now includes a distinct tag and icon, making it easier to distinguish between customer interactions and internal discussions at a glance.\n\nFor more information about Notifications , refer to the following article: Updates\n\nRecord View.\n\nClicking on an image or link within the description no longer switches to edit mode automatically, providing a smoother user experience.\n\nPressing Escape now cancels changes in the description, returning users to view mode, streamlining the editing process, and preventing unintentional closure of the side panel.\n\nSearch.\n\nThe search modal now automatically selects your previous search query when reopened, making it easier to modify your search.\n\nFor more information about Search , refer to the following article: Search\n\nSprint mode.\n\nTransition issues across sprint boards seamlessly from any list view. Select multiple issues and select Move from the toolbar to efficiently assign them to your targeted sprint within the desired board.\n\nCustomize your sprint board view effortlessly! Navigate to the settings panel to select Sort By and Group By options, organizing your sprint board layout to your preferences.\n\nEnhance sprint planning with greater control over sprint timelines. Set precise start times in addition to dates, ensuring alignment with your team's workflow. The sprint edit modal now displays precise start and end timestamps for added clarity.\n\nFor more information about Sprint mode , refer to the following article: Sprint mode\n\nVistas.\n\nWe have enabled alphabetical sorting based on ticket names across all ticket vistas.\n\nEasily identify tickets linked or not linked to issues or opportunities using our new Links filter with any of and none of operators in ticket views. Similarly, identify issues linked to tickets from the issues view using the same filter.\n\nFor more information about Vistas , refer to the following article: Vistas\n\nPrevious Changelog Next Feb 10 to Feb 29, 2024\nOn this page\n\nAirdrop Jira Airdrop CSAT Conversation and Ticket Management Email Integration GitHub Snap-in Knowledge Base Management Notifications Record View Search Sprint mode Vistas\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-967",
        "dataset_source": "devrev-dev0",
        "title": "Oct 13 to Nov 09, 2023",
        "content": "Product Platform Solutions Marketplace Company Resources Pricing\n\nLogin Book a demo\nProduct Platform Solutions Marketplace Company Resources Pricing\nLogin Book a demo\nSearch CTRL + K\n\nIntroduction OneCRM platform\n\nCore concepts Apps Groups Parts & trails Vistas Customers Tasks Updates Customer email notifications Roles Access control Glossary Search People insights Accessing DevRev External identity provider setup\n\nSupport\n\nInbox Support analytics\n\nTickets dashboard Conversations dashboard\n\nConversations Tickets Routing Support best practices Customer portal Question & answers Articles Turing bot Service level agreement Support snap-ins\n\nBuild\n\nIssues Now, Next, Later Sprint mode Enhancements Roadmap Build best practices Build snap-ins\n\nGrow Grow snap-ins\nSnap-ins\n\nAutomate\n\nAutomatic customer reply Auto routing Auto parts to conversation Automate opportunities Bulk ticket uploader Convergence CSAT on conversation CSAT on ticket Descope identity validation Follow-up ticket Link preview Sentiment evaluator Smart import KBs SLA status change Slack notifier Slash commands Smart sprint Ticket age in engineering Work duration\n\nIntegrate\n\nCalendly Google Calendar Email Slack ZoomInfo enricher WhatsApp GitHub Harness Instabug\n\nAirdrop\n\nHubspot Airdrop Salesforce Airdrop Zendesk Airdrop Rocketlane Airdrop Confluence Airdrop ServiceNow Airdrop Jira Airdrop DevRev for Jira app\nLinear Airdrop\n\nPLuG\n\nInstall PLuG widget on your website Identify your users with PLuG Customize Nudges SDK\n\nChangelog\n\nMar 01 to Mar 29, 2024 Feb 10 to Feb 29, 2024 Jan 09, 2023 to Feb 09, 2024 Dec 08, 2023 to Jan 08, 2024 Nov 10 to Dec 07, 2023 Oct 13 to Nov 09, 2023 Sep 15 to Oct 12, 2023 Aug 17 to Sep 14, 2023 Jul 20 to Aug 16, 2023 Jul 06 to Jul 19, 2023 Jun 20 to Jul 05, 2023 Jun 05 to Jun 19, 2023 May 22 to Jun 05, 2023 Apr 22 to May 22, 2023\n\nDeveloper\n\nOn this page\nWhat's new What's fixed\nOct 13 to Nov 09, 2023.\n\n3 new enhancements; 3 resolved issues\n\nWhat's new.\n\nNotifications This enhancement improves the email notification experience. Email notifications now include more relevant and contextual information. Users can also perform actions directly from emails in their inbox, making emails interactive.\n\n\ud83d\udec8 For more information about Notifications , refer to the following article: Updates | Documentation\n\nSmart Sprint Automation The new Smart Sprint Snap-in (available on the DevRev marketplace) reduces manual work and enables users to synchronize sprints and development work. With powerful automations, managing and assigning issues to the right sprints has never been easier. From smart assignment based on issue stage changes to intelligent updates based on parent-child relationships, this Snap-in streamlines the entire process.\n\nSprint Insights We're excited to introduce a new feature called Sprint Insights that provides valuable information and analytics to track sprint progress. Use sprint insights to make informed decisions, optimize team performance, and achieve your sprint goals. Here are the key highlights of this new feature: 1. Burn-down chart. : This chart visualizes sprint progress by viewing \"scope change over time\" and \"changes in work remaining over time\". A line represents \"total incomplete issues over time\" and another line represents total work remaining on issues linked to customer requests. 2. Filters for focused analysis. : Ability to apply filters at the top of the page for 'Part', 'Owner', and 'Priority'. This feature gives you greater control and flexibility when analyzing the performance of your sprints. 3. High-level breakdown of work. : Data-driven insights to help answer how much development work is focused on new features and how much of it is customer-requested. This helps you gain deeper insights into the type of work within your sprints. 4. Issue distribution. : Insights to understand the distribution of work across stages, owners, priority, and parts of your product. 5. Sprint health. : Provides a snapshot of sprint health by capturing key metrics like % of work, time remaining in sprint, and overall scope change since start of the sprint. 6. Time spent per stage. : One can view and analyze the average time spent in each stage since the beginning of the sprint. This helps developers reflect on which stages of their work are taking up the most time.\n\nWhat's fixed.\n\nNew Renderer Support We now support a time picker in the UI on all timestamp fields\n\nOne Slack Our One Slack integration wasn\u2019t letting users create tickets using the slash command. Fear not\u2014we fixed it.\n\nRich Text Editor Users can now set a preference for using Enter or Cmd + Enter to send a message\n\nPrevious Nov 10 to Dec 07, 2023 Next Sep 15 to Oct 12, 2023\nOn this page\n\nWhat's new What's fixed\n\nSOC2 compliant\nEnterprise grade security to protect customer data\nProduct\n\nBuild Support Marketplace\n\nPlatform\n\nAirDrop Analytics Workflow Engine\n\nResources\n\nPricing Blog News Case studies Documentation API Reference The Book of DevRev\n\nCompany\n\nAbout People Careers Invest\n\nConnect\n\nContact Instagram Medium Linkedin Twitter\n\nLegal\n\nSecurity Privacy policy Terms of service\n\nSystem Status\n\u00a9 2024 DevRev Inc.\n<iframe src=\"https://www.googletagmanager.com/ns.html?id=&quot;GTM-WPGVZN9&quot;\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>"
    },
    {
        "id": "ART-970",
        "dataset_source": "devrev-dev0",
        "title": "The Story",
        "content": "\n\nI first met Steve in 2011, when we were still less than a two year old company, Nutanix. I was young, but he was even younger, probably 10 years younger \u2014 a fountain of youth for me as we both grew together, learning from each other, making mistakes along the way. We were hustling for early customers, creating nascent benchmarks, jostling with naysayers on Twitter, defining an MQ with Gartner, losing debates with the skeptics, and of course, winning hearts and minds of innovators and early adopters.\n\nCompany building is hard. Finding people who believe in building is even harder \u2014 because you have to learn to reset the clock, assume once again that you haven\u2019t achieved anything, and don\u2019t know much. Then you start learning again, having made yourself vulnerable in the new arena, with a new problem statement, new competitors, new peers, and new technologies.\n\nSteve has done exactly that: reset the clock with DevRev after having spent a decade at Nutanix converging IT infrastructure, making machines invisible. He\u2019s back to converging again, this time business infrastructure that is hopelessly fragmented, dispersed, and extremely complex to stitch together.\n\nA 5-people startup is elegantly simple. It has a couple of founders, a few early developers and designers, and a handful of early adopters. Everyone knows the product, and everyone communicates with the customer. They don\u2019t just communicate, they collaborate with the end user, and mostly in real-time as technologies improved this past decade. Everything is real-time and continuous \u2014 integration, deployment, nudges, onboarding, feedback\u2026 and collaboration.\n\nAs companies grow, clouds begin to emerge: an engineering cloud, a production cloud, a support cloud, a marketing cloud, a sales cloud, a customer success cloud, an analytics cloud, and of course, a collaboration cloud separate from all business systems. Everyone is working hard \u2014 jostling for growth, trying to contain customer churn \u2014 being on the Zoom treadmill early mornings and late evenings, updating Slack channels, responding to emails, being in unnecessary meetings for fear of missing out, and hopelessly searching for answers to do what matters most. The customer and the product are forever lost. The energy vampire of busy work, especially with remote peers, has raised its ugly head.\n\nSimplifying something this fragmented takes immense energy. Manoj and I are so grateful for the early DevRevelers to have put so much effort to define this new paradigm of business software that makes the back office customer-centric, and the front office product-centric \u2014 helping businesses support users (not tickets), build products (not projects), and grow customers (not departments). Defining the object and resiliency model, the event model, the security model, the SQL and analytics model, the large language and AI model, and the migration pathways has been hard, really really hard. But it has been fun in a close-knit family that fights together, designs together, and travels together.\n\nWriting is a rare skill. Writing something as it is being created is rarer. Manoj and I are thankful that we founded DevRev with Steve early. The Book of DevRev is a testament that friends can work together for decades, disrupt markets, and be constant students of life and technology. I look forward to seeing The Book evolve along the way, helping you appreciate the effort that goes behind the Effortless\u2026\n\n\u2014Dheeraj Pandey, co-founder and CEO, DevRev, Prior Chairman and CEO, Nutanix\n\n\nTo begin, I would just like to say thank you and welcome! Time is valuable and I hope throughout this work we can provide valuable insight and knowledge.\n\nA key theme in my life has always been not only the pursuit of knowledge but sharing of my learnings with others. Sadly, a lot of people safeguard knowledge; knowledge is not something that should be held close to the chest, it should be exposed.\n\n\n  The power to make a difference lies not only in what we know but also in our capacity to share it.\n\n\nThe original inspiration for this work has roots in our previous company, both figuratively and literally. We realized the power of being transparent, open, and sharing our knowledge with the world with a work called The Nutanix Bible. This allowed us to enable our employees, our partners, and our customers; which led to a much more productive and fruitful environment.\n\nHowever, we also faced many challenges and frustrations as we grew that product and business which caused us to question things. This spark led to an epiphany that it was time for a better way of doing things and led to the birth of the idea of DevRev.\n\nWith the Book of DevRev, we aim to not only talk about some of our lessons learned, and tips for success, but also to create a platform for others to share their experiences. The world is a diverse place and we would be remiss to ever believe we were all knowing. With this, we aim to set knowledge free, learn from one another, and enable everyone to build better products and companies!\n\nLet\u2019s grow together \u2013\n\n\u2014Steven Poitras (aka SP, aka The Dude)\n\n\nWe commence our exploration at the very core of genesis, representing the inception and creation of business. We delve into the profound influence of evolution, an unwavering force that not only shapes the natural world but also leaves its mark on the realms of business and technology.\n\nBusinesses, tracing their origins from the early days of tangible trade to the contemporary landscape dominated by software companies, have encountered distinctive challenges and undergone transformative journeys. Throughout our voyage, we underscore the critical importance of adaptability, especially in light of the dramatic shift in consumer expectations.\n\nOur scrutiny extends to the evolution of systems, encompassing the integration of ERP and CRM systems, as well as the rapid technological advancements that have unfolded. Central to our exploration is the fundamental query: How have these systems evolved to align with the evolving needs of modern enterprises?\n\nLastly, we immerse ourselves in the genesis of the AI revolution, a technological marvel that has reshaped our world. Large language models and generative transformers have ushered in a paradigm shift in our interactions with technology and information, challenging conventional search methods and unlocking new realms of creative potential.\n\nEvolution\n\n\n\n\n  \u201cIt is not the strongest of the species that survive, nor the most intelligent, but the one most responsive to change.\u201d - Charles Darwin\n\n\nWithin the natural world, the concept of evolution stands as one of the most profound and influential forces. It is the unyielding current that has propelled life from its humble origins as minuscule molecules to the rich diversity of complex living organisms we behold today. These same forces hold true with the evolution of customer needs, technology, products and businesses alike. In this exploration, we delve into the heart of evolution and how this has impacted business, their supporting systems and finally the impact of AI.\n\nBusiness\n\nThe evolution of businesses has been a dynamic journey, starting with the production and trade of tangible goods and services. As businesses aimed for profitability and scalability, the emphasis on efficiency became paramount. In parallel, the landscape of businesses has transformed, particularly with the proliferation of software companies, leading to distinctive challenges, processes, and needs compared to traditional enterprises. While many businesses have attempted to retrofit their models to existing systems, this approach often presents challenges, as experienced by our prior company.\n\nIf we just look at the proliferation of and evolution of software companies since the introduction of the mainframe to the dot-com boom to the cloud era and now the GenAI era; the sheer number, scale and impact of these companies has dwarfed many others. In some analysis the software and digital portion of the technology total addressable market (TAM) has massively increased from a mere 25% in 1995 to over 75% as of late. This digitization is a fundamental shift, which, in most accounts, will continue to expand.\n\nConsumers\n\nSimilar to how businesses have impacted the world as we know it, the products they\u2019ve produced have brought about a shift in the way consumers use, engage and purchase products. This intertwined dance of products and customers continually drives innovation and is constantly changing the expectations of the consumer.\n\nMoreover, consumer expectations have shifted significantly. The balance of power has tilted from vendors to consumers, who now have an abundance of choices (optionality). To attract and retain customers, businesses must reconsider their approaches, raising questions about the relevance and efficiency of traditional methods in this rapidly changing environment. Consumers today are more informed, empowered, and connected than ever before. The digital age has given rise to an era of online shopping, personalized experiences, and instant access to information, profoundly influencing their behavior. This shift has prompted businesses to focus on enhancing user experiences, offering seamless digital interactions, and leveraging data-driven insights to meet the evolving needs of the modern consumer.\n\nSystems\n\nThe implementation of structured processes and methodologies has significantly enhanced operational efficiency within businesses. The advent of computers further accelerated this efficiency, and the subsequent integration of enterprise resource planning (ERP) systems, encompassing functions such as finance, manufacturing, supply chain, inventory management, and procurement, played a pivotal role in optimizing overall business operations. Shortly after, the adoption of customer relationship management (CRM) software emerged as a means to effectively monitor customer engagement, marketing campaigns, and business opportunities. Additionally, the development of customer support systems became essential for addressing issues that arose after customer acquisition.\n\nConsidering the rapid evolution of technology in recent years, as well as over the past decade, it becomes evident that numerous facets of the industry have undergone profound transformations. These include shifts in programming languages, evolving methodologies, architectural advancements, interfaces (e.g., social, mobile) and changing user expectations.\n\nIn light of these substantial technological advancements, a pertinent question arises: How have these software products evolved, given that many of them have been in existence for more than 15 years?\n\nHuman and Business Interaction\n\nThe landscape of human and business interaction has undergone a profound transformation throughout the years. From the early days of exclusive in-person encounters to the era of carrier pigeons and telegrams, followed by the revolutionary advent of the internet, and culminating in the perpetually connected world of today, the metamorphosis has been relentless and will undoubtedly persist.\n\nThis journey has left no aspect untouched, revolutionizing how individuals collaborate, how to engage and interact with customers.\n\n\n  The dynamics of collaboration among individuals.\n  The strategies employed for engaging customers.\n  The manner in which customers interact with businesses.\n  The approaches taken in providing customer support.\n  And a myriad of other dimensions.\n\n\nTo illustrate this, consider the bygone era before the internet\u2019s ascent, when customer outreach predominantly relied on conventional methods such as physical mail, billboards, or radio advertisements. In stark contrast, the digital realm now reigns supreme with the advent of the internet and social media platforms.\n\nLikewise, the means by which businesses interact with and support their customers have undergone remarkable evolution as well. Initially, interactions primarily took place in person or through telephone conversations. With the advent of the internet, email emerged as a powerful alternative. Fast forward to the present, and chat interfaces and social media have gained prominence, gradually eclipsing traditional methods.\n\nIn the realm of internal collaboration, the impact of COVID-19 has reshaped the way people work. Traditionally, work and collaboration thrived on physical proximity. However, in the wake of the pandemic and the ensuing paradigm shift toward \u201cremote work,\u201d collaboration dynamics have shifted from a co-located model to a decentralized one. This transition leverages an arsenal of collaboration tools, including messaging platforms and video conferencing, to bridge the physical gap. It\u2019s crucial to recognize that rather than debating the merits of these two approaches, the key lesson lies in embracing both local and remote work paradigms to drive efficiency.\n\nThe AI Revolution\n\nThe emergence of Artificial Intelligence (AI) technologies, such as large language models (LLM), generative pre-trained transformers (GPT), and vector databases, has transformed the technological landscape. While AI had its skeptics a mere five years ago, it is now undeniable that AI is a game-changer, just like the internet and cloud were revolutionary.\n\nAI has not only changed our perception of technology but also revolutionized how we conduct tasks. For instance, AI-powered models can access and process vast amounts of information from the internet to answer queries, potentially rendering traditional search methods obsolete.\n\nFurthermore, AI\u2019s influence extends to content creation, with AI-generated content becoming increasingly prevalent. This shift has the potential to alter the value of content, especially as AI could replace traditional search engines that index generated content. Businesses may need to adapt their content strategies to influence AI models and shape the information presented to users.\n\nLastly, AI has also impacted creativity, offering tools that change the way people envision, design, and iterate. These innovations empower individuals to create complex and detailed content independently. In fact, Midjourney was used to generate a great deal of the abstract images used throughout this book.\n\nWe have transitioned from a phase where AI was associated with apocalyptic scenarios to an era where AI enhances our lives, improves efficiency, and reshapes the way we interact with technology and information.\n\n\nThroughout our relentless exploration of how we could have evolved and approached things from a different perspective, we\u2019ve acquired deep and meaningful understanding. This isn\u2019t just theoretical pondering; it represents the invaluable wisdom we\u2019ve gleaned through our encounters with real-world challenges, are encountering in the present and future alike.\n\nIn this section, we dive into the nitty-gritty details and unveil the lessons we\u2019ve learned. We\u2019ve witnessed the stark disconnect between dynamic businesses and their stagnant support systems. And we\u2019ve asked the pivotal question: Why persist with an outdated approach when modern enterprises demand agility?\n\nOur journey continues with the pitfalls of organizations, where we\u2019ve encountered the hurdles of silos, knowledge gaps, and the quest for unity. It\u2019s a journey from the humble beginnings of startups to the complexities of established businesses.\n\nJoin us as we share the insights and discoveries that have led us to a new way of thinking about the intricate relationship between business and technology. This is a practical guide, offering invaluable lessons for leaders, innovators, and anyone navigating the ever-evolving landscape of modern enterprise.\n\nThe Impedance Mismatch Between Business Evolution and Systems\n\n\n\nAs businesses have evolved, embracing new paradigms and navigating a rapidly changing landscape, a clear and significant discrepancy has emerged. While businesses have adapted, innovated, and expanded, the systems supporting them have often remained stagnant, unable to keep pace with evolving needs. When you think about the changes just in technology alone, the systems developed even a few years ago will face dramatic challenges or the need for re-platforming or re-writing to fully embrace current technology. For example, some legacy systems still rely on older relational structures, and the shift to a vector database would be a massive undertaking. Similarly, the way systems were built has dramatically evolved including the languages, the interfaces (e.g., APIs and webhooks), and ways things were built (e.g., monolithic vs microservice archtiecture) which can be very limiting when it comes to embracing the latest and greatest.\n\nThis incongruity between the dynamic nature of business and the static nature of their supporting systems has raised a critical question: Why persist with an approach that no longer aligns with the demands of modern enterprises? This question has led to a resounding realization that a fundamental shift is imperative.\n\nChallenges related to visibility, efficiency, and effectiveness have underscored the limitations of traditional methods. Consequently, a growing imperative for a new, adaptive solution has emerged to bridge the widening gap between the ever-evolving business landscape and the systems that underpin their operations.\n\nSilos and Organizational Evolution\n\n\n\nAllow me to commence with a brief narrative\u2026\n\nIn the year 2011, when I embarked on my journey with Nutanix, the landscape was far from auspicious. Our venture lacked a shipping product, customer base, and the product itself was a work in progress. We operated from a single room on Technology Dr. in San Jose, CA, encapsulating those formative \u201cearly days\u201d familiar to all startups.\n\nAs our product gained traction and viability, we expanded our purview to include dedicated Ops/IT teams, ensuring the stability of our operations. The initial model of our engineering team supporting customers proved unsustainable, prompting the establishment of a dedicated support team, complete with a ticketing system. In parallel, we listened keenly to our early customers, using their insights to evolve our product into something we could confidently promote and sell. Consequently, we welcomed marketing and sales teams into the fold, along with the introduction of then essential tools like Salesforce CRM and Marketo.\n\nIn those initial stages, proximity facilitated seamless collaboration and communicmake ration; questions were addressed with a mere shout or a short walk. However, as our business burgeoned, fissures in knowledge sharing and the rise of organizational silos became increasingly evident. Each team cultivated its own system and workspace, with sales on one end of the building and marketing on the other. Over time, these divisions solidified, unintentionally erecting barriers to effective collaboration.\n\nAs Nutanix continued to grow, the issue intensified, with these silos becoming even more entrenched. Allocating additional resources, while a common response, failed to address the root problem, and individual productivity remained elusive.\n\nRegrettably, it\u2019s a common tendency for leaders to hoard knowledge, viewing these silos as a form of leverage. However, this mindset, while it may serve their immediate interests, ultimately undermines the greater good of the company. Conversations with numerous individuals and businesses confirmed that this issue wasn\u2019t unique to our organization; it plagued companies of all sizes.\n\nThe Inevitable Proliferation of Silos \n\nWhen contemplating the structure of a company, one inevitably encounters the inclination to build these silos. In most businesses, departments such as Engineering, Support, Sales, Marketing, IT, HR, Finance, and Accounting function as distinct entities, each essential for the company\u2019s success. For optimal efficiency, these units must operate harmoniously; any discord can manifest as inefficiency or, in extreme cases, jeopardize the company\u2019s viability.\n\nWhether by design or circumstance, companies frequently gravitate toward silo creation. As they expand, new departments and leaders often introduce their own systems of record, each demanding its autonomous domain.\n\nThe visual below illustrates a typical scenario, where disparate teams operate within their silos, often without shared accounts or integrated systems. This fragmentation leads to duplication, inconsistency, and a lack of coordination, as each team interprets information differently.\n\n\n\nThe Hidden Costs of Silos \n\nGenerally, a series of consequences and impacts tend to arise:\n\n\n  Coordination Dilemmas and Inefficiency:\n    \n      Frequently, each department operates with its individual plans and roadmap, often in isolation.\n      This lack of coordination can result in misaligned efforts and even gross duplication of work.\n      Operating within silos also leads to inconsistency across departments.\n    \n  \n  Knowledge Barriers and Gaps:\n    \n      Some may regard knowledge and information as leverage, but this often breeds internal politics, detrimental to business.\n      Users are typically confined to their respective systems, lacking access to others.\n      For instance, an Engineer might have access to their work system like JIRA or DevRev but not to support systems like ZenDesk or SFDC Service Cloud.\n      This leads to fragmented context and a lack of the \u201cbig picture.\u201d\n    \n  \n  Subpar Employee Experience:\n    \n      Silos can foster a competitive rather than collaborative environment.\n      Discovering that one\u2019s work has been duplicated elsewhere can be demoralizing.\n      Due to the absence of full context and the constant need to relay information between teams, this often results in \u201cwork suck.\u201d\n    \n  \n  Dismal Customer Experience:\n    \n      Few things are as frustrating as encountering a problem, speaking to a support representative, and then a salesperson who\u2019s unaware of the support agent\u2019s actions.\n      This frequently leads to inconsistent messaging, portraying a negative image of internal coordination and execution capability to the customer.\n    \n  \n\n\n\n  But perhaps you\u2019re thinking, \u201cThat\u2019s not my problem\u2026\u201d Are you entirely sure?\n\n\nLet\u2019s consider this from the perspectives of various personas:\n\nProduct Manager:\n\n\n  How would your approach evolve if you had a holistic view encompassing customer requests, product usage, bug tracking, and revenue potential?\n  Imagine gaining a comprehensive understanding of your customers, including their support interactions, engagements, and product usage.\n  Consider the possibilities of identifying and prioritizing high-impact items based on their revenue implications.\n\n\nSupport Engineer:\n\n\n  How would your approach change if you knew about potential opportunities or deals with the customer?\n  Imagine not having to engage in the tedious task of copying and pasting between engineering issues and your tickets.\n  What if you could effortlessly track the status of escalations and have that status automatically reflected in the ticket?\n\n\nSales Representative:\n\n\n  What if you had full visibility and could easily monitor the challenges your customers face, receiving notifications when issues arise?\n  What if you could prioritize certain fixes based on deal size?\n  Imagine having immediate insight into matters that your customers care about or being promptly notified about new developments from the engineering team.\n\n\nCustomer Success:\n\n\n  What if there were a unified platform providing clear visibility into your customer\u2019s tickets, opportunities, and relevant engineering issues?\n  How would a more coordinated approach impact your customer\u2019s overall experience?\n  What if you could prioritize work based upon risk to churn and growth opportunities?\n  If a system existed for sharing context, how much manual coordination effort could it save you?\n\n\nFinance:\n\n\n  What\u2019s the cost of context-switching and inefficiency within your department?\n  If you could save 30 minutes of wasted work daily, what would the opportunity cost savings amount to?\n  Consider the cost of an individual being 20% less productive and then extrapolate that to a company-wide scale.\n\n\nHuman Resources (HR):\n\n\n  How does inefficiency or lack of knowledge affect employee morale?\n  Does the manual inefficiency negatively impact their well-being?\n  What if you could empower them to be more productive? How would that boost morale?\n\n\nWhether we embrace it or not, silos cast an impact on everyone within the business, either directly or indirectly. They genuinely influence productivity, experience, efficiency, and, ultimately, the bottom line. So, have you ever considered the true cost of inefficiency for your business?\n\nUnifying Your Product Perspective\n\n\n\nWhen we embark on the journey of managing a product portfolio, numerous critical questions demand our attention. How should we perceive our product lineup? What products are currently at our disposal, and what unique capabilities do they bring to the table? And, perhaps most importantly, how do we make informed decisions about product investments, divestments, or discontinuations?\n\n\n\nHow we contemplate our products and structure them within our organizational framework constitutes a foundational prerequisite for addressing these intricate inquiries. Without a well-defined and meticulously structured product hierarchy, the fog of uncertainty obscures our vision, leaving us without the clarity needed for effective decision-making.\n\nCommence with the Why \n\nFirst and foremost, why is this matter of such importance?\n\nDrawing from our past experiences, we encountered formidable visibility challenges stemming from an inability to correlate revenue, costs, and defects with precise granular facets of our products. While we could enact a semblance of this analysis at a crude level, the absence of a mechanism to delineate distinct ROI for each feature imposed significant constraints.\n\nConversations with fellow founders and leaders in established companies unveiled a shared predicament. While organizations could oversee operations at a macro level, the conundrum of deciphering which features to amplify, curtail, or discontinue in the context of substantial engineering teams remained perplexing. Optimization became paramount, considering the judicious allocation of time, financial resources, and opportunity costs.\n\nReturn on investment (ROI) has perennially taken center stage in departments like sales and marketing. For instance, envision a sales representative, with a designated cost structure encompassing base salary, commissions, and travel and entertainment expenses. By quantifying the generated pipeline and revenue, one can effortlessly appraise the ROI for that representative. It bewildered us that analogous objective assessments or granular ROI evaluations weren\u2019t commonplace when it came to products.\n\nOne of the fundamental tenets underlying the development of the DevRev platform centered on the insistence that everything must be intrinsically linked to a product and/or customer. But why, you might wonder? The answer is unequivocal: Clarity. By establishing these interconnections, we gain the capacity to address a multitude of probing questions, including but not limited to:\n\n\n  Which features constitute the primary revenue drivers?\n  What features are customers actually using?\n  What was the development cost associated with a specific feature?\n  Which capabilities exhibit the highest defect rates?\n  Which features are experiencing accelerated adoption rates?\n  What ROI did a particular feature yield?\n\n\nThe Product Lifecycle\n\n\n\nIn the realm of modern businesses, a distinct pattern emerges, emphasizing specific areas of focus throughout the lifespan of a product or service.\n\nWe\u2019ve broken down this journey into four fundamental quadrants:\n\n\n  Build\n    \n      Focuses on the ideation, creation, and evolution of products or services.\n    \n  \n  Operate\n    \n      Focuses on the operation, monitoring and incident management of products or services.\n    \n  \n  Support\n    \n      Focuses on the support and troubleshooting with customers, collaboration with them, and a collaborated effort to minimize churn.\n    \n  \n  Grow\n    \n      Focuses on the expansion of product adoption including new customer adoption, nurture, awareness and retaining.\n    \n  \n\n\nThe diagram below offers a visual representation of these quadrants and the link back to product:\n\n\n\nThis comprehensive lifecycle serves as a cornerstone for any organization aiming to retain competitiveness within its industry. It encompasses the multifarious stages a product traverses, commencing from initial design and development, progressing through evolution, and concluding with eventual decline or obsolescence. In this article, we will embark on a high-level exploration of these distinct phases. Subsequent in-depth discussions for each quadrant will follow in dedicated posts.\n\nNote: While primarily applicable to products and services, these quadrants equally pertain to a company and its personnel.\n\nArtificial Intelligence (AI)\n\n\n\n\n\nIn the age of artificial intelligence (AI), change is the only constant. AI\u2019s profound impact on our world, akin to the internet\u2019s transformation, demands our attention. With AI\u2019s undeniable presence, those who resist its embrace risk falling behind.\n\nHowever, integrating AI into existing systems is no simple feat, especially for products born before the AI revolution. Re-platforming is imperative, but it comes with formidable challenges, including the critical role of context in AI effectiveness, the need for swift adaptation, extensive system redesign, and internal dynamics.\n\nThis exploration delves into the pivotal role of context in AI, emphasizes the importance of context for unlocking AI\u2019s potential, and underscores the significance of knowledge graphs. These versatile tools go beyond item similarity, helping us organize and cluster events over time, make informed decisions, and navigate the complexities of our data-driven world. Join us as we navigate the evolving AI landscape, reshaping industries and redefining technology\u2019s role in our lives.\n\nAI will eat the world \n\n\n  \u201cChange is the law of life. And those who look only to the past or present are certain to miss the future.\u201d - John F. Kennedy\n\n\nInevitably, AI is becoming an indomitable force, reshaping the very foundations of our world. Much like the advent of the internet, its impact is profound, and those who hesitate to embrace it risk falling behind.\n\nTo illustrate this transformation, consider that nearly all the images within this work were crafted with the assistance of AI. This isn\u2019t conjecture; AI is an undeniable reality.\n\nThe Imperative for Re-platforming \n\nFor systems and products conceived prior to the AI revolution, a fundamental re-architecture is imperative to unlock its full potential.\n\nWhile every vendor may harbor the potential for AI integration, the journey may be riddled with challenges, some surmountable, and others insurmountable. In navigating these waters, it\u2019s wise to apply a litmus test, for often, marketing promises diverge from stark realities.\n\nHere are some formidable challenges they may encounter:\n\n\n  Limited context impedes their results (you can\u2019t fix what you don\u2019t know; this is paramount).\n  Inability to pivot swiftly (turning a tanker is vastly different from steering a small boat).\n  Extensive redesign of user interfaces and backend systems (the extent varies but is essential).\n  Encounters with internal politics and conflicts (in larger organizations, everyone seeks a slice of the pie).\n\n\nContext is Key \n\nIn the realm of AI, models are only as effective as the context they possess (e.g., training data, fine-tuning data, and embeddings). For instance, both Chat GPT 3.5 and 4.0 were trained on publicly available internet data as of September 2021. Still, they lack knowledge of the current state. AutoGPT and similar innovations aim to bridge this gap by providing the ability to acquire additional context, yet\u2026\n\n\n  That\u2019s not the key, the key is in the data that you have that the models don\u2019t have access to.\n\n\nThe greater the context you can furnish through embeddings or fine-tuning, the more powerful AI becomes in your hands.\n\nThe Significance of Knowledge Graphs \n\nKnowledge graphs stand as invaluable tools that facilitate the organization and association of items based on various dimensions. Their utility extends beyond merely establishing item similarity; they excel at the localization and clustering of events over time as well. These can be used to reduce the potential of hallucinations, enhance model viability with fine-tuning and leverage things like reinforcement learning from human feedback (RLHF). The true power of AI is attainable when you can correctly bias it, else you are at fate of training sets.\n\nKnowledge graphs serve a multifaceted purpose, offering the following key advantages:\n\n\n  Dimensional Clustering: Knowledge graphs enable the grouping of items or entities by considering multiple dimensions simultaneously. This sophisticated clustering ability aids in the identification of intricate relationships and patterns that might otherwise remain concealed.\n  Enhanced Similarity Analysis: By incorporating a wide range of attributes and connections, knowledge graphs allow for a comprehensive examination of item similarity. This goes beyond basic comparisons, as it takes into account nuanced relationships and contextual information.\n  Temporal Event Clustering: Knowledge graphs are not confined to static data. They excel at clustering events over time, providing a dynamic perspective on how various occurrences are interconnected. This is particularly valuable in fields where temporal analysis is essential, such as historical research, financial markets, and epidemiology.\n  Contextual Insights: With knowledge graphs, items are situated within a broader context, fostering a deeper understanding of their significance and relevance. This contextualization can lead to richer insights and more informed decision-making.\n  Discovering Hidden Associations: Knowledge graphs have the capacity to unveil hidden associations and dependencies among items. This can be instrumental in fields like network security, fraud detection, and recommendation systems.\n  Navigational Efficiency: Knowledge graphs offer efficient navigation through complex datasets. Users can traverse relationships between entities, making it easier to explore and extract valuable information from large, interconnected datasets.\n  Machine Learning and AI: Knowledge graphs play a pivotal role in machine learning and artificial intelligence applications. They provide structured data that can be leveraged for training models, improving predictions, and enhancing the understanding of complex systems.\n\n\nIn summary, knowledge graphs are not limited to a single use case or dimension; they are versatile tools capable of uncovering insights, clustering entities, and navigating through intricate datasets. Their ability to capture the essence of relationships and events, both spatially and temporally, makes them indispensable in a wide range of applications across various industries.\n\n\n\n  \u201cThe journey of a thousand miles begins with one step.\u201d - Lao Tzu\n\n\nThe Idea\n\nIn the prior sections, we went through some of the challenges ourselves and others had faced as well as the revelations we learned from them. These learnings are the precurser or spark that lead to the beginnings of something we believe to be revolutionary.\n\nThese items can be boiled down to the following key motivators:\n\n\n  The disconnect between systems and the needs of businesses in the modern era\n  The challenges of silos and inefficiencies they represent\n  The inconsistent view of how product is thought about and structured\n  The eventual revolution of how AI will change the world as we knew it\n\n\nThe above items brewing together and increasing over time like a perfect storm until the clarity emerged.\n\nWe sought to re-imagine what people building, supporting, operating, and growing products needed. Could we be everything to everyone? No. But for the 80% we will do our best to fix things.\n\nHere\u2019s what we imagined:\n\n\n  A single platform replacing the core functionality of some systems, augmenting others\n  A platform built fully embracing and designed for AI\n  A platform that related everything back to product and customer\n  Integrated with systems to gather events/context (e.g., monitoring alerts, git events, etc.)\n  A modern browser interface\n  Fully integratable with APIs (benefits for both headed and headless modes)\n\n\nThe Tenants\n\nConvergence\n\nWe felt the pain of engineering not having access to the support system and context from customer discussions. We felt the pain of product management not having all the context to define and prioritize clearly. We felt the pain of sales reps not having clarity on their customers\u2019 tickets, engineering roadmaps, and the status of items relevant to them. We felt the pain of support not having access to information like customer details and the status of pipeline opportunities. Lastly, we felt the pain of having to \u2018ask\u2019 for access or context instead of natively having it in the context of the work.\n\n\n  Why not just give everyone access to everything? Cost All of these have per-seat licensing, so it was not fiscally possible.\n\n\n\n  Why not just build a ton of integrations to replicate all data everywhere? Opportunity Cost. Integrations take time and each of these would have to be done point-to-point which doesn\u2019t scale and/or work when things change.\n\n\nWe pondered if this was just isolated to us, however, after many discussions with our peers and established corporations; we found it is something that is rampant across many organizations, big and small alike.\n\nPerturbed by this inefficiency and understanding the impact this had on ourselves and others alike, we had enough and knew there had to be a better way, hence the beginnings of what led to DevRev.\n\nWe dreamed to enable people to move from the legacy siloed model:\n\n\n\nTo a converged model where everyone could operate in unison on the shared context:\n\n\n\nPlatform-first Thinking\n\nFrom the inception of our journey, we held a steadfast commitment to extensibility and the future integration of third-party add-ons. This significantly influenced how we approached the design of our services and the manner in which we established interfaces between various elements.\n\nAt the heart of DevRev lies a comprehensive platform, housing all the essential components required to construct a robust enterprise system. While we do provide a user-friendly interface through our application, which abstracts many of these underlying APIs; our platform\u2019s versatility shines when utilized in a headless fashion or as part of a hybrid solution. Much like how cloud services (IaaS, PaaS) furnish the building blocks for running diverse workloads, our platform empowers users to develop applications atop its foundation.\n\nDuring our initial stages, we pondered the foundational building blocks essential for our platform, characterized by the following diagram:\n\n\n\nBuilt for AI\n\nWith all of the buzz around ChatGPT, LLMs, and AI, everyone is hopping on the bandwagon with \u201csupport.\u201d But how much of this is fluff vs. reality?\n\nWhen we initially thought about the company, AI was a foundational focus for the product. This is why we chose devrev.ai when we registered our domain in 2020 (far before this recent hype).\n\nWe aren\u2019t just now hopping on the bandwagon; we\u2019ve been preparing for it.\n\nDomain Name: devrev.ai\nRegistry Domain ID: 982682_nic_ai\nRegistry WHOIS Server: whois.nic.ai\nCreation Date: 2020-06-07T22:25:10.749Z\n\n\nAt its core, DevRev was built to converge the events, products and people (customers, partners and employees) focused around building, operating, supporting, and growing of products. Through the linkage between these objects, we were able to build a powerful knowledge graph that is used to drive every piece of the system.\n\nWith the ability to triangulate across these vertices, we can do some really amazing things and provide much more understanding and insight. This is applicable to not only correlation, or clustering (similarity), but brings the power of AI to things like analytics, trend analysis, and prioritization, as well as many more.\n\nBy converging things and having a common context, all teams are using; the goal is to enable them to operate as a much more cohesive unit with much higher efficiency and satisfaction.\n\nThe following figure (I know, it\u2019s a lot) shows a real-world example of how we can correlate between product, people (contributors, customers), support, build, opportunities, docs, and a whole plethora of other objects:\n\n\n\nOk, but why should I care? \n\nWhen it comes to making decisions or gathering insight, the more context you have the better the decision you can make. Just think about this in real-world scenarios\u2026\n\nWhen you buy a car do you just consider the features of the car? No, you consider the features, your finances, practicality, terms, what the spouse will say, etc. When you purchase a product, you consider the need, cost, runway, future needs, etc.\n\nNow, say you want to prioritize which work you should focus on and deliver in the next sprint. You\u2019d need information about other items in-flight, staff workload, customer impact of items, dependent opportunities, and a lot of additional data.\n\nWith DevRev, we have the full context and can use that to feed into the models. With the other point systems, you\u2019d need to consolidate somewhere manually or lose valuable context which the models need.\n\nWould you trust something making decisions without full context?\n\nHow we embrace \n\nComing from Nutanix, we saw a lot of customers looking to move from monolithic systems to those of a more scalable, converged nature.\n\nBecause we knew AI would be a crucial part of the system, this impacted how we designed our platform. Affecting things like our service design, delivery architecture, change tracking, object model, analytics and almost everything we\u2019ve done in the system; even the way we designed our interface and UX was built to embrace this.\n\nWhat are some examples of how we architected things differently?\n\n\n  We built a badass knowledge graph\n    \n      This is at the core of the DevRev platform and is used by every piece of the system\n      We have defined links between objects which allows us to keep track of various relationships between objects\n      Given this, we are able to easily create graphs of relationships (edges) between objects (nodes)\n      This allows us to triangulate and correlate between items (can also be used in vector DB scenarios)\n      Using this constructed vector DB we can easily cluster objects across various dimensions (we use this to cluster similar events into an incident, for example)\n      We can also triangulate between a customer, product, ticket, issue, and developer allowing us to feed \u201cevents\u201d between objects that may be relevant\n    \n  \n  We used a flexible document DB instead of traditional relational systems\n    \n      Using this structure, we have a ton of flexibility in the document structure, the ability to annotate and extend\n      Relational systems can be very rigid and can quickly get messy with a ton of constraints, especially if you haven\u2019t built a ton of abstractions into the data model\n      This was key enabler for the next point (customization)\n    \n  \n  We built customization in from the start\n    \n      We knew extensibility would be key for any platform\n      Given the simplicity of customization, we can easily extend our object model with new annotations or context that can be used and fed into models\n      This means, that a customer or vendor, can easily extend our object model with new data on objects which can be used by models, new object types, or with the output of a model\n    \n  \n  We built multi-tenancy into the object\n    \n      Rather than physically segmenting tenant data, we built tenancy into the objects using specific attributes which act as partitions\n      This allows us to create macro partitions (e.g., customer) or extremely granular partitions (e.g., user level)\n      This gives us a ton of flexibility as all data is in one place and the granularity can range from macro to micro\n    \n  \n  We designed our services for the cloud\n    \n      Being built in the \u201cera of cloud\u201d we had a lot of very nice tools available to us (e.g. K8s, Lambda, edge computing, WASM, etc.)\n      We fully embraced these methodologies allowing us to create a set of very flexible [micro, function, edge]-based services\n      This allows us to rapidly scale resourcing (e.g. scale-up/down) and iterate quickly\n      Also, by leveraging edge logic and WASM (client-side), we can do some really amazing things (more to come here)\n    \n  \n  We are built to iterate quickly\n    \n      AI evolves faster than we can imagine; being able to iterate quickly is quintessential to ensure customers get the value of this evolution\n      Given the granularity of our services, teams can operate with much more autonomy and speed\n      We were also built during the CI/CD era, meaning we have fully continuous integration and delivery. As an example, we deploy hundreds of changes daily\n      With monolithic systems, changing things can be complicated as you need to build things at a much more macro level\n      Also, some vendors who didn\u2019t grow up in the \u201cas a service\u201d era will need to change processes to embrace CI/CD (some may have)\n      A good ask here is how frequently changes are deployed\n      When something new comes out, we can react and enable rapidly; others may be slower to enable, leading to a gap between when something is \u201cavailable\u201d and \u201creally available\u201d\n    \n  \n\n\nMost of the available items and concepts we had weren\u2019t even ideas when a majority of the other vendors were created. Having gone through a great deal of platform re-architecture, it is a nightmare (if it works).\n\nThis means that those vendors can\u2019t simply \u201cbolt-on\u201d AI, or if they do I would question the efficiency of this.\n\nThe \u201cTrinity\u201d (product, people, work)\n\nWhen examining the realm of business, one encounters several pivotal elements:\n\n\n  Products (the offerings that companies create and deliver)\n  People (encompassing both customers and employees)\n  Work (the activities revolving around product development, customer support, and operational tasks)\n\n\nThe existence of companies hinges upon the products they offer to their customers. The presence of customers is essential, for without them, a product lacks viability, and consequently, a company\u2019s existence is jeopardized. Conversely, the absence of a product would leave a company bereft of its customer base.\n\nWork serves as the driving force behind engaging and nurturing customers, providing them with support, and continuously evolving the product. Neglecting the work required to support customers can lead to attrition and churn. Furthermore, failing to invest effort in acquiring, engaging, and nurturing customers hinders a product\u2019s and company\u2019s growth. Lastly, the importance of laboring to build and enhance products cannot be overstated, as it prevents a misalignment between the evolving demands of consumers and the product\u2019s capabilities.\n\nTo succeed, businesses must integrate product, people, and work. This synergy ensures products meet customer needs and adapt to future demands, fostering success.\n\nSecurity\n\nIn the realm of security and privacy, they often find themselves relegated to an afterthought rather than integral components of the original product concept. Our past experiences at other organizations underscored the formidable challenges posed by attempting to retrofit elements like role-based access control (RBAC) onto semi-mature platforms. The stark reality is that the longer such considerations are delayed, the more daunting they become, sometimes reaching a point where implementation appears elusive.\n\nArmed with the wisdom from these experiences, we were resolute in our conviction that security must be elevated to the status of a first-class citizen in our development philosophy. Vital facets such as identity, authentication (AuthN), authorization (AuthZ), compliance, and platform security demanded the same level of attention as any other service or component.\n\nOur approach involved a symbiotic design process, orchestrating our authorization platform and object model in unison. This synergistic approach proved immensely potent. Within our object model, we meticulously laid the groundwork, ensuring we possessed the requisite keys to partition and segment data effectively. This profound understanding of the structure empowered us to fashion granular and precise authorization mechanisms. By dedicating upfront effort to this aspect, we\u2019ve endowed our system with authorization capabilities that some mature companies can only envision, including support for role-based access control (RBAC), attribute-based access control (ABAC), policy-based access control (PBAC), field-level security, lease-based access, conditional policies, and more.\n\nFrom a compliance perspective, our rigorous efforts encompassed adherence to regulations such as SOC2 and ISO-27001. These considerations exerted influence over various facets of our architecture, notably shaping our approach to edge security through our web-application firewall (WAF) and our handling of configuration management.\n\nEven within our internal operations, we wholeheartedly embraced the zero-trust model, recognizing that the human factor often serves as the most susceptible threat vector.\n\nDevRev on DevRev\n\nWhile it may sound idealistic and somewhat disconnected from reality, we firmly believe that as builders of a product, we should experience its challenges more intensely than anyone else. We are committed to leaving no stone unturned to thoroughly evaluate every aspect of what we deliver to our external customers. In our journey as a product provider, we have fully immersed ourselves in every stage: building, operating, supporting, and growing our product, using our own creation.\n\nHowever, within this commitment lies a paradox, which also presents an opportunity. We find ourselves in a situation reminiscent of inception, where we are building the very product we use to build our product. We consciously chose not to take shortcuts; instead, we invested the necessary time and effort to develop, implement, and continually refine our tools, ensuring a rigorous and efficient approach to product development.\n\nThrough these experiences, we believe it has allowed us to push out a much better product with the right motivations. However, we are not all customers, and not all customers are alike. So while we will continue to run the building, operating, supporting, and growing of our product on our product, we will continually listen to our customers, collaborate with them and partner with them to build something better together.\n\nThe Future\n\n\n\n\n  \u201cThe greatest danger for most of us is not that our aim is too high and we miss it, but that it is too low and we reach it.\u201d - Michelangelo\n\n\nIn the evolving landscape of technology and human progress, it is our vision and dreams that propel us forward. We must continually strive to elevate our aspirations, to reach for the stars rather than settling for the ordinary. Our journey doesn\u2019t end with the status quo; it thrives on pushing boundaries, imagining the impossible, and pioneering new horizons.\n\nAs we look to the future, let us remember that our potential knows no bounds. We are the architects of our destiny, and it is our audacious dreams and unwavering commitment to progress that will lead us to new frontiers. So, let us raise our ambitions, challenge the norm, and together, push the bar higher than ever before, for it is in aiming for the extraordinary that we truly find greatness.\n\n\n"
    },
    {
        "id": "ART-971",
        "dataset_source": "devrev-dev0",
        "title": "Parts",
        "content": "\n            ContextIf you\u2019re new to the idea of DevRev, would recommend checking out The Story which covers some of the why behind DevRev and what we\u2019re trying to achieve.When you look at the majority of existing businesses today, you commonly see a clear divide into a few core areas of focus throughout the product/service lifecycle. We break down this lifecycle into four main areas (we refer to them as quadrants):  Build  Operate  Support  GrowExisting models used to build, operate, support and grow (market and sell) products, are typically siloed and built using a slew of disconnected and non-integrated systems. We faced this inefficiency at our previous company, which caused us to rethink how we think about things.Product lifecycle management is a crucial process for any business that wants to remain competitive in their industry. It involves understanding the various stages that a product goes through, from the initial design and development to its eventual decline and eventual retirement. In this article, we will explore the different phases of the product lifecycle, with a focus on the build, operate, support, and grow stages.Each of these parts will be covered extensively in this document, enjoy!\n          "
    },
    {
        "id": "ART-973",
        "dataset_source": "devrev-dev0",
        "title": "About",
        "content": "Welcome to the Book of DevRev!This is a community driven project to help consolidate the knowledge of those building, operating, supporting and growing companies, products and services.Let\u2019s face it, starting a company is daunting, building a product is even more difficult, and producing something that people actually like may seem near impossible. Nevertheless, we have been (and are currently) going through these journeys, which brings me to the purpose of this document:This document is built to be a collaborative source of knowledge, enabling everyone to learn from the learnings of everyone so that they may do better and build a better company and product.While Devrev is a company, and we do produce a product, DevRev is more than anything an idea of how to build better products and hence better companies (irrespective of using product or not). Traditionally people safeguard knowledge as they see it as a competitive advantage; however, at DevRev and our previous companies, we\u2019ve embraced sharing knowledge and believe doing so is powerful and forces you to keep innovating.What this will be:  Open and collaborative (while I enjoy writing, you all have a wealth of knowledge to contribute)  Informational from past experiencesWe will cover foundational items like:  Company building  How do I handle funding?  How should I structure my equity?  How to choose the first hires?  What systems do I need to get started?  How to manage vendor selection  Product building          How to iterate on product ideation      How to design an object model      How to design APIs        And many more!What this will NOT be:  Focused on the DevRev product  Marketing fluffAs things evolve, so must we; let\u2019s build something better together!\u2013SP"
    },
    {
        "id": "ART-974",
        "dataset_source": "devrev-dev0",
        "title": "Part I: Genesis",
        "content": "\n\nWe commence our exploration at the very core of genesis, representing the inception and creation of business. We delve into the profound influence of evolution, an unwavering force that not only shapes the natural world but also leaves its mark on the realms of business and technology.\n\nBusinesses, tracing their origins from the early days of tangible trade to the contemporary landscape dominated by software companies, have encountered distinctive challenges and undergone transformative journeys. Throughout our voyage, we underscore the critical importance of adaptability, especially in light of the dramatic shift in consumer expectations.\n\nOur scrutiny extends to the evolution of systems, encompassing the integration of ERP and CRM systems, as well as the rapid technological advancements that have unfolded. Central to our exploration is the fundamental query: How have these systems evolved to align with the evolving needs of modern enterprises?\n\nLastly, we immerse ourselves in the genesis of the AI revolution, a technological marvel that has reshaped our world. Large language models and generative transformers have ushered in a paradigm shift in our interactions with technology and information, challenging conventional search methods and unlocking new realms of creative potential.\n\nEvolution\n\n\n\n\n  \u201cIt is not the strongest of the species that survive, nor the most intelligent, but the one most responsive to change.\u201d - Charles Darwin\n\n\nWithin the natural world, the concept of evolution stands as one of the most profound and influential forces. It is the unyielding current that has propelled life from its humble origins as minuscule molecules to the rich diversity of complex living organisms we behold today. These same forces hold true with the evolution of customer needs, technology, products and businesses alike. In this exploration, we delve into the heart of evolution and how this has impacted business, their supporting systems and finally the impact of AI.\n\nBusiness\n\nThe evolution of businesses has been a dynamic journey, starting with the production and trade of tangible goods and services. As businesses aimed for profitability and scalability, the emphasis on efficiency became paramount. In parallel, the landscape of businesses has transformed, particularly with the proliferation of software companies, leading to distinctive challenges, processes, and needs compared to traditional enterprises. While many businesses have attempted to retrofit their models to existing systems, this approach often presents challenges, as experienced by our prior company.\n\nIf we just look at the proliferation of and evolution of software companies since the introduction of the mainframe to the dot-com boom to the cloud era and now the GenAI era; the sheer number, scale and impact of these companies has dwarfed many others. In some analysis the software and digital portion of the technology total addressable market (TAM) has massively increased from a mere 25% in 1995 to over 75% as of late. This digitization is a fundamental shift, which, in most accounts, will continue to expand.\n\nConsumers\n\nSimilar to how businesses have impacted the world as we know it, the products they\u2019ve produced have brought about a shift in the way consumers use, engage and purchase products. This intertwined dance of products and customers continually drives innovation and is constantly changing the expectations of the consumer.\n\nMoreover, consumer expectations have shifted significantly. The balance of power has tilted from vendors to consumers, who now have an abundance of choices (optionality). To attract and retain customers, businesses must reconsider their approaches, raising questions about the relevance and efficiency of traditional methods in this rapidly changing environment. Consumers today are more informed, empowered, and connected than ever before. The digital age has given rise to an era of online shopping, personalized experiences, and instant access to information, profoundly influencing their behavior. This shift has prompted businesses to focus on enhancing user experiences, offering seamless digital interactions, and leveraging data-driven insights to meet the evolving needs of the modern consumer.\n\nSystems\n\nThe implementation of structured processes and methodologies has significantly enhanced operational efficiency within businesses. The advent of computers further accelerated this efficiency, and the subsequent integration of enterprise resource planning (ERP) systems, encompassing functions such as finance, manufacturing, supply chain, inventory management, and procurement, played a pivotal role in optimizing overall business operations. Shortly after, the adoption of customer relationship management (CRM) software emerged as a means to effectively monitor customer engagement, marketing campaigns, and business opportunities. Additionally, the development of customer support systems became essential for addressing issues that arose after customer acquisition.\n\nConsidering the rapid evolution of technology in recent years, as well as over the past decade, it becomes evident that numerous facets of the industry have undergone profound transformations. These include shifts in programming languages, evolving methodologies, architectural advancements, interfaces (e.g., social, mobile) and changing user expectations.\n\nIn light of these substantial technological advancements, a pertinent question arises: How have these software products evolved, given that many of them have been in existence for more than 15 years?\n\nHuman and Business Interaction\n\nThe landscape of human and business interaction has undergone a profound transformation throughout the years. From the early days of exclusive in-person encounters to the era of carrier pigeons and telegrams, followed by the revolutionary advent of the internet, and culminating in the perpetually connected world of today, the metamorphosis has been relentless and will undoubtedly persist.\n\nThis journey has left no aspect untouched, revolutionizing how individuals collaborate, how to engage and interact with customers.\n\n\n  The dynamics of collaboration among individuals.\n  The strategies employed for engaging customers.\n  The manner in which customers interact with businesses.\n  The approaches taken in providing customer support.\n  And a myriad of other dimensions.\n\n\nTo illustrate this, consider the bygone era before the internet\u2019s ascent, when customer outreach predominantly relied on conventional methods such as physical mail, billboards, or radio advertisements. In stark contrast, the digital realm now reigns supreme with the advent of the internet and social media platforms.\n\nLikewise, the means by which businesses interact with and support their customers have undergone remarkable evolution as well. Initially, interactions primarily took place in person or through telephone conversations. With the advent of the internet, email emerged as a powerful alternative. Fast forward to the present, and chat interfaces and social media have gained prominence, gradually eclipsing traditional methods.\n\nIn the realm of internal collaboration, the impact of COVID-19 has reshaped the way people work. Traditionally, work and collaboration thrived on physical proximity. However, in the wake of the pandemic and the ensuing paradigm shift toward \u201cremote work,\u201d collaboration dynamics have shifted from a co-located model to a decentralized one. This transition leverages an arsenal of collaboration tools, including messaging platforms and video conferencing, to bridge the physical gap. It\u2019s crucial to recognize that rather than debating the merits of these two approaches, the key lesson lies in embracing both local and remote work paradigms to drive efficiency.\n\nThe AI Revolution\n\nThe emergence of Artificial Intelligence (AI) technologies, such as large language models (LLM), generative pre-trained transformers (GPT), and vector databases, has transformed the technological landscape. While AI had its skeptics a mere five years ago, it is now undeniable that AI is a game-changer, just like the internet and cloud were revolutionary.\n\nAI has not only changed our perception of technology but also revolutionized how we conduct tasks. For instance, AI-powered models can access and process vast amounts of information from the internet to answer queries, potentially rendering traditional search methods obsolete.\n\nFurthermore, AI\u2019s influence extends to content creation, with AI-generated content becoming increasingly prevalent. This shift has the potential to alter the value of content, especially as AI could replace traditional search engines that index generated content. Businesses may need to adapt their content strategies to influence AI models and shape the information presented to users.\n\nLastly, AI has also impacted creativity, offering tools that change the way people envision, design, and iterate. These innovations empower individuals to create complex and detailed content independently. In fact, Midjourney was used to generate a great deal of the abstract images used throughout this book.\n\nWe have transitioned from a phase where AI was associated with apocalyptic scenarios to an era where AI enhances our lives, improves efficiency, and reshapes the way we interact with technology and information.\n"
    },
    {
        "id": "ART-978",
        "dataset_source": "devrev-dev0",
        "title": "The Four <s>Horsemen</s> Quadrants",
        "content": "When you look at most existing businesses today, you commonly see a clear divide into a few core areas of focus throughout the product/service lifecycle. We break down this lifecycle into four main focus areas (we refer to them as quadrants):\n\n\n  Build: creating or evolving something\n  Operate: keeping it running\n  Support: enabling customers\n  Grow: growing adoption\n\n\nThis lifecycle is a crucial process for any business that wants to remain competitive in its industry. It covers the various stages a product goes through, from the initial design and development, its evolution, to its eventual decline and deprecation. First, this article will explore the different phases of the product lifecycle at a high level. Then, we will cover each in further detail in dedicated posts.\n\n\n\nNOTE: while these may primarily apply to a product/service, they are equally relevant to the company and its people.\n\n\n\n\n\n\n\nBuild\n\n\n\nThe Build quadrant is the first stage in the lifecycle and focuses on building new things (e.g., companies, skills, new features, etc.) or the evolution of existing ones (e.g., enhancing features).\n\nDuring this phase, companies may (should) conduct market research to understand their customers\u2019 needs and desires, identify potential competitors, and assess the feasibility of the product. Upon completion of this initial research, work begins on the design (product requirements definition (PRD), UI/UX designs, etc.) and then the build of a prototype or first iteration. Once the prototype is tangible, the product is tested and refined to ensure that the product meets the needs of the target market. NOTE: while some things may not call for a prototype, gathering feedback and iterating to enhance the product is imperative. For example, think about the alpha of a product and how much it changes before general availability.\n\nWhile we may focus on the product/services related to actual goods (software, service, goods), the build piece is equally as crucial for building the company and its internal services (e.g., founding, HR, training, finance, etc.) For example, when we started DevRev, we initially focused on building the company (trademarks, branding, funding, ideation/value-prop), then started to focus on building the product. Ensuring focus on both is extremely important.\n\n\n\n\n\n\n\nSystems\n\nLike any of the quadrants, utilizing systems/software to optimize workflows can range from zero to hero (with a messy middle). The key for these systems is something that can allow you to innovate rapidly, track work items, provide accurate status of those work items, and not get in the way of the people building the product.\n\nThe following are some commonly used systems for Build:\n\n\n  UI/UX Design\n    \n      Figma\n      Canva\n    \n  \n  Work Management\n    \n      Atlassian JIRA\n      DevRev\n      Linear\n      Asana\n    \n  \n\n\nMethodologies\n\nWe won\u2019t go too deep here as this can rapidly become a \u201creligious\u201d debate. The system/tool choices may also dictate the methodology used as some align for specific methods (e.g., JIRA for Agile, etc.)\n\nThe following are some commonly used methodologies for software development:\n\n\n  Waterfall\n  Agile\n  Scrum\n  Kanban\n  Extreme Programming (XP)\n  Lean Software Development\n  DevOps (this runs across some quadrants)\n  The list goes on\u2026\n\n\nTo learn more about Build visit HERE\n\nOperate\n\n\n\nThe Operate quadrant is where the product is made available to some target market (internal or external), is monitored, and must be operational. During this stage, companies may focus on creating some awareness of the product and building brand recognition. They need to identify the most effective marketing channels to reach their target audience and create a compelling message that resonates with them.\n\nWhen anything bad happens, the team must work to restore services back to normal. These disruptions are commonly referred to as incidents. An incident is any event that has a potential customer impact. This could include things like service outages, performance problems, or anything else impacting the customer (internal or external).\n\nTypically incidents will have a notion of \u2018impact,\u2019 which is used to determine the effect of the problem. These could range from minor items that are transparent, to issues with workarounds, to total service outage.\n\nSystems\n\nLike any of the quadrants, utilizing systems/software to optimize workflows can range from zero to hero (with a messy middle). The key for these systems is something that will provide the visibility and alerting required when, or before, things go wrong. Persistence is key here as well, as the ability to retroactively go and troubleshoot something is absolutely essential.\n\nThe following are some commonly used systems for Operate:\n\n\n  Monitoring\n    \n      DataDog\n      Better Uptime\n    \n  \n  Alerting\n    \n      DataDog\n      PagerDuty\n    \n  \n  Incident & Service Management\n    \n      Atlassian JIRA\n      DevRev\n      BMC Remedy\n      ServiceNow\n    \n  \n\n\nMethodologies\n\nThe following are some commonly used methodologies for software development:\n\n\n  DevOps\n  ITIL\n  COBIT\n  Lean\n  Six Sigma\n  The list goes on\u2026\n\n\nTo learn more about Operate visit HERE\n\nSupport\n\n\n\nThe Support quadrant is where companies provide ongoing maintenance and support for the product. This involves addressing any technical issues customers may have, troubleshooting any problems, and escalating certain items development (some may kickoff the Build quadrant to resolve a bug/defect or to provide new functionality).\n\nSupport is where you\u2019re working with your customers/consumers and helping them if need be. This is one of the most important aspects of any company, as you can fix a bad product with good support, but not vice-versa. When talking about support, this doesn\u2019t just mean support agents. Support is more of a theme where everyone from Sales to PM to Support needs to work together in a coordinated manner to help the customer.\n\nWho are the customers?\n\n\n  For external services/products, your customers are those that are using your product\n  For internal services/products, your customers are your co-workers who are consuming your services\n\n\nWhy support needs to not just be support\u2019s job:\n\n\n  Just like PMs and engineers work together to build a product, support is something where anyone interacting with the customer needs to collaborate and be willing to help\n  Support is also a great opportunity to cross-sell or up-sell (hence the entrance of customer success)\n  With the entrance of customer success, we\u2019ve started to see a little more of this blending of sales and support\n  If you\u2019re a sales rep, you want to ensure your customer gets all the support and care they need to make them feel special. During the sales cycle, providing exceptional support can be very powerful\n\n\n\n  At our previous company, we invested heavily in support which led to customer loyalty even when the product was missing a lot of things or had bugs. By providing good support, we were able to assist them and handle workarounds which got them the future results they needed. This helped drive adoption and was a big driver of expanded of investment by the customer.\n\n\nCommon communication channels:\n\n\n  Email\n  Phone\n  Chat\n  Social Media\n  SMS/MMS\n\n\nBring support to where the customer is. This is crucial, as you want support to be immediately accessible. Commonly, users would need to visit a support site; however, if you could provide support in the app they\u2019re using, the experience for the customer and the context provided to support can be significantly increased.\n\nAnother essential item here is ensuring a consistent thread across any medium the customer is communicating from. So, for example, if I send an email to get support and then want to follow up via chat, that history needs to be there.\n\nSystems\n\nThe key for these systems is something that can allow you to track and manage customer problems (tickets), escalate them to engineering, provide a great experience for the customer and make the support engineer\u2019s life easier. Therefore, AI assists should be a requirement nowadays for any product worth its coin here.\n\nThe following are some commonly used systems for Support:\n\n\n  Help Desk and Ticketing systems:\n    \n      Zendesk\n      DevRev\n      Freshdesk\n      ServiceNow\n      Salesforce ServiceCloud\n    \n  \n  Live Chat and Messaging tools:\n    \n      Intercom\n      DevRev\n      Drift\n      Olark\n    \n  \n  Knowledge Management Systems:\n    \n      Confluence\n      DevRev\n      Zendesk Guide\n      Salesforce Knowledge\n    \n  \n\n\nMethodologies\n\nThe following are some commonly used methodologies for software development:\n\n\n  ITIL\n  Triage\n  Proactive support\n  Self-service\n  The list goes on\u2026\n\n\nNot really a \u201cmethodology\u201d per-se, however important.\n\nTo learn more about Support visit HERE\n\nGrow\n\n\n\nThe Grow quadrant is where companies focus on expanding their product\u2019s reach, visibility and increasing sales. This involves identifying new markets and target audiences, growing in existing markets, cross-selling/up-selling, and developing partnerships and collaborations with other companies.\n\nTraditionally the marketing and sales teams are often siloed, with marketing focusing on generating leads and sales on closing deals. This can lead to a lack of coordination and alignment, resulting in lost opportunities and inefficiencies.\n\nWe believe these teams need to operate as a much more uniform and cohesive unit to drive better efficiency and more revenue.\n\nSystems\n\nThe key for these systems is something that enables you to track leads, run campaigns and monitor and forcast opportunities throughout the funnel. Nowadays, providing advanced analytics is a must have for these systems.\n\nThe following are some commonly used systems for Grow:\n\n\n  CRM\n    \n      SFDC CRM\n      HubSpot\n      DevRev (early)\n      Clari (add-on)\n    \n  \n  Analytics & Tracking\n    \n      Google Analytics\n      Segment\n      Heap\n      Adobe Web Analytics\n    \n  \n  Meeting and Activity Tracking\n    \n      GoodMeetings (meeting tracking)\n      Gong (meeting tracking)\n      Clari\n    \n  \n  Outreach\n    \n      Outreach :joy\n      SendGrid\n      HubSpot\n    \n  \n  Social\n    \n      Hootsuite\n      Loomly\n      Buffer\n    \n  \n\n\nMethodologies\n\nThe following are some commonly used methodologies for marketing/demand generation:\n\n\n  Inbound marketing\n  Outbound marketing\n  Account-based marketing\n  Content Marketing\n\n\nThe following are some commonly used methodologies for sales:\n\n\n  Social Selling\n  Sandler Selling System (Nutanix actually used this early on)\n  Challenger Sale\n  SPIN Selling\n\n\n\n\nTo learn more about Grow visit HERE\n\nTL;DR\n"
    },
    {
        "id": "ART-980",
        "dataset_source": "devrev-dev0",
        "title": "How to Think About (And Structure) Your Products",
        "content": "How do you think about your product portfolio?  What products do you have?  What capabilities do these products provide?  How should I be thinking about these things?  What products should I invest in, divest in, or stop?  What is the ROI for a product?  A feature?  What features are showing quality problems?\n\nHow we think about our products and their structure is a vital pre-requisite to help answer some of the above questions.  You lose visibility and clarity if you don\u2019t have a structured or granular product hierarchy.\n\nIn this post, we will discuss how you should think about your products and their hierarchy with some real-world examples.\n\nStart With Why\n\nFirst off, why should you care about this?\n\nAt our previous company, we faced a lot of visibility problems due to the inability to tie revenue, cost, and defects back to a granular piece of a product.  Sure, we could do this at a very crude level, but as our engineering departments grew where whole teams were working on a feature, the lack of ability to show the distinct ROI for that feature became a very limiting feature.\n\nIn talking to many of our other founders and established companies alike, they all faced similar challenges. Of course, they could do things at a macro level, but when you have 500 engineers (or any number for that matter) working on a product, how do you decide what features you scale-up, scale-down, or stop?  Time, money and opportunity cost are all things that must be optimized.  At what level are you doing this?\n\nReturn on investment (ROI) has always been a core focus for departments like sales.  For example, you have a rep that has an OTE aka cost (base salary + comissions + T&E), and you can see how much pipeline and revenue that rep brings in.  Simply put, you can characterize the ROI for that rep.  The fact that people only do this subjectively or at a macro level for products dumbfounded us.\n\nOne of the core tenants we sought to achieve with the DevRev platform was that everything MUST relate back to a product or piece of a product (we call these \u2018parts\u2019).  Why you may ask?  Clarity.  By relating everything back to a piece of a product, we can answer the following questions:\n\n\n  What features bring in the most revenue?\n  How much did a feature cost to develop?\n  What capabilities have the highest defect rates?\n  What features are getting more adoption?\n  What was the ROI for a feature?\n  \u2026\n\n\n\n\nAt a macro-level we characterize parts (a piece of a product) into two core areas:\n\n\n  Parts that the customer interacts with AKA \u2018Rev Parts\u2019\n  Parts that provide functionality the \u2018Rev Parts\u2019 express AKA \u2018Dev Parts\u2019\n\n\nThe following figure shows each of these areas as well as the sub-types each one includes:\n\n\n\nWe will break down each of these areas in the following sections.  NOTE: we will cover Dev Parts at a future point.\n\nRev Parts\n\nRev parts relate to how a product is expressed, integrated, or consumed. These parts may be consumed by external customers (revs) or internal employees (devs). Although they may also be provided/enabled by dev parts running internally, the customer just sees the product, service or feature they are interacting with. Rev parts may also be abstractions on other rev parts exposed by 3rd parties (such as Auth0 or s3).\n\nProduct or Service\nAt the highest level of the part hierarchy is a product or service. An organization may have one or more products or services they deliver to their customers. Products can also be delivered through one or more conduits (such as tangible goods or as-a-service).\n\nProducts typically have the following characteristics:\n\n\n  Are a unit of profit and loss (P&L)\n  Are where customers (internal or external) are onboarded\n  Provide the basis for identity\n  May have a notion of billing/chargeback (which can be done at this level or further down the stack)\n\n\nServices may have the following additional characteristics:\n\n\n  Provide an API or interface\n  Define code-based or business services\n  One example of the difference between a product and a service is Microsoft Office (software product) versus Office 365 (cloud service).\n\n\nA key to consider is that all must be considered in the perspective of the dev org. A product for them may be a service for another. For example, consider a managed services provider, they may provide a \u201cproduct\u201d (e.g. Microsoft Exchange) delivered as a managed service.\n\nA service may also be a business service like IT (internal), HR (internal) or Consulting (external.)\n\nExample products delivered as software or tangible goods:\n\n  Hardware products (Lenovo laptops, etc.)\n  Software products (MSFT Office, Acrobat, etc.)\n\n\nExample services:\n\n\n  Cloud services (Amazon Web Services, Azure, GCP)\n  IT services (Helpdesk, Data center, etc.)\n  Facilities services (building services, lunch services)\n\n\nCapability\n\nA capability exists under a product or service and is commonly the main item of interaction for customers.\n\nCapabilities typically have the following characteristics:\n\n\n  Exist under a product or service\n  Provide the ability to do something (verbs) with entities (nouns); for example create object\n  Provide an API namespace\n  Provide units of licensing and pricing\n  Have its own level of authentication and access control or may inherit from the product\n\n\nOne key to highlight here is these things will evolve over time and change.  For example, Word used to be it\u2019s own product for Microsoft back in the day.  The key here is how should you be thinking about these things and how should things roll up.  In other cases, you may see that a capability eventually evolves into it\u2019s own product.  There is no one-size fits all here, and if you don\u2019t get it right to start, there\u2019s no problems with that.  The key is you want your hierarchy to match your business and roll-up in the correct manner.  The more granular you can get the better, but not everything needs to be down to the feature/sub-feature level.\n\nFeature\n\nA feature exists under a capability (or feature for sub-features) and is commonly a unit of configuration or \u201cknobs\u201d in a capability.\n\nFeatures typically have the following characteristics:\n\n\n  Exist under a capability (or feature for sub-features)\n  Provide a unit of configuration (adjective) for entities managed by the capability\n  Enable version history (adjective) on object\n  May provide a subset of the API namespace\n  Are interacted with only inside the context of the capability or not directly interacted with at all\n\n\n\n\nExamples\nIn this section we will analyze some well-known companies\u2019 product hierarchies and break them down.  NOTE: these are just example hierarchies and are not meant to be exhaustive.\n\nThe first company we will look at is Amazon.  If we look at their hierarchy, we can see they still only have a handful of products for their size:\n\n\n  Amazon.com        (product)\n    \n      Product Catalog (capability)\n        \n          Search        (feature)\n        \n      \n      Recommendations\n        \n          Recommended for you\n          Frequently bought together\n          Similar items\n        \n      \n      Review and Ratings\n        \n          Rating system\n          Written reviews\n          Verified purchase\n        \n      \n      Subscribe & save\n        \n          Recurring deliveries\n        \n      \n    \n  \n  Amazon Web Services\n    \n      Compute Services\n        \n          EC2\n          Lambda\n          Elastic Beanstalk\n        \n      \n      Storage Services\n        \n          EBS\n          S3\n        \n      \n      Database Services\n        \n          RDS\n        \n      \n      Networking Services\n        \n          VPC\n          Route 53\n          CloudFront\n        \n      \n      Analytics\n        \n          Redshift\n          Athena\n          Glue\n        \n      \n      Security and Compliance\n        \n          IAM\n          WAF\n          Shield\n        \n      \n    \n  \n  Amazon Echo\n  Amazon Prime\n\n\nIf we look at Microsoft, one interesting thing is how this product hierarchy has evolved.  For example things like Word and Excel used to be their own product lines, however they eventually collapsed under the Office Suite product line.\n\n\n  Windows OS        (product)\n    \n      User Interface  (capability)\n        \n          Start menu    (feature)\n          Taskbar\n          System Tray\n        \n      \n      File Management\n        \n          File Explorer\n          File History\n        \n      \n      Security\n        \n          Windows Defender\n          Windows Hello\n        \n      \n      Accessibility\n        \n          Ease of access\n          Narrator\n        \n      \n      Cortana\n        \n          Voice commands and NLP\n            \n              Hands-free\n              NLP\n            \n          \n          Personal Assistant\n            \n              Reminders and alerts\n              Calendar management\n              Daily Briefing\n            \n          \n          Device Control\n        \n      \n    \n  \n  Office Suite\n    \n      Word Processing (Word)\n        \n          Text formatting and styling\n          Documentation creation and documentation\n          Collaboration\n        \n      \n      Spreadsheets (Excel)\n        \n          Data authoring and analysis\n          Data validation\n          Charting and visualization\n        \n      \n      Presentations (PowerPoint)\n        \n          Slide creation and design\n          Presentation\n          Collaboration and sharing\n        \n      \n      Notes (OneNote)\n        \n          Note organization\n          Media integrations\n          Cross-platform synchronization\n        \n      \n      Email (Outlook)\n        \n          Email management\n          Calendar and scheduling\n          Contacts/Address book\n        \n      \n    \n  \n  Azure\n    \n      Compute Services\n        \n          VMs\n          Azure Functions\n          Azure app Service\n          Azure Kubernetes Service (AKS)\n        \n      \n      Storage Services\n        \n          Blob Storage\n        \n      \n      Database Services\n        \n          Cosmos DB\n          SQL Database\n        \n      \n    \n  \n  Xbox\n    \n      Hardware\n      Entertainment\n        \n          Blu-ray/DVD\n          Media Streaming\n        \n      \n      Social & community\n        \n          Xbox Live Gold\n          Xbox Live Clubs\n        \n      \n      Accessibility\n        \n          Settings configuration\n          Accessibility features\n        \n      \n    \n  \n  Surface\n\n\nLastly, if we look at how we\u2019ve structured our product hierarchy at DevRev we can see how it started small and has evolved.  When we first got started we had the following product structure:\n\nWhen we started DevRev we had the following structure:\n\n  DevRev Platform\n    \n      Core\n      Build App\n    \n  \n  DevRev Corp\n    \n      People\n      Places\n    \n  \n\n\nAs we have built out the product, we have expanded things quite significantly, the following is a snapshot of this current structure:\n\n\n  DevRev Platform (external facing)  (product)\n    \n      Build App                        (capability)\n        \n          Issue Management               (feature)\n          Now, Next, Later (NNL)\n          Part Discovery\n          Trails\n          Sprint Management\n          Vistas\n        \n      \n      Support App\n        \n          Knowledge base\n          CSAT\n          Routing\n          Email integration\n          Support Portal\n        \n      \n      Operate App\n      Grow App\n        \n          Account Management\n          Contact Management\n          Engagement Tracking\n        \n      \n      Core Services\n      Marketplace\n        \n          Partnerships\n          Integrations\n            \n              Discord\n              Slack\n              DevRev CLI\n              KB Extraction\n              Github Airdrop\n              SFDC Airdrop\n              Jira Airdrop\n              ServiceNow Airdrop\n              ZenDesk Airdrop\n            \n          \n        \n      \n      Snap-in Platform\n      Analytics\n      Mobile\n    \n  \n  DevRev Corp (internal facing)\n    \n      Cloud Ops\n        \n          External Infrastructure\n            \n              AWS\n              Confluent\n              GCP\n            \n          \n          Delivery architecture\n            \n              Edge caching\n              Edge logic\n            \n          \n          Accounts and Access\n          Security\n          Observability\n        \n      \n      People Ops\n        \n          Talent acquisition\n          Ops\n          People success\n        \n      \n      Places\n        \n          Austin, TX\n          Palo Alto, CA\n          Ljubljana, Slovenia\n          Bangalore, India\n          Chennai, India\n        \n      \n    \n  \n\n\nHow to Get Started\nAt this point we should understand the various types of parts in a product hierarchy and some examples.  So now, let\u2019s get started defining your own!\n\nIf You\u2019re a Startup or Early-Stage\nIf you\u2019re a startup or defining your products, start small and iterate.  This is important as there is no perfect model and getting the initial model right is unnecessary as it will evolve.  In fact, it is likely better to start with fewer parts and refine them over time as clarity emerges.\n\nAs mentioned in the previous section, when we started DevRev we had the following structure:\n\n  DevRev Platform\n    \n      Core\n      Build App\n    \n  \n  DevRev Corp\n    \n      People\n      Places\n    \n  \n\n\nIf you look at the above, we didn\u2019t have a crazy number of parts, nor did we have the detailed features, as they didn\u2019t exist yet.  Over time we have built new features leading to new capabilities and even added additional products.  The key here is to start small and iterate.\n\nIf You Have An Existing Product Portfolio\nIf you have an existing product portfolio, you may have some idea about your products or a good starting point.  Look at your existing product material, how finance breaks out BUs, how marketing structures the content and how your BOMs are structured.\n\nThe key here will be aligning different orgs (e.g. product, engineering, sales, marketing) on a consistent product breakdown.  For example, you\u2019ll commonly see a divide between how marketing structures the product hierarchy in product material, and how engineering or product structure it.  In most cases, orgs will just care about metrics and structure at their level.  However, in order to enable a holistic view, things must converge.\n\nFor example, if you want to look at engagement for new features, the way marketing and engineering talk about features needs to be consistent.  If you want to see the sales revenue or pipeline for a feature, you need to have consistency between opportunities and product features.  Finally, if you\u2019re going to get an accurate ROI for a feature, you need to be able to relate sales and marketing costs (S&M), engineering costs, and operational costs to the revenue (or potential) it is bringing in.\n\nThese are only possible with a converged view that all stakeholders work off of.\n\nTL;DR\n\n  Start small and iterate\n  To determine capabilities, try to bucket or cluster features together into logical groups.  Also, think about what are the expressable traits of your product.\n  Understand that the role of a part may change over time (e.g., Microsoft Word used to be a product but is now a capability under the Office Suite)\n  Converge the organization\u2019s definition of the hierarchy (this is key)\n  Relating data back to the product\u2019s components will give you a ton of great visibility (e.g., real ROI for a feature, etc.)\n\n"
    },
    {
        "id": "ART-982",
        "dataset_source": "devrev-dev0",
        "title": "DevRev Nudges - Driving Customer Engagement",
        "content": "One of the most important things any vendor can do is to drive engagement with their prospects, customers, and supporters. This can help keep them engaged, help with nurture as well as a plethora of other benefits. Commonly this is done via social media or manual interactions via various channels.\n\nHowever, why not do this where they are, in your app or site? In comes DevRev Nudges, which provides the ability to \u201cpush\u201d nudges to your users.\n\nWant to get straight to the video? Click HERE.\n\n\n  But first, what is a nudge?\nIt\u2019s a push offer or notification displayed to the user. In fact, there\u2019s one in the corner you can see on this page!\n\n\nThe DevRev Nudges feature provides a simple, convenient platform that allows you to do the following:\n\n\n  Configure nudges and display them anywhere where PLuG is installed (e.g. website, app, etc.)\n  Push engaging nudges directly to users\n  Enable interaction with the nudges to invoke certain actions\n  Have granular control of when and where nudges appear including pages, wildcards and frequency of display\n  View detailed engagement analytics\n\n\nNot only can this be useful for notifying users of important items like outages, new features, or news, but it may also be used to help nurture a user in growth cases.\n\nFor example, if we want to target users who hit a landing page (e.g. https://devrev.ai/thebook) with a distinct offer, we can configure a targeted DevRev nudge to show our offer, the image, and action (e.g. launch URL).\n\nI\u2019ve configured this and you can check it out HERE!\n\nTypes of Nudges\n\nDevRev Nudges currently supports two core types of nudges:\n\n\n  Banner\n    \n      A banner at the top of the webpage\n      Can only be text\n      Can contain an action on click\n    \n  \n  Spotlight\n    \n      A card located by the PLuG widget\n      Can contain an image\n      Can contain an action on click\n    \n  \n\n\nSee It In Action\n\nThe following video shows the DevRev Nudges feature in action:\n\n\n  \n\n\nHow to leverage\n\nConfiguration\n\nConfiguration of Nudges is simple and can be done in the DevRev app. To configure a nudge, perform the following steps:\n\n\n  Navigate to settings > Support > PLuG Nudges\n  \n    Click on spotlight or banner nudge\n\n  \n  \n    Input nudge content (will vary by type)\n\n  \n  \n    Click on Rules and input conditions.\n\n\n    \n      Multiple page rules and operators can be used to select a single page, a URL containing text, or a wildcard\n      The example rule above will only show the nudge when the exact URL is matched.\n      For wildcards, you can use the Contains operator\n      The Action can either launch a URL, launch the PLuG widget, or do nothing (e.g. notification only)\n    \n  \n  Validate preview\n  When satisfied, click on Publish\n  Enjoy your new nudge!\n\n\nAnalytics\n\nDevRev Nudges have full tracking including impressions, clicks, and more metrics to come.\n\nTo view nudge analytics, click on a nudge and navigate to the Analytics tab:\n\n\nTL;DR\n\n\n  DevRev Nudges provides a native way to notify, nudge and engage with users\n  Available anywhere where PLuG is deployed\n  Has potential to also be driven on additional event types\n\n"
    },
    {
        "id": "ART-984",
        "dataset_source": "devrev-dev0",
        "title": "Why you Should be Looking at Support Differently",
        "content": "In today\u2019s competitive world, providing exceptional customer support is critical to ensure customer satisfaction and loyalty, both core items helping minimize customer churn. This is becoming a significant item of focus as customer churn is a very important, and costly, item.\n\nFor example, the cost of acquiring new customers is commonly 5-25 times more compared to keeping existing customers. That paired with the economic climate, potentially declining sales and constant push to drive down costs, puts the business in an awkward situation.\n\n\n\nHowever\u2026\n\nOne of the problems with historical customer support is there is little to no coordination between support and other customer-facing teams (e.g., sales, product managers, customer success, etc.) leading to a very poor customer experience which can eventually lead to churn.\n\nSupport is not a team but something that must be looked at holistically. Yes, there may be a dedicated support team, but all need to work in synchrony to ensure the customer\u2019s experience is amazing.\n\nIn this article we will look at what the current state of support looks like and how this affects the business. We will then look at what one ideal option of support may look like and how it may provide benefit.\n\nStatus Quo\n\nIf we look at the history of support, it wasn\u2019t originally seen as a strategic role, it was done out of necessity. Customers will inevitably have problems, and it is too costly for product/engineers to support them (this still happens early stage). Hence support was introduced to help triage customer problems/requests, assist and then only when necessary \u2018escalate\u2019 to product/engineering.\n\nThe current model of support is almost wholly focused on a dedicated support team, or teams (e.g., L1, L2, L3), with minimal structured coordination with other customer-facing teams (e.g., engineering, sales, etc.). In certain cases, there may be a customer success team that acts as a coordinator and mole helping with up-sell/cross-sell. In some cases, support may report into customer success; in others, they may report to completely different entities. Note: this divergence is something that should be avoided at all costs.\n\nWhen looking at a \u201cdedicated\u201d support team you either have a Support Team or a Customer Success Team, or potentially both depending on your scale.\n\nIn the scenario where there are dedicated Support and Customer Success teams, there are a few things to highlight:\n\nSupport\n\n\n  Reporting\n    \n      Commonly reports to the COO or equivalent depending on the scale of the business\n      In certain cases reports into Customer Success (good), but this is not always the case\n    \n  \n  Focus\n    \n      Focuses on helping customers with technical problems (e.g. tickets)\n    \n  \n\n\nCustomer Success\n\n\n  Reporting\n    \n      Commonly reports to the Chief Customer Officer, CRO, Head of Sales or equivalent\n    \n  \n  Focus\n    \n      Act as a liaison and helps coordinate across teams\n      Help customers with strategy\n      Acts as an AE for smaller customers\n      Help generate opportunities for cross-sell/up-sell\n    \n  \n\n\nNow I\u2019m not going to argue about whether customer success is just a rebranding (or expansion) of support (or should be) or the need for both. There are plenty of opinions there, and my goal isn\u2019t to slander but enable you to decide what is best in your situation. I see value in the role that Customer Success provides which is a single entity to coordinate teams, and a \u201cmole\u201d to help with cross-sell/up-sell. The key question is is this a dedicated role or a role everyone interacting with the customer should express. Hint: I believe this should be both a team and role everyone expresses.\n\nAn Example\n\nHave you ever had an experience where you\u2019re told contradicting statements from a vendor? Have you ever had a support experience where you\u2019re \u201cescalated\u201d and have to explain yourself all over again? How was that experience? Likely pretty poor. This is no different than what the lack of internal coordination between support and other customer-facing teams causes.\n\n\n\nFor example, say a customer was told by their sales rep that a certain feature will be coming within the next few weeks. After some time the customer files a support ticket to get an update on the status of this feature as well as asks their rep what is going on. In most cases the rep and support engineer don\u2019t communicate or have the context of what the other is doing (let alone access to the other\u2019s system). The support engineer may respond saying that feature is a long ways away, while the rep may say it\u2019s \u201ccoming soon\u201d.\n\nThis lack of coordination leads to contradiction and a clear indicator to the customer that the vendor obviously has some problems internally. Do you think the customer will be happy? Do you think the customer will trust what the sales rep says in the future? Simply put, no.\n\nNow, let\u2019s handle this a little differently and look at the result\u2026\n\nIn this scenario, let\u2019s say the customer files the same ticket and asks their sales rep for an update. The support engineer working on the ticket and the sales rep communicate with each other and determine the best way to respond to the customer and send a consistent message to the customer. Yes, this sounds simple, but you\u2019d be surprised how frequently this doesn\u2019t occur. How will the customer\u2019s response differ? They still may not be happy that it isn\u2019t done, however, it won\u2019t erode trust and spawn additional concerns about the vendor.\n\nHere\u2019s the key: each one of these individuals will interact with the customer at some point in the lifecycle, which is why things need to be looked at as a cross-functional team vs. just a \u201csupport\u201d team.\n\nSo what are some of the problems with this model?\n\nThe problems with status quo\n\nIn this model your faced with a few core challenges:\n\nMisalignment\nCustomer Support and Customer Success may care about different things (they shouldn\u2019t) and may have a different reporting structure (e.g., support to eng or CS to sales). This means there is a potential for misalignment of goals/priorities which may lead to teams focusing on different things. This holds true for the extended teams that interact as well. For example, you could be reporting on metrics the teams care about and have good metrics, but the overall experience can be lacking. This lack of unifying metrics and goals causes focus that may not align with what it should.\n\nSilos\nDepartmental silos and lack of cross-functional goals/teams leads to both knowledge and focus gaps which can lead to inefficiency. In some cases people may use these gaps to control knowledge. However, this does not benefit the business or the customer experience.\n\nInefficiency\nGiven the lack of coordination and gaps in systems/access a lot of things are \u201cthrown over the fence\u201d. This means handoffs are commonly done at a system level which intoduces a ton of inefficiency which can be even worsened if there is no access across system boundaries. For example, take a look at the Scenario outlined HERE\n\nPoor/inconsistent customer experience\nGiven that teams are likely not coordinated and they don\u2019t have access across systems (e.g. support doesn\u2019t have access to CRM data or vice-versa), the experience may be very inconsistent. For example, say a customer has a problem and creates a support ticket, in most cases there is nothing that notifies the sales rep on the account for the customer (some may have this).\n\nNow say there\u2019s a large opportunity (in the CRM system) that the sales rep is working on, as a support engineer how would that impact how you handle the interaction? Sure, ideally you should handle everything with the upmost professionalism and brevity, but, let\u2019s be honest, that doesn\u2019t happen and people get busy. Having this information, you can ensure it has the adequate prioritization and care to ensure that this support experience can be seen as a \u201cselling point.\u201d\n\n\n\nHow to Enable\n\nGetting a single team to work effectively is complex, and cross-functionally is even more difficult. However, the benefits of establishing this approach can be astounding (both internally and externally).\n\nHere are some essential items to enable this:\n\nEnsure You have the correct cross-functional structure in place\n\nSystems and integrations can solve the data/context piece, but having the proper processes, reporting structure and metrics is equally essential.\n\nMinimize finger pointing by establishing a cross-functional team with a reporting structure that makes sense. Who should \u201cown\u201d the team? Sales, Support, CCO, CPO, COO? This will vary from company to company, but ensuring that there is one place that the cross-functional team reports to is key to ensuring priorities are aligned and things are looked at holistically. This doesn\u2019t mean management reporting structure, but function reporting structure. Without a structure, cross-functional team charter (aka mission statement) and established process, this will fail.\n\nIf you have both a Customer Success and Support team, ensure that the Support team reports into the CS team. This will ensure Support\u2019s metrics are aligned with Customer Successes.\n\nCommonly each team has its own metrics and KPIs that they track; however, as a cross-functional unit setting the right metrics and KPIs is key. For example, metrics like time to first response, time to resolution, CSAT, etc. should be core metrics for all members of the cross-functional unit (not just the support team). Additionally, things like up-sell/cross-sell rates, win rates to CSAT scores are all crucial for the unit as a whole. For example, why can\u2019t a PM or AE be the first to respond to a customer inquiry? It\u2019s simple, they can and should.\n\nEnsure access across system boundaries\n\nDepending on the function you will commonly see a bunch of different systems:\n\n\n  Support\n    \n      Ticketing system (e.g. ZenDesk, SFDC ServiceCloud, DevRev)\n      Chat system (e.g. Intercom, DevRev)\n    \n  \n  technical\n    \n      Issue management system (e.g. Atlassian Jira, Linear, DevRev)\n    \n  \n  Sales & Marketing\n    \n      CRM system (e.g., SFDC CRM, DevRev)\n    \n  \n\n\nAll involved parties inherently have access if you have a single system across these functions. While this is not the common case, there are some tools like provide this experience:\n\n\n  DevRev (support + chat + issues + CRM)\n  SFDC (support + CRM + chat (sort of via Slack))\n\n\nIf you have disjointed or disconnected systems, it\u2019s imperative to either provide access across these functions (common case but costly), or create automations to sync data between different systems (costly from a time and maintenance perspective). One of the problems, is that most systems involved here are licensed on a per-seat basis, which means provisioning accounts for a user in each system can be very expensive.\n\nIf systems are disjointed, integrate\n\nAs mentioned above, very few platforms provide everything you need in one place (nor would likely displace all systems in a single moment anyways). So some form of integration is usually required.\n\nIn this disjoint system approach, ensuring the integrations between systems are key. If you\u2019re using DevRev for support/chat/issue management and SFDC for CRM, you\u2019ll want to have the ability to sync data across these system boundaries. Here opportunity data from SFDC could be used to augment the customer account in DevRev and augment tickets/issues with opportunity data (e.g., amount). This allows support to have visibility on customer size and opportunities and product management to use revenue data to drive prioritization.\n\nSimilarly, you may have an integration that pushed some customer ticket data into the CRM system for sales visibility (or at least notifications).\n\nThe key is that some level of integration is necessary between systems to provide visibility without requiring people to\nlook in different places unless you have a platform that handles these in a converged manner.\n\nWhy change\n\nThis will help facilitate the following:\n\n\n  Interactions are coordinated and consistent\n  Hand-offs are handled correctly\n  Customers won\u2019t get tossed around or told different things by different people\n  Customer experience is much better\n  Extended \u201csupport team\u201d experience is much better given all have context and are \u201cin the loop\u201d\n\n\nSo what, how does this help my business? Well, can you afford to lose customers (churn)? What if sales start to decline?\n\nIt\u2019s not a new concept that churn is costly and repeat business is a massive revenue generator. Now, there are a few ways to retain customers:\n\n\n  Have an invaluable product \u2013> something so good that they can look past poor support\n  Ensure customers are taken care of \u2013> provide an amazing support experience\n  Lock them in (this should not be considered a strategy)\n\n\nTL;DR\n\n\n  Support is not a team, it needs to be looked at holistically\n  Embrace cross-functional teams and coordinate\n  Ensure context/system access across teams\n  Turn support into a revenue generator by approaching it differently\n\n"
    },
    {
        "id": "ART-985",
        "dataset_source": "devrev-dev0",
        "title": "Why Silos Must be Busted",
        "content": "I will start this with an analogy, but don\u2019t worry, unlike Drax, I know the difference between an analogy and a metaphor\u2026 (yes, that is a Guardians of the Galaxy vol. 3 reference)\n\nIf you look at all of the systems in an automobile, you have:\n\n\n  Safety systems (airbags, ABS, pre-collision stop, etc.)\n  Power generation (engine/battery)\n  Power distribution (drive shaft, differential)\n  Suspension\n  Etc.\n\n\nJust in the engine alone, you have:\n\n\n  Pistons\n  Intake valves\n  Exhaust valves\n  Spark plugs\n  Mix controllers (O2 + fuel)\n  Etc.\n\n\nNow, what happens if any of those items don\u2019t work in perfect synchrony? Will the car perform maximally? No. The engine will start to misfire and potentially fail to run. At an even more drastic level, if a collision detection system doesn\u2019t tell the engine to stop and the fuel system to stop feeding, there can be very drastic consequences.\n\nSimilar to the automobile that can face catastrophic failure due to lack of coordination, the same applies for many real-world scenarios, including our (and your) business. Breaking down these barriers, driving coordination and collaboration are paramount. Failure to do so can lead to gross inefficiency and drastic consequences, impacting the company\u2019s financials, profitability, or viability.\n\nA Real-World Example\n\nWhen I joined Nutanix in 2011, there was no shipping product, no customers, and the product didn\u2019t work; we had a ton of work ahead of us to build the product. At this point, everyone was in a single room on Technology Dr. in San Jose, CA. It was the \u201cearly days\u201d all startups go through.\n\nAs the product progressed and became more viable, we added an Ops/IT teams to help make sure things didn\u2019t go down. Initially, our engineering team supported our customers, but that couldn\u2019t scale, so we added a support team (and added a ticketing tool). Secondly, we listened to our initial customers and, with them, evolved the product into something we could start promoting and selling. Next, we hired marketing and sales teams to market and sell the product (again, adding more tools: SFDC and Marketo).\n\nGiven everyone was initially together, it was effortless to collaborate and communicate as you could yell (or walk) over to the person if you had a question. However, as the company grew, we started to see knowledge gaps and organizational silos begin to form. Each team had its own system(s); sales had its room, marketing was on the other side of the building, and they became further segmented over time. It was almost as if we were purposefully trying to build barriers.\n\nAs the company grew, this problem became exacerbated, and these barriers became more fortified. So while throwing more resources at the problem can \u201chelp,\u201d this is not fixing the real problem and doesn\u2019t help productivity per individual.\n\nUnfortunately, many leaders like to hold knowledge close to the chest and as leverage. Their silos are leverage, or so they believe. However, while they may believe that will help their little fiefdom, this is detrimental to the business or the company\u2019s overall good. After discussing with numerous individuals and businesses, it was clear this was not just specific to our business; it is pervasive among companies of all sizes.\n\n\n\nHow Does This Look Like In Your Business?\n\n\n\nWhen you think about a company, there are a lot of moving pieces as well:\n\n\n  Engineering\n  Support\n  Sales\n  Marketing\n  IT\n  HR\n  Finance and Accounting\n  Etc.\n\n\nAll of these units need to work in unison to ensure maximal efficiency. If they are not in coordination, you see the impacts through inefficiency and, worse case, the company\u2019s failure (yes, very drastic, however possible).\n\nWhether by design or misfortune, companies are often biased toward creating silos. For example, as they grow they add new departments, new departments and new leaders commonly bring their own systems of record, and those departments can grow to need their \u201cown space\u201d.\n\nThe following figure shows a sample of the various teams/systems you commonly see:\n\n\n\nIn this model each \u201cteam\u201d has their own systems and accounts are commonly not shared across teams either due to license constraints, the preference to work in their \u201cconsole\u201d, lack of knowledge, or plain not knowing any better. These systems commonly have little to no integration, leading to duplication, inconsistency and lack of coordination across teams given they all see things differently.\n\nScenario\n\nFor instance, say a customer has a problem and contacts support to file a ticket via a support portal relating to a product issue:\n\n\n  Customer files ticket via support portal (ZenDesk SFDC ServiceCloud, etc.)\n  SRE 1 works with customer to get logs, context, etc. and appends to ticket\n  SRE 1 escalates to engineering on-call by creating an on-call in engineering work system (e.g JIRA)\n  Engineer 1 may not have access to support system as they are commonly licensed on a per-seat basis\n  Engineer 1 asks support to send over detail/context about ticket and customer and attach to on-call\n  Support sends or attaches detail to the on-call\n  Now, say another customer has the same problem and creates another ticket worked on by another SRE 2\n  SRE 2 may escalate ticket 2 to engineering as a completely separate on-call\n  Engineer 2 has to review ticket 2 and may ask for more detail, again\n  Engineers 1 and 2 may see them as two different problems as each may have different detail/context\n  At this point the sales rep for the customer may not even know their customer has filed a ticket\n  The support agent may also not know if there are some large pending deals with the customer requiring good service to close\n  Customer asks sales rep for an update on the ticket\n  Sales rep has to scramble and figure out what ticket they are actually referring to\n  \u2026\n\n\nIn the above example, it is clear that lack of access across systems or lack of a \u201csingle source of truth\u201d for all was detrimental for everyone. Not only does this lead to a lot of duplication and miscoordination, but it can also have very tangible impacts and impact customer experience and potential sales. As the company size grows these inefficiencies and impacts can grow substantially.\n\n\n\n\n  A corporate game of telephone\nAs you can see the following problems are visible:\n\n  \n    Lack of coordination between teams -> inefficienct back and forth iteration\n    Duplication of context/work given separate systems/SOR\n    All is reactive\n    Context switching during gaps\n    A much longer time to resolution\n    A lot of work \u201csuck\u201d\n  \n\n\nHow Does This Impact Me?\n\nIn general, the following impacts or consequences commonly occur:\n\n\n  Lack of coordination and inefficiency\n    \n      Commonly each organization has their own plans and roadmaps and much work is done in isolation\n      The lack of coordination leads to potentially misaligned efforts or in gross duplication of work\n      Given each is operating in a silo, this also leads to inconsistency across depertments\n    \n  \n  Knowledge barriers/gaps\n    \n      While some may treat knowledge/information as leverage (this is bad), this leads to politics, and neither is beneficial for the business\n      Commonly you\u2019ll see users only have access to their systems, but lack access to other systems\n      For example, an Engineer may have access to their work system (e.g., JIRA, DevRev, etc.) but no access to the support system (ZenDesk, SFDC Service Cloud, DevRev)\n      When a support person \u201cescalates\u201d the ticket, they commonly create a completely separate item\n      Your access to the data in the support system is vulnerable to whatever information the support person put in your system\n      Similarily, a sales rep may have access to their CRM (SFDC, HubSport), but no access to the support or work systems.\n      This leads to inconsistent context and lack of the \u201cwhole picture\u201d\n    \n  \n  Poor employee experience\n    \n      Silos can garner a competitive rather than collaborative nature\n      Knowing that something an employee has worked on was duplicated by another can be demoralizing\n      Given the lack of full context and the ever constant game of telephone between teams, this can lead to a lot of \u201cwork suck\u201d\n    \n  \n  Poor customer experience\n    \n      There\u2019s nothing worse (well maybe) than having a problem and talking to a support person, then your sales rep who has no idea about what the support person is doing\n      This commonly leads to inconsistent messaging which can give a poor picture to the customer about internal coordination and ability to execute\n    \n  \n\n\nBut that\u2019s \u201cnot my problem\u201d\u2026 Well, are you sure?\n\nLet\u2019s take the perspective from a few different personas:\n\n\n  Support Engineer\n    \n      How would you handle it differently if you knew there were some opportunities or deals with the customer?\n      What if you didn\u2019t have to copy and paste between engineering issues and your tickets?\n      What if you could easily see the status of an escalation and/or have that status propagated to the ticket?\n    \n  \n  Sales Rep\n    \n      What if you had visibility and could easily see the problems your customers were having and get notified when they had them?\n      What if you could use deal size to put emphasis on certain fixes?\n      What if you could easily see the status of things your customers care about or be notified about new things engineering is pushing out?\n    \n  \n  Customer Success\n    \n      What if you had a single place for true visibility for your customer\u2019s tickets, opportunities, and engineering issues relevant to them?\n      If you could provide a much more coordinated experience, how would that impact your customer\u2019s experience?\n      If there was a system that enabled sharing of context, how much manual coordination effort could that save you?\n    \n  \n  Finance\n    \n      How much does context switching or inefficiency cost you?\n      If you could remove 30 minutes of work waste daily, how much money would that save you opportunity cost-wise?\n      What is the cost of someone being 20% less productive? What about at the company scale?\n    \n  \n  Human Resources (HR)\n    \n      How does inefficiency or lack of knowledge impact your employee\u2019s morale?\n      Does manual \u201cwork suck\u201d have an impact on their well-being?\n      What if you could enable them to be more productive? Would that boost morale?\n    \n  \n\n\nWhether we like it or not, silos impact everyone in the business, either directly or indirectly. These genuinely affect productivity, experience, efficiency, and the bottom line. So, how much is inefficiency costing your business?\n\nWe felt all these problems at our previous companies and had the desire to answer the questions above, which led us to try and build something that could bring things together via DevRev.\n\nHow to Combat\n\nTo learn more about how to combat silos visit HERE\n\nTL;DR\n\n\n  Many types of silos exist in a company (departmental, knowledge, system, role, etc\u2026)\n  Silos hurt efficiency and productivity\n  While some fiefdom leaders may believe their \u201csilo\u201d gives them power, this is detrimental to the business\n  By ensuring a common context across teams, and consolidating access and/or truth, true efficiency can be gained\n\n"
    },
    {
        "id": "ART-986",
        "dataset_source": "devrev-dev0",
        "title": "How to Combat Silos",
        "content": "As discussed in Why Silos Must be Busted, we covered how silos can hurt a business and the impacts they may have.  In this post, we will discuss some of the common ways to combat silos and break down these barriers.\n\nWhile combating silos may be complex, the benefits are very real.  Here are some tips to help you start breaking down these barriers and driving efficiency:\n\n\n  Encourage cross-departmental collaboration\n    \n      Encourage teams to collaborate and work together on items\n      For initiatives, ensure stakeholders from all relevant orgs are there\n    \n  \n  Implement cross-functional teams\n    \n      In some cases, this may occur organically, if so perfect\n      However, if you have systemic compartmentalization, form cross-functional teams to help combat these silos\n    \n  \n  Ensure openness and access to systems (where legally possible)\n    \n      This can be achieved by:\n        \n          Using a system of record that centralizes or mashes-up data (this is ideal if feasible)\n          Leveraging automation for ETL/ELT between systems (this has opportunity cost)\n          Providing access across systems (this can be expensive given licensing costs)\n        \n      \n      Follow regulations and rules regarding which data can be visible\n        \n          For example, not everyone can see forecast or sales data with SOX compliance. With HIPPA and PII data, there must be limits on what everyone can see.\n        \n      \n    \n  \n  Centralize efforts on the outcome, not the organization\n    \n      Encourage and enforce cross-functional teams\n      Focus on the outcomes; if you\u2019re trying to build a new service for public consumption, garner stakeholders from relevant teams and work together to drive the outcome\n      We would be remiss to assume we can fully manage things on our own\n      For example, say you launch a new feature but have no marketing, docs, or sales enablement? What would the impact be?\n      Now, imagine you had collaborated with the docs team to write up docs, the marketing team to get advertising and the sales team to start selling it. What would the impact be now?\n    \n  \n  Encourage leadership support\n    \n      Leadership can play a big role in breaking down silos by promoting collaboration and open communication and encouraging cross-functional teamwork\n      This doesn\u2019t work without getting leaders on board\n    \n  \n  Focus on the customer\n    \n      Encourage employees to think about their businesses customers and how to suit them best\n      At the end of the day, the more empathy we can have for the customer, the more inclined we will be to work across boundaries to provide an exceptional experience\n    \n  \n\n\nTL;DR\n\n\n  Combat silos and make (or encourage) cross-functional teams.\n  Ensure efficient interfaces between components (teams, systems, orgs, etc.) - similar to well-defined APIs for microservices\n  Automate data movement between systems of record or leverage a system that can pull into a single system of record\n\n"
    },
    {
        "id": "ART-990",
        "dataset_source": "devrev-dev0",
        "title": "To AI, or Not to AI for Support, It's Not a Question",
        "content": "\n\n\n  \u201cThe greatest danger in times of turbulence is not the turbulence; it is to act with yesterday\u2019s logic.\u201d - Peter Drucker\n\n\n\n\n\u2026\n\nAt this point, you\u2019ve likely been inundated with with the news of AI, LLM, GPT, or ChatGPT. Hint: GPT stands for \"Generative Pre-trained Transformer\". And it likely begs a few questions\u2026 Is this the start of SkyNet? Will I become irrelevant? And a multitude of others. This anxiety is OK and is a good thing; it alerts us that a fundamental shift is happening, just like the internet had done previously. And, no, this isn\u2019t the beginning of SkyNet.\n\n\n\nLet\u2019s face it; support is moving to a more asynchronous communication model (a-la chat). With the ability for ChatGPT to \u201cstream\u201d messages similar to how a user would, backed by the knowledge of the internet, the result can be a very powerful one-two punch. Plus, it can eliminate a lot of the \u201cgrunt work\u201d (aka work \u201csuck\u201d) that support engineers commonly deal with, allowing them to focus on the real problems at hand.\n\nAlso, with this evolution to a semi-sentient system, the experience for end-users is far superior, sometimes to the point where you may not even know you\u2019re conversing with a computer.\n\nBenefits\n\nHere are some of the potential benefits:\n\nEfficient Response Times\n\n\n  AI-powered chatbots can handle multiple customer queries simultaneously, significantly reducing response times and providing instant support, resulting in higher customer satisfaction levels.\n  By offloading the initial responses to an intelligent system, you can buffer the amount of time a traditional agent has to respond\n  This may also help ensure you meet you SLA requirements\n\n\nCost-Effectiveness\n\n\n  AI-driven customer support tools can minimize the need for large customer service teams, reducing operational costs without compromising on the quality of support (this needs to be validated)\n  You can make users more productive by offloading some context gathering and/or successfully deflecting certain queries\n  Any gain in productivity may minimize the need to scale team sizes up, and may actually allow you to handle more with a smaller team\n\n\n24/7 Availability\n\n\n  AI-enabled customer support systems can operate round-the-clock (they don\u2019t need sleep), ensuring customers receive assistance whenever they need it, irrespective of geographical and time zone differences.\n  For a follow-the-sun model this may be less important, however, if you don\u2019t have this coverage in place, an AI-assist can be extremely valuable to provide coverage between gaps\n\n\nPersonalization\n\n\n  By leveraging natural language processing and machine learning, ChatGPT and similar tools can understand customers\u2019 needs and preferences, providing personalized and contextually relevant support.\n  If the vendor provides the tool with additional context (e.g., about the user, their use-cases, etc.), the system can provide even more personalized information\n\n\nContinuous Improvement (\u2018fo free)\n\n\n  AI-driven support systems can learn from customer interactions, adapting and improving over time, resulting in better support experiences and higher customer retention.\n  Traditionally things would be done in a rule-like manner, which was inflexible and required intervention on every change.\n  Just like any service, as compared to build your own, the service can evolve and improve, allowing you, and your customers, to reap the benefits\n\n\nMultilingual Support\n\n\n  AI solutions can understand and respond in multiple languages, breaking down language barriers and allowing businesses to cater to a diverse customer base.\n  This may negate the need for traditional translation services, as the service can handle this natively\n\n\n\n\nPotential Risks\n\n\n\nWhile the use of artificial intelligence and tools like ChatGPT offers numerous benefits in the realm of customer support, it is crucial to consider potential risks that may arise.\n\nSome of these risks include:\n\nMisunderstandings\n\n\n  AI-driven chatbots might misunderstand complex customer queries or interpret context inaccurately, leading to incorrect or irrelevant responses. This can result in customer frustration and diminished satisfaction.\n  While this is likely a edge case, you can easily account for this with logic in the system than can allow the user or system to automatically switch the interaction to a support engineer.\n\n\nLack of empathy\n\n\n  Chatbots may struggle to replicate the empathy and human touch that customer service representatives provide. In sensitive or emotionally charged situations, an AI-driven response may appear impersonal or unsympathetic, negatively impacting customer relations.\n  This is both a good and bad thing as lack of emotion allows them to stay calm when customers may be spicy, however, empathy is one of the most important things to show customers as we \u201cfeel their pain\u201d.\n\n\nOver-reliance on automation\n\n\n  Businesses might become overly reliant on AI-driven solutions, compromising the quality of customer support. While AI is highly efficient, it cannot fully replace the nuanced understanding and problem-solving skills of human agents, especially for complex or unique situations.\n  A great example of this is knowledge with the introduction of the internet. Because we are not forced to retain knowledge, we can just store it ephemerally and query when we need information.\n\n\nData privacy concerns\n\n\n  AI systems rely on vast amounts of data to operate effectively. The collection, storage, and processing of customer data can raise privacy concerns and expose businesses to potential data breaches or misuse of information.\n  This will be a very significant area of focus and will likely impact where AI-assists can be used.\n\n\nBias and discrimination\n\n\n  AI systems may inadvertently perpetuate biases present in their training data. This can lead to biased or discriminatory responses, negatively affecting customer experiences and causing reputational harm to the business.\n\n\n\n\nEthical concerns\n\n\n  The use of AI in customer support raises ethical questions about job displacement, accountability, and transparency. Businesses must carefully weigh the benefits against potential social and ethical consequences.\n  However, at the end of the day, the businesses goal is to operate as optimially as possible, and provide the best possible support.\n  If this is possible with the displacement of positions, while ethically questionable, it may make sense from a fiduciary perspective.\n\n\nHow To Embrace\n\nLuckily a lot of software vendors have hopped on the \u201cGPT train\u201d announcing AI-assists in their products. The following is a list is some that are relevant in the support world:\n\n\n  Intercom (Wingman)\n  DevRev (Turing)\n  SFDC (Einstein)\n\n\nThe other option is to leverage the OpenAI API and create your own integration. With building your own integration you get the benefit of flexibility and choice with the tradeoff of time, cost and maintenance.\n\nOne key for any of these is to ensure you validate and potentially modify the responses before sending to your customer. You can either do this on query (e.g. feed in your taxonomy), by post-processing the result, or both (preferred).\n\nOutro\n\nThe application of artificial intelligence and tools like ChatGPT in customer support can drive significant improvements in response times, cost-efficiency, personalization, and overall customer satisfaction. Embracing these technologies will not only help businesses stay competitive but also foster long-term customer loyalty (and employee retention).\n\nHowever, to mitigate these risks, businesses should adopt a balanced approach that combines AI-driven solutions with human support. Continuous monitoring, improvements, and ethical considerations must be prioritized to ensure AI\u2019s responsible and effective use in customer support.\n\nTL;DR\n\n\n  AI takes the support experience to a whole new level\n  Embrace it\n  Key is finding the balance between autonomy and human control\n  Like all things, start small, and increment\n\n"
    },
    {
        "id": "ART-991",
        "dataset_source": "devrev-dev0",
        "title": "Why Poor Support May Be Costing You More Than You Think",
        "content": "I\u2019m going to start things with a simple statement:\n\n\n  Providing poor support may be a leading cause for customer churn\n\n\nWhat is customer churn? Customer churn is when customers stop using your product or service. This is commonly tracked with the \u201cchurn rate\u201d which can be calculated as:\n\n\\[\\text{churn rate} = {(\\text{users at beginning of period} - \\text{users at end of period}) \\over \\text{users at beginning of period}}\\]\n\nWhy is churn bad? Customer acquisition is not cheap (CAC) and can be up to 5-25x more expensive than keeping existing customers. If you care about your bottom line, this is key.\n\nNow let\u2019s look at why poor support could be a leading cause of churn.\n\nA Tale of Support Experiences\n\nThe following are a few examples of customer support situations I found myself in recently; they were so polar opposite that it motivated me to write them down and discuss the impacts of each. Both led to significantly different outcomes, some positive and the poor experiences leading to me churning off a vendor.\n\nExample 1: Bad\n\nIn my role, I produce many videos for external enablement, and we leverage a mix of YouTube and another vendor, which I will refer to as \u201cFoo.\u201d\n\nOne evening, I had trouble uploading videos I worked late to produce, so I contacted their support to see what was happening. I heard back the next day, and this was the response:\n\n\u201cHi there,\n\nThank you for contacting \u2018Foo\u201d My name is **** and I\u2019ll be happy to assist you.\n\nI sincerely apologise for the inconvenience caused to you.\n\nUpon checking the account associated with the email(***@devrev.ai), I can see that you have signed up for a **** membership. Please be advised with **** membership you\u2019ll be able to upload upto **** videos per year.\n\nIn this case I humbly request you to make sure that you have logged in to the account while trying to upload and please clear the cache, browsing history, then try uploading the video. If you are still facing the same issue please share the screenshot of the error.\u201d\n\nPoor grammar aside, we are nowhere close to the video limit, and essentially the \u201cresolution\u201d or advice was worthless. I responded with screenshots of the issue and more detail; however, I still have not heard back from their support as of 48 hours in. They didn\u2019t have any chat support (this is probably the most critical medium for support nowadays) or a phone number to call, so I was stuck waiting for their slow responses.\n\nOne of the support threads was \u201cghosted\u201d with no response from support after attaching screenshots (18 days without a response as of publishing this post). I was so desperate for help I even messaged people from \u201cFoo\u201d on LinkedIn for support (I still didn\u2019t get a response). Finally, I did resolve the problem; however, without their help.\n\nBased on the above example\u2019s poor experience, I am now working to cancel our plan with that vendor and migrate to their competitor. Given it is a SaaS service, the migration is extremely painless.\n\n\n  With non-tangible items delivered \u201cas-a-service,\u201d the cost of migration is lower than ever. Optionality is real. If we don\u2019t provide exceptional support when problems occur (they will), what\u2019s stopping the from churning? They key lesson here is: take care of your customer!\n\n\nSo what were the outcomes of this experience?\n\n\n  Inability to chat or directly contact support led to a frustrating experience\n  Poor support was the cause of our migration to their competitor\n  Vendor loses a growing customer\n  Vendor gets negative customer experience and rating\n  Vendor\u2019s competitor gains a customer\n\n\nExample 2: Good\n\nI dropped my wife\u2019s car off at the dealership recently for service. The experience was simple and painless.\n\nLater in the day, I got a call from the service representative to inform me that they had misquoted me on the service price; however, because it was their mistake would still be honoring the original quote.\n\nWhile this isn\u2019t your traditional \u201csupport\u201d scenario, it is an excellent example of good customer service and a great experience for me.\n\n\n  Customer service isn\u2019t just about providing support when problems occur; it includes any customer interactions and needs to be handled holistically.\n\n\nSo what were the outcomes of this experience?\n\n\n  Dealer will be getting a lot of positive recommendations\n  Will take my other car to them for services (revenue expansion for the dealer)\n\n\nExample 3: Good\n\nI work on our delivery service architecture (e.g., CDN, Edge, WAF, etc.), where we leverage Fastly heavily for these services (WASM FTW).\n\nGiven our modern service architecture, we rely heavily on WebSockets for bi-directional communication between the client and our services, as it is much more efficient than client-side polling. Initially, the Fastly Compute@Edge (C@E) service didn\u2019t support WebSockets and we ran into some problems when we enabled our edge Rust code which handles all traffic. So we filed a request with Fastly and immediately got a response mentioning an upcoming beta.\n\nAs the beta became ready, they proactively contacted us to get us on the program and worked with us to ensure everything was operating as expected. During the cutover, they were on a call live with us to ensure everything worked as expected. We ran into a few hiccups, but they helped troubleshoot and solve with us live.\n\nThis is an excellent example of a partnership, not a traditional vendor/client relationship. They were honest about the lack of a feature (this builds credibility), but they were also proactive about communicating when it was available and partnered with us during the cutover. Even with some minor problems during the cutover, which they were on the call to assist with, the experience was excellent.\n\n\n  Customers don\u2019t expect things to be perfect; they want honesty and partnership.\n\n\nSo what were the outcomes of this experience?\n\n\n  Honest communication caused credibility and trust to form\n  We have partnered with them on additional initiatives (e.g. WAF, WASM on Edge, etc.)\n  I highly recommend them to others in the same field as myself\n\n\nWhy Poor Support Can Hurt Your Business\n\nThe good and bad examples above show different ways of handling customer experience, leading to opposite results: the bad experience leading to the migration off of the vendor, and the good experiences leading to business expansion with those vendors.\n\nIn this day and age, even more so for SaaS services, customers have a great deal of optionality. Moreover, given that all SaaS systems are intangible, migration between them becomes much more accessible, giving the upper hand to the consumer.\n\nCustomers expect good support, and when push comes to shove, if they don\u2019t get it, this could be a driving factor to switch vendors. Now this vendor\u2019s product was great when it worked, but I not only expect things to work, I expect someone to help me resolve things when problems occur (I understand that problems will happen, and that\u2019s ok). This is how the vast majority of customers are.\n\nAs vendors, we must provide exceptional support and a great customer experience. Not only will this lead to potential business expansion and positive word of mouth, but it will also be a critical factor in ensuring customer loyalty and minimizing churn.\n\nLastly, remember that customer service isn\u2019t just about support; it is about all interactions with the customer (sales, marketing, etc.)\n\nTo learn more about how and why you should look at support differently, check out the following post: Why you Should be Looking at Support Differently.\n\nTL;DR\n\n\n  Customers have optionality now more than ever (especially for SaaS)\n  Providing latency-sensitive support channels (e.g. chat) are critical\n  A poor support experience can be the cause of customer churn\n  A great support experience can be the cause of revenue expansion\n  Customer service is more than just support\n  Treat your customers like a partner, and all parties benefit\n\n"
    },
    {
        "id": "ART-992",
        "dataset_source": "devrev-dev0",
        "title": "Perimeter security with Fastly edge and AWS \u2014 Part I",
        "content": "With the increase in ransomware attacks, high-profile breaches, and exploitations, security is finally becoming near and dear or at least getting the emphasis it needs. However, given the prevalence of the cloud, which provides simple access to computing, this further emphasizes the need to focus on security.\n\nThis article series will cover some background information on platform constructs and one example approach to help secure your perimeter and origin (servers hosting content) running in AWS and using Fastly\u2019s Edge (C@E +CDN) products.\n\n\n  Part I will cover some background topics related to AWS and Fastly.\n  Part II will cover how to leverage the two together to provide an option for perimeter security.\n\n\nWhen it comes to perimeter security there are a few key threat vectors or attacks:\n\n\n  People*\n  DNS (foo.bar.com -> IP)\n  Network (firewalls, routing)\n  DDoS (overwhelming origin)\n  Configuration (area to inject vulnerabilities/misconfigurations)\n\n\n*unfortunately, sometimes the easiest to target via phishing/spoofing\n\nIn the following sections, I\u2019ll cover some aspects of each of these and how they apply to the cloud (AWS) and CDN/edge (Fastly).\n\nAmazon Web Services (AWS)\n\n\n\nWhen it comes to AWS or any cloud for that matter, network security is of utmost importance given the lack of physical control and breadth of potential threat vectors if not done correctly. If you were to do an NMAP scan of AWS IP ranges (not recommending you do so), you\u2019ll see a lot of things that are left exposed to the internet (0.0.0.0/0) and lack any/all security at the perimeter.\n\nAWS offers a few levels of control to help secure your VPCs which I\u2019ve defined below. I\u2019ll assume you have a fairly decent understanding of AWS networking but will cover it briefly.\n\nNetwork ACLs\n\nNetwork ACLs are VPC-wide rules which can be defined and can be used to define both inbound and outbound rules. However, these are \u201cstateless\u201d meaning they don\u2019t understand the source of the traffic.\n\nFor example, say you wanted to allow traffic from 1.1.1.1/24 inbound but allow everything (0.0.0.0/0) outbound. Network ACLs don\u2019t know whether or not the packet came from 1.1.1.1 or originated internally (firewalls keep track of this). In this case, anything originating internally would be blocked besides traffic going to 1.1.1.1/24.\n\nSimple answer, Network ACLs are very crude and won\u2019t offer much help as internal services may need to reach external sources.\n\nSecurity Groups\n\nSecurity groups act as a virtual firewall for resources internal to the VPC and allow you to create rules (both inbound/outbound) that control:\n\n\n  source/destination range(s)\n  port range(s)\n  protocol(s)\n\n\nLike any firewall, you can only specify ALLOW rules with the default rule being DENY.\n\nNow, given that security groups are applied to resources in the VPC it is very common to have cascading security groups that you can use to structure DMZs, choke points, etc.\n\nFor example, if you\u2019re running an ELB you may have one external-ingress security group allowing certain things into it with DMZ resources associated, then from there another internal-ingress security group that only allows things for the ELB security group or things internal to the network (e.g. private ranges/security groups), etc. This is commonly used when using public/private ingress gateways, etc.\n\nWhen using security groups you should really understand the following:\n\n\n  What tiers of services do I have (e.g. public, DMZ, internal, etc.)\n  Who should be able to access things (security groups, IP ranges)\n  What ports they should be able to access (e.g. 443)\n  What protocols they should be able to access (e.g. TCP)\n  What target(s) should be exposed via the Security group\n\n\nPro-tip: you see any security groups with inbound rules allowing 0.0.0.0/0 with any/all port/protocols, or inbound SSH (yikes) you should consider evaluating things :)\n\nFastly CDN/C@E\n\n\n\nCDNs are not a new concept and have been around for years providing static asset caching and DDoS prevention.\n\nHowever, in the past few years, these have expanded to now include capabilities like web-application firewalls (WAFs) and edge compute (logic execution in the CDN) capabilities.\n\nIn this section, I\u2019ll be talking about some of Fastly\u2019s capabilities as that is what I am most familiar with and I am a fan of both their embracing of WebAssembly (WASM/WASI) at their edge and their WAF capabilities.\n\nThe way these platforms work is typically done via a few core constructs:\n\nGetting traffic to the edge (DNS CNAME)\n\nA key item with any CDN is you will create CNAME entries for your site and point them to Fastly\u2019s endpoints. For example, foo.bar.com may point to k.sni.global.fastly.net instead of your web servers. This means when resolving foo.bar.com it would direct the traffic to hit Fastly\u2019s servers.\n\nThis is important for a few key reasons, it enables them to hit a local Fastly point-of-presence (POP) and also allows them to be able to handle DDoS attacks before they hit your origin (if configured correctly, as I will cover).\n\nHere you can see an example CNAME resolving to Fastly:\n\n; <<>> DiG 9.16.1-Ubuntu <<>> foo.bar.com\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 63760\n;; flags: qr rd ad; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 0\n;; WARNING: recursion requested but not available\n;; QUESTION SECTION:\n;foo.bar.com. IN A\n;; ANSWER SECTION:\nfoo.bar.com. 0 IN CNAME k.sni.global.fastly.net.\nk.sni.global.fastly.net. 0 IN A 151.101.2.137\nk.sni.global.fastly.net. 0 IN A 151.101.66.137\nk.sni.global.fastly.net. 0 IN A 151.101.130.137\nk.sni.global.fastly.net. 0 IN A 151.101.194.137\n;; Query time: 50 msec\n;; SERVER: 172.29.208.1#53(172.29.208.1)\n;; WHEN: Thu Apr 14 09:29:47 CDT 2022\n;; MSG SIZE rcvd: 168\n\n\nRequest handling/caching\n\nTraditionally a lot of delivery models would rely on CDNs only for their static asset caching and DDoS mitigation, still relying on origin to handle the majority of requests.\n\nHowever, I do believe with edge compute and the ability to execute logic efficiently on the edge via WASM we will see an inverting of the delivery model where we can offload the burden of requests from hitting origin and push more to the edge (more to come here!).\n\nIn our case we are using a mix of edge compute (C@E) which allows us to compile and execute RUST code on Fastly\u2019s edge, which can also take advantage of their CDN which can cache content from origin.\n\nA quick note on WebAssembly (WASM)\u2026 this is one thing that is very interesting/exciting and will be one of the core enablers to making clients (and even server side) much more efficient given it enables you to run binary instructions in a stack-based VM.\n\nGiven this it offers some very nice performance and efficient improvements when compared to native JS.\n\nI\u2019ll write some articles dedicated to WASM, but there\u2019s some very interesting things it will facilitate.\n\nA key with any CDN is time to purge (aka how long it takes to remove stale content) from the network. With Fastly\u2019s ability to purge things globally in ~100ms, it opens up some very interesting possibilities with response caching.\n\nSurrogate keys are what allow you to identify groups of objects together (can be any groups of objects or even individual objects). With the ability to inspect each request at the edge, and purge on-demand during an update, there are a lot of interesting things we can do here. More on this to come!\n\nWAF\n\nAs I alluded to above a benefit of forcing traffic to Fastly is obviously the DDoS mitigation piece, but more generally is the ability to minimize the amount of garbage hitting the origin.\n\nWith the addition of the WAF at the edge, we can inspect requests and block them before they ever get sent to the origin. This obviously offers many benefits from a security standpoint, but it also minimizes the load on the origin as the invalid requests are never forwarded.\n\nWAFs will vary in how they work, but simply put they inspect the request and run it through a series of rules that can check for known bad actors, attacks, etc. The Open Web Application Security Project (OWASP) provides a good amount of detail including exploits to check for, etc.\n\nOne key difference with the Fastly WAF is instead of the traditional employment of regular expressions (RegEX), they use lexical analysis which tokenizes items that are then analyzed. I\u2019ll write up some other content on WAFs at another point in the future!\n\nHope you enjoyed it! Part II will cover how to leverage the two together to provide an option for perimeter security.\n"
    },
    {
        "id": "ART-993",
        "dataset_source": "devrev-dev0",
        "title": "Perimeter security with Fastly edge and AWS \u2014 Part II",
        "content": "This is part II of a series discussing how to secure the perimeter using AWS and Fastly.\n\nIn Part I, we covered some of the basic concepts and background context necessary to determine how to architect a perimeter security solution with both platforms.\n\nIn this article, we will cover the actual implementation consisting of the following:\n\n\n  Top-level architecture and flow\n  TLS configuration\n  DNS CNAME configuration\n  High-level Architecture and Flow\n\n\nThe following figure shows the high-level flow and end-to-end communication diagram of the solution we\u2019ve employed:\n\n\n\nIn our example, we actually have a few endpoints that are used to split API and application, but we`ve kept it simple in this example. The following flow will be described below:\n\n\n  If the client tries to access the origin endpoints directly they are blocked access as only known IPs (Fastly POPs) are allowed to talk to origin\n  When client resolves foo.bar.com DNS resolves these to the fastly endpoints (e.g. k.sni.global.fastly.net)\n  Client sends request which is done directly to Fastly\n  Fastly handles the request and can throttle (rate-limiting), or block (DDoS/WAF)\n  IF the request is denied or throttled the response is sent back to the client\n  Depending on the endpoint you may require a valid auth token (e.g. JWT). At this point we have Rust code running in Fastly edge which is used to inspect and validate JWT tokens and redirect if necessary\n  IF an auth token is required we redirect the client to the IDP (e.g. Auth0, Google, etc.) to authenticate\n  Once the client has a token we inspect and validate the auth token and ensure they are able to access the endpoint (using same Rust code running in Fastly edge above)\n  After the auth token has been validated, we have the possibility to augment the request before it is forwarded to the backend\n  Authorization can be performed at the edge before authorizing the request to be sent to origin\n  Request is sent from Fastly to origin\n  Origin performs auth token validation, performs authorization, and handles the request\n  Origin sends response back to Fastly which in turn forwards to the client\n\n\nTLS configuration\n\nCertificates are essential to prove and validate a site is who they say they are as well as provide the necessary keys to facilitate encrypted communication. Before we configure DNS we need to configure TLS certificates for each publically accessible endpoint.\n\nWhen it comes to TLS, there are a few core options:\n\n\n  TLS v1.3\n  TLS v1.3 + 0-RTT\n  HTTP/3 & TLS v1.3 + 0-RTT\n\n\n0-RTT\n\n0-RTT stands for zero round trip time resumption which allows the client to start sending requests before the TLS handshake completes.\n\nIn the traditional flow you`d see something similar to the following:\n\n\n\nWith 0-RTT the flow is more like the following (changes highlighted in bold):\n\n\n\nHTTP/3 (QUIC)\n\nQUIC takes this even a step further and allows the client to send data in the very first round trip and not wait for TCP/TLS handshakes.\n\nWith QUIC the flow is similar to the following:\n\n\n\nAs you can both allow you to send application data (HTTP request) before waiting to the TLS ServerHello response which does reduce some latency. Now it all sounds great, but some potential attack vectors need to be considered before allowing.\n\nFor example, because you can perform requests before the TLS handshake completes there is the potential possibility of sending requests which are non-encrypted. There is also the potential possibility for man-in-the-middle replay attack where an attacker could intercept the TLS ClientHello and HTTP requests, and reply those to the server.\n\nThere are things like RFC8470 which can tell the client to resend the data after the handshake is completed.\n\nWhich one to choose?\n\nBy default things will use TLS v1.3, however, there are some very interesting performance implications and benefits of 0-RTT/QUIC. This comes down to the following:\n\n\n  Is latency a concern?\n  Is the server capable of 0-RTT/QUIC?\n  Are things RFC8470 (Too Early) compliant?\n\n\nLuckily all of the major CDN vendors are RFC8470 compliant and send the Early-Data header when 0-RTT is enabled which means if you want to use those options they are possible with minimal risk. NOTE: I say minimal as there are always threat vectors introduced with any change.\n\nWe have noticed significant performance improvements when moving from TLS-1.2 to TLS-1.3. At the time of writing this O-RTT is only supported from clients to Fastly and not from Fastly to origin servers.\n\nFastly TLS configuration\n\nIn the Fastly console navigate to Secure then Manage TLS certificates and click on Secure another domain. Follow the guide to create the certificates for your endpoints (they will be assigned to domains in the Edge service automatically).\n\nFollow the guides and apply the activations necessary to the TLS configuration. For example, here you can see we have enabled all 3:\n\nDepending on the TLS activations you will get CNAME records that will be used in your DNS configuration.\n\nDNS configuration\n\nOne you have your TLS configurations performed it is now time to create the DNS CNAME entries to point things to Fastly.\n\nFor example, if you wanted to use HTTP/3 & TLS v1.3+0-RTT you would configure your CNAME record to point to n.sni.global.fastly.net.\n\n; <<>> DiG 9.16.1-Ubuntu <<>> foo.bar.com\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 63760\n;; flags: qr rd ad; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 0\n;; WARNING: recursion requested but not available;; QUESTION SECTION:\n;foo.bar.com. IN A;; ANSWER SECTION:\nfoo.bar.com. 0 IN CNAME n.sni.global.fastly.net.\nk.sni.global.fastly.net. 0 IN A 151.101.2.137\nk.sni.global.fastly.net. 0 IN A 151.101.66.137\nk.sni.global.fastly.net. 0 IN A 151.101.130.137\nk.sni.global.fastly.net. 0 IN A 151.101.194.137;; Query time: 50 msec\n;; SERVER: 172.29.208.1#53(172.29.208.1)\n;; WHEN: Thu Apr 14 09:29:47 CDT 2022\n;; MSG SIZE rcvd: 168\n\n\nThat covers this part, in the next part we will cover AWS configuration!\n"
    },
    {
        "id": "ART-994",
        "dataset_source": "devrev-dev0",
        "title": "How to Configure Tracking with GA4 and Google Tag Manager",
        "content": "I\u2019ve used Google Analytics for a long time and it\u2019s been great. However, with the transition to GA4, some changes made me look at our configuration again.\n\nBack to Basics\n\nThe following are the basic ideas and terms used throughout this post:\n\n\n  Tag\n    \n      Small piece of executable code that allows you to send events from your site to Google product destinations\n    \n  \n  Google Analytics (GA)\n    \n      A tool for tracking web/app usage and events\n    \n  \n  Google Tag Manager (GTM)\n    \n      A tool for managing dynamic tags\n      Allows you to deploy shim code to your site and add more tags dynamically without requiring changes\n      Required for 3rd party tags\n    \n  \n  gtag\n    \n      a single tag (gtag != GTM)\n      Can be deployed directly or via GTM\n      Google Analytics will provide gtag code (via the data stream), however, it is recommended to use GTM for the flexibility\n      I\u2019ll cover how to link a GTM tag event to a GA4 data stream id\n    \n  \n  Account\n    \n      A bucket for the business/organization\n      Depending on the company, it is common to have a single account\n    \n  \n  Property\n    \n      A site (app/web) or set of sites\n      Used as a bucket for consolidating tracking and analytics\n      Streams in a property should \u201cmake sense\u201d and not aggregate things that should be looked at differently\n    \n  \n  Data Stream\n    \n      A mechanism to break down and track data flowing into a single property\n      For example, if you had a web app and mobile app, those could both be data streams on the same property\n      If you had a variety of marketing sites and wanted consolidated reporting, those would be data streams on the same property\n    \n  \n  Universal Analytics (UA)\n    \n      The older version of Google Analytics\n      Replaced by GA4\n      Will deprecate on July 1, 2024\n    \n  \n  Google Analytics 4 (GA4)\n    \n      The newer version of Google Analytics\n      Recommended to use\n    \n  \n\n\nHow to structure your properties\n\nWhen thinking about how to structure your properties, there are a lot of options:\n\n\n  Single property for all (1:*)\n    \n      For this approach, you\u2019d have a single property for all properties and a data stream per site\n      This will make consolidating things easy, however, you have to drill down to look at individual properties\n    \n  \n  Property per logical group of properties (1:n)\n    \n      In this approach, you have a property per logical group of properties where it makes sense\n      For example, you\u2019d want your marketing sites to likely be all in the same property to allow you to view all marketing site traffic\n      In this scenario, each site would be its own data stream within this property\n    \n  \n  Property per site (1:1)\n    \n      In this approach, you have a property per site\n      This does make some aggregations difficult as these are all at the property level\n    \n  \n\n\nSo what should you do? Use the property per logical group of properties approach.\n\nHere\u2019s how we\u2019ve structured our properties:\n\n\n  marketing sites (property)\n    \n      devrev.ai (data stream)\n      marketplace.devrev.ai\n      onecrm.ai\n      (future marketing sites)\n    \n  \n  docs.devrev.ai\n    \n      docs.devrev.ai\n      (future docs sites)\n    \n  \n  app.devrev.ai\n    \n      app.devrev.ai\n      (future app sites)\n    \n  \n  thebook.devrev.ai\n    \n      thebook.devrev.ai\n      (future thebook sites)\n    \n  \n\n\n\n\nThe following video shows how to configure the following:\n\n\n  Create a new data stream on a property\n  Create a new GTM container\n  Create tags in the GTM container for the data stream\n  Configure GTM events to be sent to the Google Analytics\n\n\n\n  \n\n\nTL;DR\n\n\n  Use GTM instead of gtag for the flexibility\n  Create a property for each bucket of properties\n  Create data streams for each site in the property\n\n"
    },
    {
        "id": "ART-996",
        "dataset_source": "devrev-dev0",
        "title": "An Example Object Model Style Guide (our actual style guide)",
        "content": "This is an example of our internal style guide when authoring new objects; while it may not be applicable, use this as an example and basis to build your own! If you didn\u2019t get a chance to look at the object modeling best practices, I would recommend looking HERE.\n\nUse snake_case\n\nAttribute and type names must use snakecase instead of camel case or others. The \u2018\u2019 should be used at word boundaries replacing the space.\n\nDo\n\n\n\nDon\u2019t\n\n\n\nUse lowercase for object and attribute names\n\nObject and attribute names must all be lowercase. Descriptions can contain capitalization.\n\nDo\n\n\n\nDon\u2019t\n\nmyCoolVar\nMy_cool_var\nMy_Cool_Var\n\n\nPostfix some types\n\nFor ID and Date/Timestamp types postfix the attribute name with the type.\n\nDo\n\nmy_id       # id type\nsome_date   # date type\n\n\nDon\u2019t\n\nmy          # id type\nsome        # date type\nfoo_someid  # id type\n\n\n\n  NOTE: the _id should be lowercase in the attribute name but uppercase (ID) when referenced in the description.\n\n\nUse required fields correctly\n\nA required field must be specified on each request or generated by the system on create (is_system: true). For non-system fields, this means the caller must specify the field in every request.\n\nIf a field is necessary for a majority of objects, but not all, do not mark as required.\n\nFor example, if we require all objects have dev_oid, id, and some may have attr foo set:\n\nDo\n\ndev_oid\n  ...\n  is_required: true\n  ...\nid\n  ...\n  is_required: true\n  ...\nfoo\n  ...  # NOTE: is_required defaults to false\n\n\nDon\u2019t\n\ndev_oid\n  ...\n  is_required: true\n  ...\nid\n  ...\n  is_required: true\n  ...\nfoo\n  ...\n  is_required: true   # NOTE: is_required incorrectly set to true\n  ...\n\n\n\n  NOTE: avoid accepting null as a valid value. If something may be null, the values should be re-considered.\n\n\nInherit from atom or a type that does\n\nAll types in the system must inherit from atom directly or indirectly (they inherit from a type who\u2019s parent (directly or indirectly) inherits from atom). This ensures that every object in the system has the bare minimum required fields for things like multi-tenancy, identification, etc.\n\nDo\n\n- name: work\n  parent: urn:devrev:objects:atom\n  fields:\n  ...\n- name: issue\n  parent: urn:devrev:objects:work\n  fields:\n  ...\n\n\nDon\u2019t\n\n- name: not_work\n  # NOTE: parent omitted\n  fields:\n  ...\n- name: not_work_child\n  parent: urn:devrev:objects:not_work\n  ...\n\n\nSet the devrev_field_type\n\nThe devrev_field_type must be set; please view the schema JSON to see a valid list of field types.\n\nSet the devrev_id_type if the devrev_field_type is ID\n\nWhen the devrev_field_type is set to id, the devrev_id_type must be specified to tell which type of id is expected. This is important to ensure only the correct types of IDs are stored.\n\nDo\n\n- name: atom\n  fields:\n    - name: created_by_id\n      devrev_field_type: id\n      devrev_id_type:\n        - user\n---\n- name: dev_oid\n  devrev_field_type: id\n  devrev_id_type:\n    - dev_org\n\n\nDon\u2019t\n\n- name: not_atom\n  fields:\n    - name: my_id\n      devrev_field_type: id\n      # NOTE: devrev_id_type omitted\n\n\nMust use a DON (not display ID) for any ID values\n\nIn the previous item, we dictate that you must set the devrev_id_type when the devrev_field_type is set to id. In coordination, the values of these MUST be in the DON format (don:...) and not the display ID format (TKT-111). This is imperative as the display ID doesn\u2019t contain details about the dev oid as well as other useful information the DON provides (e.g., the region which will be critical in multi-region scenarios.)\n\nDo\n\n{\n  \"dev_oid\": \"don:...:dev_org/1\"\n  ...\n}\n\n\nDon\u2019t\n\n{\n  \"dev_oid\": \"DEVO-1\"\n  ...\n}\n\n\n\n  NOTE: When referencing an ID in the description, ID must be capitalized (not id or Id)\n\n\nSet is_system to true for any system-generated fields\n\nFor any system set field, ensure that is_system: true.\n\nDo\n\n- name: foo\n  fields:\n    - name: created_by_id\n      devrev_field_type: id\n      devrev_id_type:\n        - user\n      is_required: true\n      is_system: true\n    ...\n    - name: bar\n      devrev_field_type: tokens\n      is_system: true\n      # NOTE: is_required isn't always necessary for system fields\n\n\nDon\u2019t\n\n- name: foo\n  fields:\n    - name: system_set_bar\n      devrev_field_type: tokens\n      # NOTE: is_system is not set to true\n      # NOTE: value is actually set by the system\n    ...\n\n\nProvide a short, but full description\n\nDescriptions should be succinct but also demonstrate the purpose of the attribute\n\nSort enum values logically and preference overridable_enum\n\nWhen defining ENUMs, define the values logically (may be alphabetical in some instances and may not). Legacy_enums cannot be changed, so use them sparingly as they cannot be customized.\n\nDo\n\n- name: status\n  fields:\n    # NOTE: status would be a combination of the state and stage.  For example\n    # active: pr approval pending, etc.\n    - name: state\n      devrev_field_type: overridable_enum # NOTE: overidable_enum used instead of legacy_enum\n      devrev_enum: # NOTE: order is not alphabetical\n        - open\n        - in-progress\n        - closed\n\n\nDon\u2019t\n\n- name: status\n  fields:\n    # NOTE: status would be a combination of the state and stage.  For example\n    # active: pr approval pending, etc.\n    - name: state\n      devrev_field_type: legacy_enum # NOTE: legacy_enum used instead of overridable_enum\n      devrev_enum: # NOTE: order is not alphabetical or logical\n        - open\n        - closed\n        - in-progress\n\n\n\n  NOTE: there may be some cases for using legacy_enum, however, this should be an uncommon case.\n\n\nSet gateway summary field to mark items that should be in summary resolution\n\nGateway will commonly resolve IDs into their summary objects before returning the response. This process takes an ID and fetches details about the referenced ID. This is necessary as in most cases the ID isn\u2019t too useful and the details about the aforementioned ID may be more useful.\n\nFor example, in work was have the applies_to_part_id attribute which references the part ID the work is associated with. However, the ID of the part isn\u2019t too helpful as I want to know details about the part (e.g., name, owner, description, etc.).\n\nIn general, the attributes included in the summary should be the minimal set of attributes required to render a view without the need for subsequent requests.\n\nDo\nSet important fields to summary: true\n\n- name: title\n  devrev_field_type: text\n  is_required: true\n  description: Title of the work object\n  gateway:\n    api_visibility: public\n    api_required: true\n    summary: true # NOTE: `title` included in summary\n---\n- name: severity\n  devrev_field_type: legacy_enum\n  devrev_enum:\n    - blocker\n    - high\n    - medium\n    - low\n  is_required: true\n  description: Severity of the ticket\n  gateway:\n    api_visibility: public\n    is_filterable: true\n    summary: true # NOTE: `severity` included in summary\n\n\nDon\u2019t\nDon\u2019t set all fields to summary: true\n\n      - name: field1\n        ...\n        gateway:\n          api_visibility: public\n          is_filterable: true\n          summary: true                         # NOTE: all fields marked as `summary: true`\n...\n      - name: field2\n        ...\n        gateway:\n          api_visibility: public\n          is_filterable: true\n          summary: true                         # NOTE: all fields marked as `summary: true`\n...\n      - name: field3\n        ...\n        gateway:\n          api_visibility: public\n          is_filterable: true\n          summary: true                         # NOTE: all fields marked as `summary: true`\n\n\nOverride gateway id_resolution only when necessary\n\nThe id_resolution selector sets the resolution gateway can do for IDs. Valid values are none,summary (default),full.\n\n\n  Use none when you don\u2019t any additional details about the referenced ID (just the ID will be sent in the response)\n  Use summary when summary details will do (defined via the summary gateway field). This is the default and should be good in most cases.\n  Use full only when you need the full referenced object\u2019s details (NOTE: use sparingly as this may bloat the response size)\n\n\nDo\n\n...\n- name: event_activity\n    fields:\n      - name: source_id\n        devrev_field_type: id\n        devrev_id_type:\n          - change_event\n        description: The ID correspending to the event\n        is_required: true\n        gateway:\n          description: Timeline's event entry\n          id_resolution: full                 # NOTE: id_resolution correctly overridden to full as the full event details are necessary\n          name: change_event\n...\n\n\nDo\n\n- name: link_id\n  devrev_field_type: id\n  devrev_id_type:\n    - link\n  is_required: true\n  is_system: true\n  gateway:\n    id_resolution: none # NOTE: id_resolution correctly overridden to none as the link_id details are not necessary\n\n\nDon\u2019t\n\n---\n- name: applies_to_part_id\n  devrev_field_type: id\n  devrev_id_type:\n    - part\n  is_required: true\n  description: Details of the part relevant to the work\n  gateway:\n    is_filterable: true\n    id_resolution: full # NOTE: this would cause a signifigant of bloat on this object's response and full should not be used in this case given the size of the part object.\n    name: applies_to_part\n\n\nSet gateway name for any postfixed attribute names where necessary\n\nDo\n\n- name: marketplace_id\n    devrev_field_type: id\n    devrev_id_type:\n      - marketplace\n    description: The marketplace the item belongs to\n    gateway:\n      name: marketplace                         # NOTE: `marketplace_id` correctly overridden to `marketplace`\n\n\nDon\u2019t\n\n- name: marketplace_id\n    devrev_field_type: id\n    devrev_id_type:\n      - marketplace\n    description: The marketplace the item belongs to\n    gateway:\n      description: The marketplace the item belongs to  # NOTE: redundant, only override when necessary\n      # NOTE: name not overridden, will appear as `marketplace_id`\n\n\nSet gateway api_visibility\n\nSets the api visibility for the field. Valid values are private, public, hidden.\n\nDo\n\n\n  Use private when things should only be internally available via the internal API endpoints\n  Use hidden when things should be omitted from API generation and does not create an API field for the attribute. Use for deprecated fields\n  Use public when the attribute should be visible in the public API\n\n\nDon\u2019t\n\n\n  Don\u2019t use private for things that should be public and are required by the app/client\n  Don\u2019t use public for fields that should only be accessible internally\n\n\nWhen to use composite types and mixins\n\nUse mixins when:\n\n\n  need a easily reusable common set of attributes that may be used by various types (e.g., MFZ mixin, links mixin, etc.)\n\n\nUse composite types when:\n\n\n  need an attribute to contain a nested structure instead of a simple value\n\n\n\n  NOTE: When you use a mixin the attributes of the mixin are \u201cmixed in\u201d to the objects attributes and do not need to be defined. when a composite type is added to a type the attribute needs to be added with a reference to the composite type.\n\n\nHow to define a composite type\n\ndevrev_composite_field_types:\n  - name: my_composite_type\n    fields:\n      - name: key\n        devrev_field_type: tokens\n        is_required: true\n        description: Key used to fetch the object value\n        ui:\n          display_name: Key\n      - name: vals\n        devrev_field_type: \"[]tokens\"\n        is_required: true\n        description: Values valid for the key\n        ui:\n          display_name: Value(s)\n    description: My composite type\n\n\nHow to reference a composite type\n\n- name: my_type\n  parent: urn:devrev:objects:atom\n  fields:\n    - name: my_cool_composite_type # NOTE: name doesn't need to math the composite type name\n      devrev_field_type: \"[]composite\"\n      is_required: true\n      description: Example addition of a composite type\n      ui:\n        display_name: My composite type\n      devrev_composite_type: my_composite_type\n\n\nHow to define a mixin\n\nNOTE: define mixins in separate files.\n\nmixin_types:\n---\n- name: my_status_mixin\n  fields:\n    # NOTE: status would be a combination of the state and stage.  For example\n    # active: pr approval pending, etc.\n    - name: state\n      devrev_field_type: overridable_enum\n      devrev_enum:\n        - open\n        - in-progress\n        - closed\n      is_required: true\n      is_system: true\n      description: State of the object based upon the stage\n      gateway:\n        is_filterable: true\n      ui:\n        display_name: State\n        is_hidden: true\n    - name: stage\n      devrev_field_type: composite\n      description: Stage of the object\n      is_required: true\n      gateway:\n        api_visibility: public\n        is_filterable: true\n      ui:\n        display_name: Stage\n        is_bulk_action_enabled: true\n        is_shown_in_summary: true\n        is_hidden_during_create: true\n      devrev_composite_type: stage\n  description: Mixin for status attributes\n\n\nHow to use a mixin\n\nobject_schemas:\n  - name: work\n    parent: urn:devrev:objects:atom\n    mixins:\n      - name: status\n        fields_prefix: \"\"\n    ...\n  - name: another_example\n    parent: urn:devrev:objects:atom\n    mixins:\n      - name: status\n        fields_prefix: \"\"\n\n\nExample:\n\n{\n  \"bar\":1,\n  \"bas\":\"aaa\",\n  \"boo\":          # NOTE: example of a top level composite type, may be via a mixin\n    {\n      \"x\":1,\n      \"y\":3,\n      \"z\":        # NOTE: example of a nested composite type, within the \"boo\" composite type\n        [         # NOTE: nested types can be a known type, structure or [] of structures\n          {\n          \"a\":1,\n          \"b\":2\n          },\n          {\n          \"a\":2,\n          \"b\":3\n          },\n        ]\n    }\n}\n\n\n\n  REMINDER: composite types may be nested.\n\n\nFor example, in MFZ a group has an attribute for conditional_roles which is a composite type that includes an array of conditions which is another composite type. The only way to model this nesting is with composite types.\n\nDo\n\n- name: group\n  parent: urn:devrev:objects:atom\n  fields:\n    - name: conditional_roles\n      devrev_field_type: \"[]composite\"\n      is_required: true\n      description: Conditional roles for the group\n      ui:\n        display_name: Conditional roles\n      devrev_composite_type: conditional_role\n---\ndevrev_composite_field_types:\n  - name: conditional_role\n    fields:\n      - name: conditions\n        devrev_field_type: \"[]composite\"\n        is_required: true\n        description: Conditions definition which must be met for role\n        ui:\n          display_name: Conditions\n        devrev_composite_type: condition\n---\n- name: condition\n  fields:\n    - name: key\n      devrev_field_type: tokens\n      is_required: true\n      description: Key used to fetch the object value\n      ui:\n        display_name: Key\n    - name: vals\n      devrev_field_type: \"[]tokens\"\n      is_required: true\n      description: Values valid for the key\n      ui:\n        display_name: Value(s)\n    - name: operator\n      devrev_field_type: legacy_enum\n      devrev_enum:\n        - eq\n        - in\n        - not_eq\n        - not_in\n      description: The operator used to compare the object vals\n      ui:\n        display_name: Operator\n  description: Condition\n\n\nDon\u2019t\n\n# NOTE: It isn't possible to structure nested types without composite types\n\n\nDo\n\nUse a mixin to add a common set of attributes across object types. If the field_prefix is set to \"\" the attributes will be added as defined in the mixin. If field_prefix is set to something other than \"\", for example, \"foo_\" the mixins attributes will be added as foo_[attr_name].\n\n\n  NOTE: to keep consistent with the snake*case requirement, the field_prefix must end with a *to give the structure prefix\\_[attr_name]\n\n\nobject_schemas:\n  - name: work\n    parent: urn:devrev:objects:atom\n    mixins:\n      - name: link\n        fields_prefix: \"\"\n      - name: reaction\n        fields_prefix: \"\"\n      - name: status\n        fields_prefix: \"\"\n    ...\n  - name: another_example\n    parent: urn:devrev:objects:atom\n    mixins:\n      - name: status\n        fields_prefix: \"\"\nmixin_types:\n...\n  - name: status\n    fields:\n      # NOTE: status would be a combination of the state and stage.  For example\n      # active: pr approval pending, etc.\n      - name: state\n        devrev_field_type: overridable_enum\n        devrev_enum:\n          - open\n          - in-progress\n          - closed\n        is_required: true\n        is_system: true\n        description: State of the object based upon the stage\n        gateway:\n          is_filterable: true\n        ui:\n          display_name: State\n          is_hidden: true\n      - name: stage\n        devrev_field_type: composite\n        description: Stage of the object\n        is_required: true\n        gateway:\n          api_visibility: public\n          is_filterable: true\n        ui:\n          display_name: Stage\n          is_bulk_action_enabled: true\n          is_shown_in_summary: true\n          is_hidden_during_create: true\n        devrev_composite_type: stage\n    description: Mixin for status attributes\n\n\nDon\u2019t\n\nDuplicate a common set of attributes by defining in each type. Notice how the state and stage attributes are defined in each type instead of a) using a composite type and b) using a mixin.\n\nobject_schemas:\n  - name: work\n    parent: urn:devrev:objects:atom\n    fields:\n      # NOTE: status would be a combination of the state and stage.  For example\n      # active: pr approval pending, etc.\n      - name: state\n        devrev_field_type: overridable_enum\n        devrev_enum:\n          - open\n          - in-progress\n          - closed\n        is_required: true\n        is_system: true\n        description: State of the object based upon the stage\n        gateway:\n          is_filterable: true\n        ui:\n          display_name: State\n          is_hidden: true\n      - name: stage\n        devrev_field_type: composite\n        description: Stage of the object\n        is_required: true\n        gateway:\n          api_visibility: public\n          is_filterable: true\n        ui:\n          display_name: Stage\n          is_bulk_action_enabled: true\n          is_shown_in_summary: true\n          is_hidden_during_create: true\n        devrev_composite_type: stage\n    ...\n  - name: another_example\n    parent: urn:devrev:objects:atom\n    fields:\n      # NOTE: status would be a combination of the state and stage.  For example\n      # active: pr approval pending, etc.\n      - name: state\n        devrev_field_type: overridable_enum\n        devrev_enum:\n          - open\n          - in-progress\n          - closed\n        is_required: true\n        is_system: true\n        description: State of the object based upon the stage\n        gateway:\n          is_filterable: true\n        ui:\n          display_name: State\n          is_hidden: true\n      - name: stage\n        devrev_field_type: composite\n        description: Stage of the object\n        is_required: true\n        gateway:\n          api_visibility: public\n          is_filterable: true\n        ui:\n          display_name: Stage\n          is_bulk_action_enabled: true\n          is_shown_in_summary: true\n          is_hidden_during_create: true\n        devrev_composite_type: stage\n...\n\n"
    },
    {
        "id": "ART-997",
        "dataset_source": "devrev-dev0",
        "title": "How to Write an Object Model That Doesn't Suck",
        "content": "When we started DevRev, one of the first items we worked on was defining our object model. Having seen a lot of previous object models and schemas for systems like SFDC and Jira (which are #*$&3d), I knew this was a crucial thing to do correctly.\n\n\n  What is an object model? An object model defines the objects for a system, their attributes and relationships between them. Think of it as defining a schema any object in the system is based upon.\n\n\nWe debated the core (foundational) types for months before we achieved clarity. Finally, we understood what the foundational types needed to be.\n\nWas it perfect? Absolutely not. However, because we started with a minimal set of types, we didn\u2019t have a lot of throw-away work as we could enhance and extend the existing types. Key finding: you\u2019ll never get your initial model correct; the key is building a solid foundation.\n\nInsights\n\nThis section discusses some key findings and best practices we discovered going through the process or in retrospect.\n\nWrite a style guide\n\nThis is one of the most essential items to ensure consistency across objects for the platform. Just like programming has style guides, you must create one for how you model your objects. This will ensure the objects are consistently named and common constructs are followed\n\nThe following shows some good and bad examples:\n\nDo\n\n//  consistent structure with snake_case naming\n\"object_attr_foo\";\n\"object_attr_bar\";\n\n\nDon\u2019t\n\n//  snake_case with inconsistent capitalization\n\"oBjecT_AttR_foo\";\n\n//  camelCase\n\"objectAttrBar\";\n\n\nDo\n\n// ID attribute correctly postfixed with _id\n\"name\": \"foo_id\",\n// correct ID type\n\"type\": \"id\"\n\n\nDon\u2019t\n\n\"name\": \"foo_id\",\n// should be ID type, not string\n\"type\": \"string\"\n\n\nInternally we use constructs like:\n\n\n  All naming must use snake_case (your preference may vary, key is consistency)\n  Use common postfixes where necessary (e.g., foo_id and bar_id vs. foo_id and bar_idtype)\n  Abstract things where possible and leverage inheritance and/or mixins to leverage throughout object types (section below)\n  Keep root objects clean\n  Embed when the object cannot exist on its own, instantiate when it can\n\n\nYou can view an actual sample of our style guide HERE\n\nUse a markup language to define object types and leverage code generation\n\nBuilding upon the style guide we built an internal framework for authoring schemas, doing validations and performing code validations (e.g. Protos, RPCs, etc.) named Archetype. Traditionally people may author schemas directly in a .proto file, however, that is very manual and doesn\u2019t account for other things you may care about like ui hints, api visibility, etc.\n\nThis ended upon being one of the most beneficial items, as we were able to generate .proto files for types, the corresponding Go code, MongoDB helper functions, OpenAPI specs, and a ton of other items. It took a little time to build this up front, however, the time savings it has gained us are a strategic enabler for us now.\n\nThe following shows a snippet of this:\n\n- name: atom\n  fields:\n    - name: id\n      devrev_field_type: id\n      is_required: true\n      is_system: true\n      is_immutable: true\n      description: Globally unique DevRev Object Name (DON)\n      gateway:\n        api_required: true\n        api_visibility: public\n        description: Globally unique object ID.\n        id_resolution: none\n        summary: true\n      ui:\n        display_name: ID\n        is_hidden: true\n    ...\n\n\nWe use this to drive the a ton of code generation:\n\nArchetype Definitions\n  |\n  |--gRPC/Proto\n  |   |--.proto\n  |   |--Go helpers (via protoc)\n  |   |--gRPC (via protoc)\n  |\n  |--MongoDB\n  |   |--Helper methods (e.g., filters, Insert, Update, Delete, etc.)\n  |\n  |--Gateway\n  |   |--OpenAPI spec\n  |   |--Resolvers\n  |\n  |--Documentation\n  |   |--Markdown\n  |\n  |--UI\n  |   |--Validations\n  |   |--Tool tips\n  |   |--Visibility\n\n\n// TODO: I hope to contribute this to the community so others can use it.\n\nStart small and iterate\n\nSpend the time to hone down and refine what core object types are essential. I cannot stress this enough. Adding more types down the line is much easier than removing them, as removing items is a breaking change that impacts the APIs, etc. This will also force you to be very critical of new object types.\n\nWe originally started with a few base types:\n\nAtom\n  |\n  |--Work\n  |--Part\n  |--Org\n  |--User\n  |--Link\n\n\nWe then evolved and expanded those core types with leaf type:\n\nAtom\n  |\n  |--Work\n  |   |--Issue\n  |   |--Ticket\n  |--Part\n  |   |--Product\n  |   |--Capability\n  |   |--Feature\n  |--Org\n  |   |--DevOrg\n  |   |--RevOrg\n  |--User\n  |   |--DevUser\n  |   |--RevUser\n  |--Link\n\n\nOver time these types expanded as well:\n\nAtom\n  |\n  |--Work\n  |   |--Issue\n  |   |--Ticket\n  |   |--Conversation\n  |--Part\n  |   |--Product\n  |   |--Capability\n  |   |--Feature\n  |   |--Runnable\n  |   |--Linkable\n  |--Org\n  |   |--DevOrg\n  |   |--RevOrg\n  |--User\n  |   |--DevUser\n  |   |--RevUser\n  |--Link\n  |--Artifact\n  |   |--Emoji\n  |--Campaign\n  |--...\n\n\nThe key here is to start with a good foundation and build on top of it. You don\u2019t know what you don\u2019t know, so there\u2019s no sense in trying to come up with every possible type. Originally I had tried to model all types, but we brought it back to the core types and iterated. I\u2019m glad we did this as the product and needs of our users changed which led to a divergence in types we assumed we would have needed.\n\nUse inheritance and class modeling constructs\n\nThis will help with consistency and uniformity across objects. For example, we have a root base \u201cclass\u201d called \u2018Atom\u2019 which all objects inherit from. This root base class defines the common attributes we want in each object (e.g., the attribute used for multi-tenancy, object versioning, etc.)\n\nIf a method like this isn\u2019t followed, there may be risks of required items being forgotten about in individual definitions. We do this at multiple levels (we limit to 4 to keep things simple). In our schema definition (more below) we reference the parent which will be pulled in during generation:\n\n- name: work\n  # inherits from atom\n  parent: urn:devrev:objects:atom\n  fields:\n  ...\n- name: issue\n  # inherits from work which inherits from atom\n  parent: urn:devrev:objects:work\n  fields:\n  ...\n\n\nIf you look at the previous structure, you can see the inheritance hierarchy:\n\nAtom\n  |\n  |--Work\n  |   |--Issue\n  |   |--Ticket\n  |   |--Conversation\n  |--Part\n  |   |--Product\n  |   |--Capability\n  |   |--Feature\n  |   |--Runnable\n  |   |--Linkable\n  |--Org\n  |   |--DevOrg\n  |   |--RevOrg\n  |--User\n  |   |--DevUser\n  |   |--RevUser\n  |--Link\n  |--Artifact\n  |   |--Emoji\n  |--Campaign\n  |--...\n\n\nTypes != Instances; model types (generics), not instances\n\nThis comes up fairly frequently when teams come up with proposals for new object types. When modeling, they are thinking about what an instance of the object should look like, but not necessarily the type. The two are very different. An object model should define the types which can be used to implement the instances you need.\n\nFor example, one recent discussion was on handling surveys for customer satisfaction (CSAT). Right off the bat I knew there would be multiple types of surveys besides CSAT.\n\nInitially, the proposal encoded the survey type into the attribute, this is bad and doesn\u2019t scale.\n\nDo\n\n  ...\n  \"id\":\"don:...:ticket/44\",\n  \"object_type\": \"ticket\",\n  // ability to handle multiple survey response\n  \"surveys\": [\n    {\n      \"type\": \"CSAT\",\n      // these can be kept disjoint and resolved\n      \"response\":\"good\",\n      ...\n    },\n    {\n      \"type\": \"feedback\",\n      \"response\":\"foobar\",\n      ...\n    }\n  ...\n\n\nDon\u2019t\n\n  ...\n  \"id\":\"don:...:ticket/44\",\n  \"object_type\": \"ticket\",\n  \"csat_respose\": \"good\"\n  ...\n\n\nAs new survey types come, nothing needs to be restructured and we have uniformity. Instead, we turn something from a early binding build-time item into something that can be late binding, customizable and run-time providing much more flexibility.\n\nPro-tip: encode things into attribute names sparingly, and try to avoid where possible.\n\nIn another example, say you had a use case where you may allow users to attach files to a variety of objects (say foo, bar, bas), you could model this a few ways:\n\nDo\n\n\n  Create a generic attachment type that can be referenced by each type\n\n\nDon\u2019t\n\n\n  Create an attachment type for each object type (foo_attachment, bar_attachment, bas_attachment)\n\n\nBy abstracting things to a single type you ensure consistency; if the type changes you only have to manage in a single place. We have an \u2018artifact\u2019 object type we created for a scenario exactly like this, which is used for attachments, uploads, kbs (extend this), design docs, etc.\n\nPlan for multi-tenancy in the object\n\nWe knew we were building a multi-tenant SaaS platform, so this tenancy must be done correctly. There is a time and place for physical separation of data, however, this isn\u2019t always required and logical tenancy will do in most cases. Even if you don\u2019t initially plan for multi-tenancy or need it, it\u2019s never a bad idea to plan ahead for this.\n\nRather than partitioning tenant data as the storage layer, which was very inefficient, we built multi-tenancy into every one of our objects. All objects inherit from the root base class (Atom), which includes a tenancy key unique to each tenant (dev_org and rev_org). Using this, we have built-in safeguards to ensure only actors from a certain tenant can access objects of that tenant. Our authorization, mongo-client and other services all leverage this tenancy key and use this for validations.\n\nEven if there is a case for physical segmentation, it could still leverage this attribute to define which physical partition it goes to.\n\nRemember, you don\u2019t know what you don\u2019t know, doing some of these things initially will allow you to grow and evolve without having to worry about a massive overhaul.\n\nJust use globally unique ids\n\nDo IDs need to be globally unique? Unique within a partition? What about in the future? It\u2019s much easier to plan for the worst up front and not have to rip and replace things down the line. Each ID in the system is universally identifiable which gives us flexibility and minimizes and risk of changes down the line. This approach also ensures that any future mergers will not cause any issue.\n\nFor example, if you had unique object IDs per customer but the IDs are not universally unique you can have object ids that overlap across customers (not good):\n\n\n  cust A: obj id: aaa\n  cust b: obj id: aaa\n\n\nNow say cust A and cust B merge and you need to merge their data, what happens? In this scenario, there is overlap so merging will be a problem.\n\nAlso, if you do merge you\u2019d need to do a translation where some IDs change turning into massive updates as old ID references would be invalid.\n\nNow, if you had taken the universally unique approach you wouldn\u2019t have any merge conflicts if you needed to consolidate as the IDs don\u2019t overlap:\n\n\n  cust A: obj id: A/aaa\n  cust B: obj id: B/aaa\n\n\nNotice how object ids are prefixed with the customer ID, making each of them unique.\n\nTaking inspiration from the AWS urn, we created what we call a DevRev Object Name (DON) ID format. The structure of this ID format is similar to the following:\n\n<don>:<service>:<partition>:(:<type>/<id>)+\n\nwhere:\n\n\n  \n     is the type of identifier, in the future we may have additional specifications\n\n  \n  \n     is the name of the service creating the DON. For example, \"core\" or \"identity\"\n\n  \n  \n     is the name of the well known instance the SOR is located in\n\n  \n  \n     is the type of an object in the path\n\n  \n  \n     is the identifier of the object without a prefix\n\n\n  \n\nThe following are some examples of DONs:\n\nAn issue: don:core:dvrv-us-1:devo/55:issues/789\n\nA comment on the above issue: don:core:dvrv-us-1:devo/55:issues/789:comment/5. Note how this is nested in the issue.\n\nAn issue for a different org (partition): don:core:dvrv-us-1:devo/44:issues/789. Note the same issue id but different devo id\n\nAn application: don:identity:dvrv-us-1:app/67. Note there is only one component\n\nOne powerful things with this is because everything is built upon the core tenancy keys (e.g. dev_org), we have a ton of flexibility, clarity and overlap avoidance.\n\nFor example, look at the following 2 IDs from the above examples:\n\n\n  don:core:dvrv-us-1:**devo/55**:issues/789\n  don:core:dvrv-us-1:**devo/44**:issues/789\n\n\nThese are issues from 2 different orgs, they have the same issue ID, but because of the devo in the DON they are both globally unique. This allows us to keep the type ids clean but still maintain a globally unique ID format.\n\n// TODO: I hope to share more here on our DON format.\n\nDecouple object schemas from the underlying storage implementation\n\nDon\u2019t let the underlying storage platform bias your object models. It is much easier to start with a generic model, then extend to account for the storage model.\n\nFor example, we used a document database (MongoDB) since JSON is the primary payload construct, and they are very flexible (optional fields may be omitted, simple to extend schema, etc.). Regardless if you choose a document store, a key/value store, or relational database, a good object model should easily mold to each system type.\n\nBy abstracting from the underlying storage system, you can enable flexibility to change platforms (if need be).\n\nTL;DR\n\n\n  Write a style guide for consistency\n  Start small and iterate\n  Try things out before making core changes\n  Model types (generic), not instances\n\n"
    },
    {
        "id": "devrev-dev0-qnas-0",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 14 QnAs",
        "content": "Question: How do the stages change in Convergence snap-in?\nAnswer: 1. When all the issues linked to a ticket are in open state then the ticket moves to awaiting development. 2. When atleast one issue is in progress state, the ticket moves to in development. 3. When all the issues are in closed state, ticket moves to work in progress. 4. A ticket moves to accepted stage when there is an enhancement linked to it in ideation stage or when the issue is in backlog stage.\n\nQuestion: Why can't I edit the Reported By field in a ticket?\nAnswer: If the ticket came from the Customer Portal, having multiple contacts in the Reported By field (or even changing the one contact) is not currently supported, due to the way messaging works in the portal. \n\nQuestion: Can we add additional client users as subscribers?\nAnswer: We don't permit external members to be subscriber directly, but you can include them as 'reported by' individuals. You can communicate with them through customer messages. Once the 'reported by' field is filled, updates can be posted in the customer messages tab, ensuring they stay notified. Additionally, you have the option to add multiple individuals as 'reported by'.\n\nQuestion: Will enabling the 'Enable custom MAIL FROM domain' option and adding the required MX record interfere with my existing mail if I have other MX records under this domain?\nAnswer: No, enabling the 'Enable custom MAIL FROM domain' option and adding the required MX record should not interfere with your existing mail even if you have other MX records under this domain. However, for SPF records, if you already have any SPF record you should merge the SPF records.\n\nQuestion: Is the SDK available in JavaScript?\nAnswer: As of now the SDK is supported in Typescript only.\n\nQuestion: Why am I getting a Bad request when using a curl command to create a work item?\nAnswer: You need to pass the ID of part in 'applies_to_part', and ID of user in 'owned_by'. The IDs look like : 'don:identity:dvrv-us-1:devo/####:devu/###'.\n\nQuestion: Do you have a responsive web panel or do I need to install an iOS app?\nAnswer: We do have a responsive design for our chat widget interface. You do not need to install an iOS app.\n\nQuestion: Can I use the agent\u2019s first name when sending outbound emails?\nAnswer: Yes, the name associated with the from address is configurable in the email composer.\n\nQuestion: Can all data available via API be surfaced via webhooks?\nAnswer: Yes. The objects returned by the webhook will match those returned by the API. You can subscribe to various webhook events as detailed on the developer page.\n\nQuestion: How can I convert a conversation into a ticket?\nAnswer: If you want to create a ticket and automatically have it linked to a conversation you can go to the conversation -> details -> link ticket -> new ticket and create a new ticket that will automatically be linked to the conversation. You can link multiple conversations to the same ticket.\n\nQuestion: How can I initiate a conversation with a client's employee who is in our contacts?\nAnswer: There is no direct way to initiate the conversation. However, you can initiate a conversation with the contacts by creating a ticket.Our Team is currently working on a feature to initiate the direct conversation with the contacts\n\nQuestion: Why is the first response SLA still ticking even after a response from my team?\nAnswer: This could be due to accumulated lag in the system which is causing delay in processing the events. This lag will be consumed soon and you should see the ticket in the right state.\n\nQuestion: How can I get more details for adoption of the solution?\nAnswer: Please help us with your email. Our team will get in touch with you and have the details sent over!\n\nQuestion: Where can I find the workflow builder?\nAnswer: The workflow builder should be available in your settings page.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-1",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 11 QnAs",
        "content": "Question: How can Dev Rev help for customer support?\nAnswer: DevRev can help with customer support by providing a platform for efficient and effective communication between customers and support teams. The Support app in DevRev allows customers to initiate conversations with support staff through various channels like live chat, email, WhatsApp, or Slack. These conversations are not limited to just support staff but are accessible to everyone in the dev org through the PLuG inbox. By linking support conversations with relevant work items like tickets, DevRev preserves context and ensures that important details are not lost. This context helps define the problem and requirements for anyone working on the issue. Additionally, support conversations are associated with rev parts, tying them to the overall product context. The platform also provides service-level metrics like time to response, which helps in monitoring and improving the support process. Overall, DevRev enables better coordination and collaboration between customers and support teams, leading to improved customer support experiences.\n\nQuestion: What issues can cause a 400 bad request error when using the account update API?\nAnswer: The 400 bad request error can be caused by incorrect values in the request. For example, the 'owned_by' field or the 'id' field might be incorrectly populated. The 'id' should be of the form 'don:identity:dvrv-us-1:devo/1i8nhR7:account/<account-id>'.\n\nQuestion: Is it planned to translate the solution into German?\nAnswer: We have plans to bring other languages to our product so that customers could use it in their own localized language. We are planning on adding more languages in second half of the year and potentially German as well.\n\nQuestion: Is it possible to add a custom webhook URL in the configuration tab while installing Flow?\nAnswer: It is not directly possible to add a webhook URL in the configuration tab. However, it might be possible with the help of APIs.\n\nQuestion: Is there a way to undo an accidental merge?\nAnswer: No, currently we do not support undoing a merge or promotion of a part.\n\nQuestion: Why is my chatbot reading and answering inconsistently based off a resource document I added?\nAnswer: Improving the intelligence of the bot is one of our major efforts. If you're finding that it has gaps with certain questions, you can supplement its knowledge base by providing Question & Answers that are more targeted to specific queries. We are also continuously working to improve on the consistency such that the bot is able to answer better with different rephrased queries.\n\nQuestion: Why does a user show up multiple times in the 'reported by' field?\nAnswer: The duplicate users are being generated by different mechanisms: in one case the creator was a Dev user within your org, which means it was likely created manually or via CSV-import, and in the other case it was system-generated which would be through Airdrop or snap-in. There's currently no restriction that Rev users' emails must be unique, but it'll be used to deduplicate Rev users in the future.\n\nQuestion: Can I create a contact directly from the Reported By field?\nAnswer: Currently, there is no direct way to create a contact from the 'Reported By' field. However, there is an easier creation process being worked on for users to be added to those fields.\n\nQuestion: Why is a user able to raise a ticket via the high fare button even though they are not in Salesforce or DevRev?\nAnswer: This could be due to the user having undue access to the platform. The user should not have been able to raise the ticket if they are not in Salesforce or DevRev.\n\nQuestion: Is there a way to see a pre-recorded demo?\nAnswer: Yes, you can view a pre-recorded demo at this link: https://www.youtube.com/watch?v=FGlR9oSlSMM. You can also request a free demo at this link: https://devrev.ai/request-a-demo.\n\nQuestion: Why am I not authorised to create Quotes?\nAnswer: You might not have the necessary permissions. You need to be a commerce admin to create Quotes.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-10",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 12 QnAs",
        "content": "Question: Can DevRev and PLuG be available in languages other than English?\nAnswer: Currently we do not support internationalisation in different languages for the DevDev app. We do have this planned in our roadmap for the future. \n\nHowever, we do have a way in which we can configure the PLuG Widget only in German language for you. The DevRev app would still be in English for now so if your team is comfortable with that, we can go ahead and help with this. \n\n\nQuestion: Is there a snap-in other than the email snap-in that should be used for integrating with Gmail?\nAnswer: The Gmail snap-in has been deprecated. You can use the Email Integration snap-in available on the marketplace for integrating with Gmail. Please refer to the documentation for detailed steps.\nhttps://docs.devrev.ai/integrations/email\n\nQuestion: When in the Marketplace, I'm not seeing a Gmail app, as the docs say. I only see an 'Email' app. Am I missing something?\nAnswer: The Gmail snap-in has been deprecated. You can use the Email Integration snap-in available on the marketplace instead. If you have any further questions, please let us know.https://docs.devrev.ai/integrations/email\n\nQuestion: When will you be able to implement the ability to build a custom chatbot?\nAnswer: We're currently working on this feature, but we don't have an exact timeline for its implementation. \n\nQuestion: Do you have plans to introduce the ability to build a custom chatbot?\nAnswer: We're developing a feature for customizing bot responses, different from what you might have seen elsewhere. Unlike traditional rule-based systems, which can become complex and are limited to pre-set responses, our approach focuses on flexibility. You'll be able to set up scenarios, guiding the bot on how to respond or act. This includes not just replying but also gathering information or creating tickets.\n\nQuestion: How do the P1 (etc) policies work in practice?\nAnswer: The P1, P2, P3, etc. policies determine the priority order in which the SLA policies are applied. If a ticket or conversation satisfies the conditions of multiple policies within the same SLA, the system will choose the higher priority policy.\n\nQuestion: Is there a reason we cannot select P1, P2, or P3 as the type when adding SLA policies?\nAnswer: P1, P2, P3 etc are priorities of the SLA policies and not attributes of the ticket/conversation themselves. They express the priority order in which the policy gets applied in case there are overlapping policies. This is useful when there might be a ticket or a conversation that satisfies the conditions of two policies within an SLA. The system will then choose the higher priority policy.\n\nQuestion: Why are the holidays in my org schedule bumped to 1 day prior to what I selected?\nAnswer: This issue may occur if the dates are being displayed in UTC instead of your local timezone. Please make sure that your timezone settings are correctly configured.\n\nQuestion: How seriously do you take the security of your business and users?\nAnswer: We take the security of our business and users seriously. If you have any concerns or suggestions on how we can improve our security, please feel free to share.\n\nQuestion: Do you have a security reward program?\nAnswer: No, we don't currently have a security reward program.\n\nQuestion: Is it possible to change the identified user session after the SDK has been initialized?\nAnswer: Yes, you can change the identified user session after the SDK has been initialized. You can use the 'Shutdown' method to close the widget and then reinitialize it with a different user session token.\n\nQuestion: How complicated of messages can Turing handle?\nAnswer: Turing can handle questions as long as it has appropriate information to answer in its knowledge base. It's also able to learn from Q&As and create new ones, so it can answer this question by itself in the future.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-11",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 11 QnAs",
        "content": "Question: Is there a feature to filter tickets by severity (priority) in the customer portal?\nAnswer: Currently we do not have a feature to filter tickets by severity in the customer portal. You can contact the support team if you want this feature enabled.\n\nQuestion: How can I remove the article link from the responses?\nAnswer: To remove the article link from the responses, you have a few options:\n\n1. Disable Turing auto suggest mode, but this will disable the feature completely.\n\n2. Mark the article as Internal, but this will prevent it from being used for responses.\n\n3. Use the Turing API to craft your response without using the article variable.\n\n4. Request the support team to turn on a feature flag to remove the article link for all responses.\n\nQuestion: What should I do if I encounter a bug in the portal?\nAnswer: If you encounter a bug in the portal, please report it to the support team. They will investigate and work on fixing it as soon as possible.\n\nQuestion: Why am I getting an error when clicking on tickets in the search results?\nAnswer: If you are getting an error when clicking on tickets in the search results, it could be a technical issue. Please report this to the support team for further investigation.\n\nQuestion: Can I export enhancements from DevRev?\nAnswer: Currently, it is not possible to export enhancements from DevRev.\n\nQuestion: How can I apply for a job?\nAnswer: You can visit <https://devrev.ai/careers> to look for relevant job openings, and apply.\n\nQuestion: We keep getting strange errors when trying to connect our Gmail accounts for email support. Can you help us connect our email to this account?\nAnswer: To connect your Gmail accounts for email support, please follow these steps:\n\n1. Open the DevRev app and go to Settings > Integrations > Connections.\n2. Click on the \"+ Connection\" button in the top-right corner.\n3. Select \"Google\" as the integration and enter a name for your connection.\n4. Enable the option to make the connection available to your dev org.\n5. Click on \"Continue with Google\" and sign in with your organization's Gmail account.\n6. Grant DevRev additional access to your Google account when prompted.\n7. Once the connection is created, go to Settings > Snap-ins in DevRev.\n8. Click on \"Explore Marketplace\" in the top-right corner.\n9. Scroll down and find the Gmail snap-in, then click on \"Install\".\n10. Enter your organization's email address in the \"Your support email address\" field.\n11. If the domain name is not registered in the app, you can add it to the \"Domain allow list\" to create conversations in a new state.\n12. Optionally, you can specify a signature (plain text or HTML) to append to outgoing emails from the support address.\n13. Click \"Next\" to proceed.\n14. In the \"Google OAuth Connection\" section, select the connection you created earlier.\n15. If you are using Google Groups to send emails, add your support address as a member of the Google Group.\n16. A forwarding email address \"@hooks.devrev.ai\" will be displayed. Add this as your forwarding address in your support Gmail account.\n17. Follow the instructions to confirm the forwarding address and complete the setup.\n\nIf you encounter any further issues or have any other questions, please let us know.\n\nQuestion: Is the devrev SLA within the tool itself visible to customers or only to the internal team?\nAnswer: The devrev SLA within the tool itself is visible only to the internal team.\n\nQuestion: Are SLAs visible to customers or only to our internal team?\nAnswer: SLAs are visible only to your support team within devrev.\n\nQuestion: Can I search customer accounts by name?\nAnswer: Yes, you can use the global search feature to search customer accounts by name. Press Cmd + K or use the search bar above the left navigation.\n\nQuestion: What should I do if the link to the article is not working?\nAnswer: If the link to the article is not working, please reach out to our support team and let them know about the issue. They will investigate and work on resolving it.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-12",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 14 QnAs",
        "content": "Question: Why is the link to the article not working on the customer portal?\nAnswer: There might be a bug on our end causing the link to not work. please reach out to our support team and let them know about the issue. They will investigate and work on resolving it.\n\nQuestion: Are there plans to implement the ability to choose card colors in the PLuG widget?\nAnswer: We do not have this option currently \n\nQuestion: Is there an option to introduce greater customization for cards in the PLuG widget?\nAnswer: You can configure the look of your PLuG widget by navigating to Settings > Support > PLuG Settings > Styling and Layout Tabs. \n\nAdditionally, you can add your own card via Settings > Support > PLuG Settings > Layout through the settings icon on the top-left corner, then clicking on Add a Card.\n\nIn the title and description for the Card you can add emojis. DevRev also provides a sandbox for PLuG customization.\n\nQuestion: Is it possible to set up automatic styling for PLuG?\nAnswer: Currently, there is no 'automatic' theme for the PLuG widget. However, you can customize the widget based on how users are viewing your website/product in light/dark mode by passing on information to the PLuG Widget SDK.\n\nQuestion: How do I change the tiers for our customers?\nAnswer: Unfortunately, it's not possible to change the names of the tiers for customers at the moment. \n\nQuestion: Can you provide a sample payload to create an article?\nAnswer: Sure! Here is a sample payload to create an article:\n\n```\ncurl --location 'https://api.devrev.ai/articles.create' \\\n--header 'Authorization: <PAT>' \\\n--header 'Content-Type: application/json' \\\n--data '{\n    \"applies_to_parts\": [\"don:core:dvrv-us-1:devo/<org>:product/<id>\"],\n    \"title\": \"test article\",\n    \"resource\": {\n        \"url\": \"www.example.com\"\n    },\n    \"owned_by\": [\"don:core:dvrv-us-1:devo/<org>:devu/<id>\"],\n    \"authored_by\": [\"don:core:dvrv-us-1:devo/<org>:devu/<id>\"],\n    \"status\": \"draft\"\n}'\n```\n\nPlease note that the fields \"owned_by\", \"authored_by\", and \"status\" are required in the payload.\n\nQuestion: What is the URL to create an article?\nAnswer: The URL to create an article is `https://api.devrev.ai/articles.create`. The devrev instance will be derived from the access token in the `Authorization` header of the request. You should not include the slug of your instance in the request URL.\n\nQuestion: Can you put devrevs dashboards in a separate application with the api?\nAnswer: Yes, you can put devrevs dashboards in a separate application using the API.\n\nQuestion: What is the difference between Tickets, Issues, Enhancements?\nAnswer: Tickets are support related and directly linked to customers or prospects. Issues are work items for developers and can be linked to tickets. Enhancements are specific work, either towards a new feature or an enhancement to an existing feature.\n\nQuestion: Do you offer any option like on-prem hosting?\nAnswer: We currently do not offer on-prem hosting.\n\nQuestion: Can Devrev access my codebase whenever they want?\nAnswer: DevRev does not access the client codebase whenever desired. Data processing is limited to referencing code commits and other event-based actions to link with work items on DevRev.\n\nQuestion: Can I edit SLA policy drafts?\nAnswer: Currently, it is not possible to edit SLA policy drafts. However, we are actively working to improve this experience.\n\nQuestion: Can DevRev use an article to learn the content and advise answers?\nAnswer: Yes, DevRev can use an article to learn the content and advise answers.\n\nQuestion: How can I export my DevRev Tickets to a CSV?\nAnswer: To export your DevRev Tickets to a CSV, go to the Tickets section and click on 'Actions'. From there, choose to export as CSV.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-13",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 10 QnAs",
        "content": "Question: Can you please tell me the steps to install and use the SnapIn?\nAnswer: Sure! Here are the steps to install and use the SnapIn:\n1. Go to the marketplace link: <https://marketplace.devrev.ai/bulk-ticket-uploader>\n2. Click on the install button.\n3. On the redirected page, click on install.\n4. On the redirected page, click on deploy snap-in.\n5. Now, go to the DevRev app home and go to the tickets section to open any ticket.\n6. In the comment box, type `/upload_tickets` and send the comment.\n7. A form should come up asking you to upload your files.\n\nQuestion: Can I import all tickets data in excel with their priority and current status?\nAnswer: Yes, you can import all tickets data in excel with their priority and current status using the SnapIn provided by DevRev. You can find more details on how to use it in the marketplace link: <https://marketplace.devrev.ai/bulk-ticket-uploader>\n\nQuestion: How to setup Gmail integration in DevRev?\nAnswer: To set up the Gmail integration in DevRev, please follow these steps:\n\n1. Open the DevRev app and go to Settings > Integrations > Connections.\n2. Click on the \"+ Connection\" button in the top-right corner.\n3. Select \"Google\" as the integration and enter a name for your connection.\n4. Enable the option to make the connection available to your dev org.\n5. Click on \"Continue with Google\" and sign in with your organization's Gmail account.\n6. Grant DevRev additional access to your Google account when prompted.\n7. Once the connection is created, go to Settings > Snap-ins in DevRev.\n8. Click on \"Explore Marketplace\" in the top-right corner.\n9. Scroll down and find the Gmail snap-in, then click on \"Install\".\n10. Enter your organization's email address in the \"Your support email address\" field.\n11. If the domain name is not registered in the app, you can add it to the \"Domain allow list\" to create conversations in a new state.\n12. Optionally, you can specify a signature (plain text or HTML) to append to outgoing emails from the support address.\n13. Click \"Next\" to proceed.\n14. In the \"Google OAuth Connection\" section, select the connection you created earlier.\n15. If you are using Google Groups to send emails, add your support address as a member of the Google Group.\n16. A forwarding email address \"@hooks.devrev.ai\" will be displayed. Add this as your forwarding address in your support Gmail account.\n17. Follow the instructions to confirm the forwarding address and complete the setup.\n\nYou can find more information in [Gmail for conversations | Documentation](https://docs.devrev.ai/integrations/gmail)\n\nQuestion: Can we add more columns to sort after a search?\nAnswer: Yes, we can add more columns to sort after a search. This will provide more options for sorting and make it easier to choose from a long list of tickets.\n\nQuestion: How can I locate the sprint board?\nAnswer: You can locate the sprint board on the main left navigation bar in the app.\n\nQuestion: How can I set up a card in the PluG widget?\nAnswer: To set up a card in the PluG widget, go to Settings -> PluG Settings -> Layout section. There you can add articles and see the preview as well.\n\nQuestion: Is there any way on DevRev to show a release note about our newly launched product features to our customers?\nAnswer: Yes, you can use the PluG widget in DevRev to configure new articles or other release information to share with end customers visiting your website.\n\nQuestion: How can I set notifications when an active chat has started?\nAnswer: To set notifications when an active chat has started, you can @ mention the person you want to notify while chatting on the PLuG widget.\n\nQuestion: How can I request a invitation letter?\nAnswer: You can request here by filling this form: https://docs.google.com/forms/d/13UhQkzToy9rr4Zv0am1w4JLvoCRnr9S9t-lYI6dbzHY/edit\n\nQuestion: How can I report potential security issues in the application?\nAnswer: Please write to security@devrev.ai for additional correspondence.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-14",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 11 QnAs",
        "content": "Question: Why I am not able to create a ticket in a private Slack channel?\nAnswer: You should be able to create tickets from any channel in slack.\n\nQuestion: Can you please tell me the steps to import tickets data into Excel?\nAnswer: To import tickets data into Excel, you can use the SnapIn bulk ticket uploader. Here are the steps:\n1. Install the SnapIn from the DevRev marketplace: https://marketplace.devrev.ai/bulk-ticket-uploader\n2. Open the SnapIn and follow the instructions to connect it to your DevRev account.\n3. Once connected, you can select the tickets you want to import and choose the option to export them to Excel.\n4. The exported Excel file will contain the ticket data including their priority and current status.\n\nQuestion:  https://docs.devrev.ai/plug/install#setup-for-html \nIs everything in this documentation link correct?\n\nAnswer: Yes, the information in the documentation link is correct.\n\nQuestion: Do I have to provide my email?\nAnswer: No, you do not have to provide your email to connect with our team. Please wait while one of our team members get back. \n\nQuestion: When will the feature to add articles to the help center directly in DevRev be available?\nAnswer: The feature to add articles to the help center directly in DevRev is still under development.\n\nQuestion: How can we import documentation powered by Mintlify into DevRev?\nAnswer: You can import the documentation webpages into DevRev using the Smart Import KB Snap-in. However, for documentation powered by Mintlify, the snap-in will not be able to crawl through the links, so you would need to sync each link separately. Alternatively, you can provide us with your docs webpage link and DevRev PAT Token, and we will set this up for you.\n\nQuestion: Can we point the AI chatbot to a specific set of content to train on for responses?\nAnswer: Yes, you can feed in your documentation and have the bot answer based on that. You can access this feature by going to Settings -> Turing Answers and following the instructions on that page to provide your knowledge base articles and enable the feature.\n\nQuestion: I am having trouble adding new users to my account. What should I do?\nAnswer: If you are having trouble adding new users to your account, there could be two possible issues. First, you might be having a hard time finding where you can invite people to your organization. Second, the issue could be with the invite process itself. To resolve the first issue, you can check the settings or account management section of your account to find the option to invite users. If you are still unable to locate it, you can refer to the user manual or contact our support team for assistance. If the issue is with the invite process itself, please provide more details about the error or problem you are facing so that we can help you troubleshoot it.\n\nQuestion: Is there a way to manually scroll through the testimonials?\nAnswer: Yes, we will add left and right arrows to allow manual scrolling through the testimonials.\n\nQuestion: Can the default view in the vista be changed to show 'Group' instead of 'Owner'?\nAnswer: Yes, we can update the default view of the vista to show 'Group' instead of 'Owner'.\n\nQuestion: How do I update the default copy of the vista?\nAnswer: To update the default copy of the vista, you can follow these steps:\n\nOpen the vista that you want to update.\n\nMake the necessary changes to the vista, such as adding or removing columns, changing filters, or modifying the sorting order.\n\nOnce you have made the desired changes, click on the \"Save\" button or the equivalent option to save the changes.\n\nYou will be prompted to provide a name for the updated vista. You can either choose to overwrite the existing default copy or give it a new name.\n\nSelect the option to update the default copy of the vista.\n\nConfirm the update by clicking on the appropriate button or option.\n\nAfter following these steps, the default copy of the vista will be updated with your changes.\n\nHelpful?\n\n"
    },
    {
        "id": "devrev-dev0-qnas-15",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 14 QnAs",
        "content": "Question: I'm looking at ISS-2 in my initial account. I assume this is pre-loaded. The text says, 'To invite your teammates, simply click on the smiley face \ud83d\ude42 icon on the bottom left screen and click on Invite users.' There is no smiley face icon in the bottom left. ??\nAnswer: The onboarding experience has slightly changed and the default instructions have not been updated yet. To invite teammates, you can do it by going to settings > users.\n\nQuestion: Why is the PLuG widget not working in one of my organizations?\nAnswer: If the PLuG widget is not working in one of your organizations, please make sure you have followed the installation process correctly and that the plugSDK is initialized properly. If the issue persists, please reach out to our support team for further assistance.\n\nQuestion: Why am I getting an error when trying to add a connection to Gmail in Snap-ins?\nAnswer: If you are getting an error when trying to add a connection to Gmail in Snap-ins, please make sure you have entered the correct connection name and domain. If the issue persists, please reach out to our support team for further assistance.\n\nQuestion: How do I toggle/open the PLuG widget?\nAnswer: To toggle/open the PLuG widget, you need to call the window.plugSDK.toggleWidget(true) function.\n\nQuestion: Where should I install the PLuG SDK code?\nAnswer: You should install the PLuG SDK code in the <body> tag of your webpage.\n\nQuestion: How do I initialize the PLuG SDK?\nAnswer: To initialize the PLuG SDK, you need to add the following code snippet to your website: window.plugSDK.init({ app_id: <INSERT_YOUR_APP_ID_HERE> }); Make sure to replace <INSERT_YOUR_APP_ID_HERE> with your actual app ID.\n\nQuestion: Why is the PLuG widget not opening on my website?\nAnswer: There could be several reasons why the PLuG widget is not opening on your website. Make sure you have followed the installation process correctly and that the plugSDK is initialized before calling the toggleWidget function. If you are still facing issues, please reach out to our support team for further assistance.\n\nQuestion: How do I close a PLuG window on my website?\nAnswer: To close a PLuG window on your website, you need to call the window.plugSDK.toggleWidget(false) function.\n\nQuestion: How do I open a PLuG window on my website?\nAnswer: To open a PLuG window on your website, you need to call the window.plugSDK.toggleWidget(true) function.\n\nQuestion: Is the product compatible with Flutter technology?\nAnswer: Yes, DevRev is compatible with Flutter technology. DevRev is a platform that can be used to manage and track software development projects, regardless of the technology stack being used. Whether you are working on a project using Flutter, React Native, Java, or any other technology, DevRev can help you organize your work, collaborate with your team, and track progress.\n\nQuestion: How can I get pricing information for the product?\nAnswer: To get pricing information for the product, you can schedule a call with our team next week to discuss your requirements in detail. Visit the following link For details.\nhttps://devrev.ai/pricing\n\nQuestion: Is there any software developer job vacancy?\nAnswer: You can check if you fit any of the jobs we're looking for right now at <https://devrev.ai/careers> and contact us through a form there.\n\nQuestion: whats the pricing of devrev?\nAnswer: We have 3 plans tailored for your team's needs, please find the below details.\n\n**Starter:**\n- For small teams, up to 15 users.\n- Try for 45 days free.\n\n**Pro:**\n- Suitable for teams growing and scaling their product.\n- Try for 45 days free.\n\n**Ultimate:**\n- Designed for advanced and complex organizations.\n\nPlease refer to our pricing page - https://devrev.ai/pricing. If you require more information kindly write us to sales@devrev.ai.\n\nQuestion: How can I change my org name? How can I rename it?\nAnswer: You can change your org name by navigating to 'Settings' > 'General' and Please click on 'edit' option to rename the org\n\n"
    },
    {
        "id": "devrev-dev0-qnas-16",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 18 QnAs",
        "content": "Question: What is flow?\nAnswer: Flow is a feature that allows users to create custom workflows and automate processes within the system.\n\nQuestion: What is Turing bot?\nAnswer: Turing bot is an AI-powered bot that can assist with common support queries and provide automated responses.\n\nQuestion: What is Turing?\nAnswer: Turing is a feature that uses artificial intelligence to automate responses and provide support to customers.\n\nQuestion: What is timeline?\nAnswer: The timeline is a feature that displays a chronological view of events and updates related to an issue or project.\n\nQuestion: Where can I see my previous issues?\nAnswer: You can see your previous issues in the issue list or by using the search functionality to filter and find specific issues based on your criteria.\n\nQuestion: Where can I see/view the completed issues?\nAnswer: You can view the completed issues in the issue list by applying the stage filter 'complete'. Alternatively, if the issues are attached to a sprint board, you can also apply the stage filter in the sprint vista.\n\nQuestion: What is flow?\nAnswer: Flow refers to the sequence of steps or actions that need to be followed to complete a task or process within the system.\n\nQuestion: What is Turing bot?\nAnswer: Turing Bot is an AI assistant created by DevRev. It is designed to help users with various tasks and queries by providing relevant information and performing specific functions.\n\nQuestion: What is Turing?\nAnswer: Turing is a feature that uses artificial intelligence to automate responses and provide support to customers. It is an AI-powered system that can understand and respond to user queries, helping to provide efficient and accurate support.\n\nQuestion: What is timeline?\nAnswer: The timeline is a feature that displays a chronological view of events and updates related to an issue or project.\n\nQuestion: How do I get access to aws partner central?\nAnswer: Please visit https://partnercentral.awspartner.com/partnercentral2/s/SelfRegister and self-register\n\nQuestion: I am using the web SDK and the chat widget opens in an internal browser within the app. What should I do?\nAnswer: If you are using the web SDK and the chat widget opens in an internal browser within the app, please provide more details about the issue to our support team. They will investigate and provide a solution.\n\nQuestion: The chat widget crashes in the mobile app. What could be the issue?\nAnswer: If the chat widget crashes in the mobile app, it could be due to a bug. Please report the issue to our support team and they will assist you further.\n\nQuestion: I am facing issues while customising the PLuG. What should I do?\nAnswer: If you are facing issues while customizing the PLuG, it could be due to a bug related to the Session Recording settings. As a workaround, you can enable session recording, make your changes, and then publish. After that, you can disable session recording if you don't want it.\n\nQuestion: Is it possible to receive push notifications for multiple organizations on an iOS device?\nAnswer: A user can only be logged in into a single organization at a time and receive push notifications in the iOS app only for the currently active organization.\n\nQuestion: Can the PLuG widget be translated into Polish?\nAnswer: Yes, we can translate all the fixed items on the PLuG Widget into Polish language.\n\nQuestion: Do you plan to add the capability to add articles to the knowledge base, not just links?\nAnswer: We are working on it and will soon roll out the first version which will allow you to write articles directly from the app.\n\nQuestion: I received a message saying that a ticket has been opened for my issue. What should I expect next?\nAnswer: Once a ticket has been opened, all future updates regarding your issue will be shared via the ticket. You can reach out to us if you need any further assistance.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-17",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 13 QnAs",
        "content": "Question: I entered '/devrev help' in the Slack channel, but nothing appears. What could be the issue?\nAnswer: If the command is not working, it means that the Snap-in is not configured correctly. Please check the Snap-ins settings in your account and ensure that it is active and the channel names are added with notifications enabled.\n\nQuestion: I have set up the connection with Slack and entered the Slack channel ID, but I am not receiving notifications. What should I do?\nAnswer: Please make sure that you have invited the DevRev app to the Slack channel by using the command '/invite @devrev'. If the channel is public, this step may not be necessary.To invite the DevRev Bot to a private Slack channel, you can use the /invite @devrev command. Simply type \"/invite @devrev\" in the message composer of the private channel and send the message. This will invite the DevRev Bot to the channel, allowing it to post notification messages and provide its functionality within the channel. \n\nQuestion: Is there a way to put a template to an issue?\nAnswer: Currently, there is no direct way to provide a template for filing new issues in Devrev. However, there are multiple workarounds that can be explored. We have raised a feature request for this and will update you once we have more information.\n\nQuestion: Where is the best place to store the template for creating an issue?\nAnswer: The best place to store the template for creating an issue is in a markdown file. This allows you to easily load different templates based on the issue type or tag.\n\nQuestion: Is there a customizable issues template we can use?\nAnswer: Yes, you can use customizable issues templates. You can store the templates in a markdown file and load different templates based on the issue type or tag.\n\nQuestion: Can I view a log of activity for a conversation?\nAnswer: We do not have a log of activity for conversations in the UI. However, we are considering adding an events timeline feature. This would allow agents to see the history of changes made to a conversation. Would you be interested in this feature?\n\nQuestion: How can I see who archived a conversation or made changes to it?\nAnswer: Currently, we do not show the events timeline in the conversation UI. However, we have a public API that can provide access to the events timeline. Would you like to know more about it?\n\nQuestion: Will refreshing the page reset the session?\nAnswer: Yes, refreshing the page will reset the session\n\nQuestion: How can we clear out a session after user logs out?\nAnswer: You can call shutdown method which is close the plug widget and also remove user session \n\n\nExample: \nawait window.plugSDK.shutdown();\n\nQuestion: Can I set one user as the default owner for all conversations in the DevRev app?\nAnswer: Yes, you can set one user as the default owner for all conversations in the DevRev app. This can be done by setting up custom routing for the owners of the conversations. This allows you to configure the default owner regardless of the source or other parameters.\n\nQuestion: How can I check who is the default owner of customer conversations in the DevRev app?\nAnswer: To check the default owner of customer conversations in the DevRev app, you need to login into the web platform and go to the inbox. There, you will be able to see the conversations and who is assigned as the owner.\n\nQuestion: I am not receiving notifications on the DevRev mobile app. How can I enable them?\nAnswer: To enable notifications on the DevRev mobile app, you need to go to your phone settings and allow notifications for the app. However, if you are not seeing a settings tab in the app, you can try checking the web platform to see if you receive updates about the conversations there.\n\nQuestion: Why is the close (x) button only visible in PLuG when I'm not in a conversation?\nAnswer: The close (x) button is currently only visible in PLuG when you are not in a conversation. However, we have received feedback regarding this and we are working on allowing the close button to be visible even inside a conversation.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-18",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 11 QnAs",
        "content": "Question: How can I create collections and build my knowledge base in DevRev?\nAnswer: To create collections and build your knowledge base in DevRev, follow these steps:\n\n1. Log in to your DevRev account.\n2. On the left-hand side menu, click on \"Knowledge Base\".\n3. Click on the \"Create Collection\" button.\n4. Enter a name for your collection and click \"Create\".\n5. Once the collection is created, you can click on it to open it.\n6. To add articles to the collection, click on the \"Create Article\" button.\n7. Enter a title for your article and start adding content.\n8. You can format the text, add images, and embed videos using the available options in the editor.\n9. Once you have finished creating the article, click on \"Save\" to save your changes.\n\nYou can repeat these steps to create multiple collections and articles within each collection to organize your knowledge base effectively.\n\nQuestion: When I click on Upload Articles, nothing prompts. What should I do?\nAnswer: If you are experiencing this issue, please try dragging and dropping the files into the drop box or clicking on the add articles button through the upload icon. If the issue persists, please provide a video of the scenario so that our team can investigate further.\n\nQuestion: How can I delete a sprint board?\nAnswer: To delete a sprint board, you need to be the owner of the board. If you are not the owner, you can ask an admin to delete it for you. The owner can delete the board by clicking on 'Remove Access'. If you are still facing issues, you can try deleting it via the API using the endpoint /internal/vistas.delete.\n\nQuestion: Why does the works-list API not have the created_date filter?\nAnswer: The works-list API does not have the created_date filter because it is not exposed. We will share your feedback with the respective stakeholder and update our documentation.\n\nQuestion: How can I build an integration for Devrev with other SaaS applications?\nAnswer: You can create snap-ins on top of DevRev to integrate with a SaaS tool of your liking. The link <https://docs.devrev.ai/snap-ins/concepts> explains the concepts and steps involved in creating a snap-in. Here are some example code samples of a snap-in - <https://docs.devrev.ai/snap-ins/examples/samples>\n\nQuestion: Can ticket generation updates appear in the conversation as well?\nAnswer: Yes, ticket generation updates can appear in the conversation. You can use the 'Convergence' snap-in to automate the process of sending an update to the customer when a ticket is linked to the conversation.\n\nQuestion: I didn't receive any prompt or invite for my organization. What should I do?\nAnswer: If you didn't receive a prompt or invite for your organization, please let us know so that we can fix the issue. You can reach out to us for assistance.\n\nQuestion: Why do I need to click on the invite to access my organization?\nAnswer: Clicking on the invite is necessary in certain use cases to ensure a smooth navigation to your organization. Please refer to this thread for more information: <https://devrev.slack.com/archives/C01EMSNV6FN/p1696330679114079>\n\nQuestion: I created a new organization but I can't access it. What should I do?\nAnswer: If you have created a new organization, you should have received an invite for it on your email. Please click on the invite to navigate to your organization.\n\nQuestion: Why are the items in the navbar not aligned?\nAnswer: The items in the navbar are currently aligned according to the designs. You can contact the support team if you want any changes in the design.\n\nQuestion: Does the DevRev Ticketing Support collect feedback after the closure of a ticket?\nAnswer: Yes, DevRev Ticketing Support collects CSAT feedback on tickets. For more information, please refer https://docs.devrev.ai/automations/csat-tickets.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-19",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 12 QnAs",
        "content": "Question: What is effortless conference?\nAnswer: Effortless is DevRev's Annual Tech Conference\n\nWe believe that tech companies, given their unique challenges, deserve purpose-built solutions, and this event is your space to learn together about all things AI, and all things design to make many things in tech effortless. \n\nJoin us at Effortless 2023 to help shape this future - https://devrev.ai/events/effortless\n\nQuestion: is poitras really nicknamed the dude?\nAnswer: Well, yes and no, he used to have a much bigger beard and have a love for bowling and 70s sweaters, however, as he has \"matured\" he's just known as \"SP\" now...\n\nQuestion: How do I auto-assign users to tickets in DevRev?\nAnswer: DevRev provides suggestions for ticket assignment based on the product associated with the ticket. Additionally, you can configure routing and assignment rules via APIs. For more information, please refer to our documentation or contact our support team.\nhttps://docs.devrev.ai/automations/auto-routing\n\nQuestion: Can I indicate a dependency of a capability on another product?\nAnswer: DevRev does not support indicating a dependency of a capability on another product. The parts/capabilities are expected to be modeled differently. Please refer to the documentation for more information.\nhttps://docs.devrev.ai/product/parts#capability\n\nQuestion: Is there a Telegram integration for support in DevRev?\nAnswer: Currently, DevRev does not have a Telegram integration for support. However, we appreciate your suggestion and will raise it with our product team.\n\nQuestion: How do I integrate GitHub with DevRev?\nAnswer: To integrate GitHub with DevRev, you can follow the steps provided in our documentation: https://docs.devrev.ai/integrations/github#work-automation\n\nQuestion: How can we filter issues using product?\nAnswer: To filter issues using a product, you can use the 'Part' filter located in the '+' icon. Once you select that, you should be able to filter issues using the parts/products you created.\n\nQuestion: I'm experiencing a bug when trying to delete tickets in DevRev. What should I do?\nAnswer: If you are experiencing issues with deleting tickets in DevRev, please report it to our support team. They will investigate and provide a resolution.\n\nQuestion: How can I delete tickets in DevRev?\nAnswer: In DevRev, the recommended action is to bulk *close* the issues. There is no direct option to delete tickets. For more information, please contact our support team.\n\nQuestion: How do I set up email integration with DMARC?\nAnswer: To set up email integration with DMARC, you need to configure DMARC policies and DNS records for your domain. This typically involves creating a DMARC TXT record in your DNS settings with the specified DMARC policy and reporting email address. The exact steps may vary depending on your email service provider and DNS provider. It is recommended to refer to the documentation or support resources provided by your email service provider or DNS provider for detailed instructions.\nhttps://docs.devrev.ai/integrations/email#troubleshoot-dns-record-configuration\n\nQuestion: How do I set up the PLuG widget on my website?\nAnswer: To set up the PLuG widget on your website, you need to follow the installation instructions provided by PLuG. This typically involves adding a script tag or code snippet to your website's HTML code. The exact steps may vary depending on your website platform or CMS (Content Management System). It is recommended to refer to the documentation or support resources provided by PLuG for detailed instructions.\n\nQuestion: Is there a checklist feature?\nAnswer: Yes, there is a checklist feature available in our platform. It allows you to create and manage checklists for tasks or processes. You can add items, mark them as completed, and track progress. For more information on how to use the checklist feature, please refer to our documentation or support resources.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-2",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 13 QnAs",
        "content": "Question: Can the ticket be set to close automatically after 5 days when an engineer changes its status to Resolved?\nAnswer: Yes, the ticket can be set to close automatically after 5 days. You can install the convergence snap-in (https://docs.devrev.ai/automations/converge#workflows) which auto-closes the conversations and configure the resolution delay as intended.\n\nQuestion: What should I do if I get a warning that a DNS record will be replaced or deleted?\nAnswer: You should not have to replace any record in your DNS configuration. Disable the custom mail from address setting in DevRev. Add the cname records that you get as new records in the DNS provider (if not added already) and add the SPF record. If you already have an SPF record, you would need to update the existing SPF record to include the DevRev value.\n\nQuestion: What is the org schedule?\nAnswer: Org schedule is a way for you to model your business hours on DevRev. These can be used then within your SLAs as well.\n\nQuestion: Can we merge events and discussions into one tab?\nAnswer: No, we have two separate tabs `Discussions` and `Events` available on the same window. This allows for easy access of both types of information while also providing for a logical separation to collaborate with the customer. The Discussions tab is focused on conversations whereas, the Events tab mostly contains information related to updates on the object in terms of state changes, ownership etc as well as those from automation, bots, etc.\n\nQuestion: How can I change my profile picture in Devrev?\nAnswer: you can navigate to Settings > Accounts and select Edit Profile > Select Profile Image to update your profile picture.\n\nQuestion: How can I know the DevRev version I am using?\nAnswer: If you are using the web version of DevRev, it is continuously updated and you are always on the latest version. There is no strict versioning (like `1.2.x`) for the web app.\n\nQuestion: Why does the issue stage update from InReview to InDevelopment when I fulfill a PR?\nAnswer: Our github snap-in moves the stage from in-review to in-development because one issue could be fulfilled by multiple PRs. If you would like to close the issue with the PR please include /close #work in the PR description.\n\nQuestion: Is there an automation that can automatically subscribe a person to all issues?\nAnswer: Currently, there is no such automation. However, a snap-in can be built to achieve this. You can refer to the snap-in documentation for guidance.\n\nQuestion: Can the widget copy be customized?\nAnswer: Yes, you can customize the widget copy according to your needs. You can refer to the corresponding documentation for that.\n\nQuestion: Is this tool free?\nAnswer: We do have a startup program for smaller businesses that offer a means to offset costs. For larger deployments and/or companies, it is a paid platform. However, our goal is to ensure we're delivering value that far outweighs the cost.\n\nQuestion: what is your product?\nAnswer: DevRev is a platform that connects the voice of the customer from the front office (sales, customer success, and support) with your product on one end and social, real-time work management on the other. It helps improve customer experience and team productivity by converging the front office with the back office (product management, engineering, and design). For more details, you can refer to the documentation at https://docs.devrev.ai/.\n\nQuestion: Where can I find some public examples for developing my own custom snap-ins?\nAnswer: You can checkout some public examples from DevRev:\nhttps://docs.devrev.ai/snap-ins/examples/samples\n\nQuestion: Can I get the code for CSAT on ticket snap in?\nAnswer: Currently CSAT is not marked to be shareable with everyone, so providing its codebase is not possible.But feel free to checkout some other public examples from DevRev.\nhttps://docs.devrev.ai/snap-ins/examples/samples\n\n\n"
    },
    {
        "id": "devrev-dev0-qnas-20",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 9 QnAs",
        "content": "Question: How do I add a DNS record for Office 365?\nAnswer: To add a DNS record for Office 365, you need to access your DNS management console or control panel provided by your DNS provider. From there, you can create a new DNS record with the required settings specified by Office 365. The exact steps may vary depending on your DNS provider. It is recommended to refer to the documentation or support resources provided by Office 365 or your DNS provider for detailed instructions.\n\nQuestion: How do I use DNS key?\nAnswer: To use DNS key, you need to generate a key pair, configure your DNS server to include the DNS key in the DNS records, and configure DNSSEC on your domain. The exact steps may vary depending on your DNS provider and server software. It is recommended to refer to the documentation or support resources provided by your DNS provider for detailed instructions.\nhttps://docs.devrev.ai/integrations/email#add-dns-records\n\nQuestion: What is DNS key?\nAnswer: DNS key is a cryptographic key used in the DNSSEC (Domain Name System Security Extensions) protocol to sign DNS records and verify their authenticity. It helps prevent DNS spoofing and other attacks.\n\nQuestion: What determines the level of permissions and privileges granted to a group?\nAnswer: The level of permissions and privileges granted to a group is determined by the **roles** assigned or revoked by administrators. These roles, such as create, read, update, and delete, define what actions the group can perform within specific objects or categories, ensuring controlled access and functionality.\n\nQuestion: Who have the authority to configure access for different user groups by assigning or revoking roles?\nAnswer: The authority to configure access for different user groups by assigning or revoking roles is typically given to administrators or privileged users. These individuals are responsible for managing the access control settings and making decisions about which roles or permissions should be assigned to different user groups. They have the authority to create, modify, or delete roles, as well as assign or revoke those roles from users or user groups based on the organization's policies and requirements. It's important to note that the specific authority and responsibilities may vary depending on the system or application being used.\n\nQuestion: Who can invite the users to groups?\nAnswer: The ability to invite users to groups depends on the user's role and permissions within the system.\nAdmins have the ability to invite users to the admin group and the support group.\nSupport users have the ability to invite users to the support group.\nMembers do not have the ability to invite users to any group.\nPlease note that only admins can promote another user to admin, and only admins and support users can invite users to the support group.\u2728 You can find more information in Groups | DevRev Docs\n\nQuestion: Is there anyone who cannot be removed from the respective groups?\nAnswer: Yes, there are certain users who cannot be removed from their respective groups. For example, the super admin or system administrator typically has the highest level of access and control over the platform. They cannot be removed from any group as they have the ultimate authority and responsibility for managing the system.\n\nQuestion: Who can add or remove members from any groups?\nAnswer: **Admins** have the authority to **add or remove members** from any group within the organization. Members within a group can also add new members and remove existing ones. However, owners of groups cannot be removed from their respective groups.\n\nQuestion: who can add a new member in a group?\nAnswer: Members within a group have the ability to **add new members** to the group. Additionally, **admins** possess the capability to add or remove members from any group. However, owners of groups cannot be removed from their respective groups.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-21",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 8 QnAs",
        "content": "Question: Who has the ability to add new members and remove the existing ones in a group?\nAnswer: **Members within a group** possess the ability to **add new members** and **remove existing ones**. Additionally, **admins** have the authority to add or remove members from any group within the organization. Owners of groups, however, cannot be removed from their respective groups.\n\nQuestion: Who can create a new group?\nAnswer: **Only administrators** within the organization have the authority to **create a new group**. This privilege is limited to admins, ensuring that the creation of groups is managed by authorized personnel. Regular users or members do not have this capability.\n\nQuestion: Who are customers in groups?\nAnswer: Customers in the groups context are referred to as the external members of the organization. Any new customer is automatically added to the \"Customers\" group by default. This group includes individuals or entities external to the organization who have a relationship with the organization, such as clients, consumers, or business partners.\n\nQuestion: Who are customers?\nAnswer: Customers are individuals or organizations who use or consume a company's products or services. In the context of DevRev, the customers would be the individuals or organizations that are using DevRev's product.\n\nQuestion: What actions trigger the appearance of the \"\"Save as\" button?\nAnswer: The \"Save as\" button appears in the upper-right corner after you make a change to the default view of an object in the system. Changes can include applying a filter, sorting, grouping, customizing, or applying Smart Clustering (if the object has fewer than 1000 items and is not a conversation). Once you make any of these changes, the \"Save as\" button becomes available, allowing you to save the modified view as a new list with a specific name and description.\n\nQuestion: Where will be the emails that is sent to my organization?\nAnswer: Emails sent to your organization's support email address will be visible in the Support > Inbox section of the DevRev app. This is where all incoming emails are collected and displayed for your team to review and respond to. You can access and manage these emails directly within the DevRev platform, ensuring that all customer inquiries and communication are centralized and easily accessible. \u2728 \nYou can find more information in Gmail for conversations | DevRev Docs\n\nQuestion: how to Configure email forwarding yahoo mail in devrev?\nAnswer: Click Settings > More Settings > Mailboxes.\nClick the primary mailbox account.\nUnder Forwarding, enter the forwarding address @hooks.devrev.ai.\nClick Verify.\nOnce added, an invitation will be sent to the hooks address. The invitation will appear as a conversation in your inbox in the DevRev app. However, please note that the conversation comment might not be rendered correctly as HTML, making the invite button inaccessible directly. To accept the invitation, you'll need to download the email.eml attachment and open it in your preferred mail client. From there, you can click the accept invite button.\n\nYour inbox after email integration\nAny email sent to your organization\u2019s support email address would show up in Support > Inbox.\n\nQuestion: where will we use @hooks.devrev.ai ?\nAnswer: You will use the email address format \"@hooks.devrev.ai\" when configuring email integrations or forwarding emails to DevRev. This email address is specifically designed for email interactions within the DevRev platform. For example, you can set up email forwarding from your existing email provider to your DevRev email address ending with \"@hooks.devrev.ai\". This allows you to manage and respond to emails directly within DevRev, ensuring that all customer communication is centralized and tracked within the platform.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-22",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 9 QnAs",
        "content": "Question: How should be my DNS key?\nAnswer: Some DNS providers automatically append the domain name at the end when adding DNS keys. For example, if your domain is support@example.com ensure that the DNS key is added as support@example.com and not support@example.com.example.com. This duplication can cause validation errors.\n\nQuestion: how to add DNS record for office 365 in devrev?\nAnswer: \"To add DNS records for Office 365 in DevRev, you can follow these steps:\n\nLog in to your DevRev app and go to Integrations > Connections.\nClick on + Connection and select \"\"Email service\"\".\nEnter a connection name and click \"\"Connect\"\".\nIn the Email Domain Configuration box, you will see the DNS records that need to be added to your domain's DNS settings.\nLog in to your Office 365 admin center.\nGo to the \"\"Domains\"\" section and select the domain you want to modify.\nLook for the DNS management or DNS settings option.\nAdd the DNS records one by one, following the instructions provided in the Email Domain Configuration box.\nCopy the \"\"Name\"\" and \"\"Value\"\" from the DevRev app and paste them into the respective fields in your Office 365 DNS management.\nSet the appropriate \"\"Type\"\" for each record.\nSet the \"\"TTL\"\" (Time to Live) as required.\nSave the changes and confirm that the DNS records are now visible in your Office 365 DNS management.\nGo back to your DevRev app and click \"\"Verify\"\" to confirm that the DNS records have been successfully configured.\nPlease note that the specific steps may vary depending on your Office 365 admin center interface or DNS management settings. If you encounter any issues during the DNS record configuration, it's recommended to consult the Office 365 documentation or contact their support for further assistance.\nYou can find more information in Email for conversations | DevRev Docs\"\n\nQuestion: how to add DNS record for yahoo mail in devrev?\nAnswer: \"This section provides a step-by-step guide on adding DNS records for your email provider, ensuring smooth email integration and authentication.\n\nLogin to your Yahoo Domain Control Panel.\nSelect Domain from the toolbar at the top of the page.\nNavigate to TXT records and click Add. Enter the details like \"\"name/host\"\" and \"\"value\"\" in their respective fields as mentioned in the Email Domain Configuration box from the DevRev app.\nGo to A and CNAME Records and click Add.\nUnder Source, enter `www`. Under Destination, enter the \"\"name\"\" provided in the box from the DevRev app.\nClick Submit, and click Submit again when asked.\nClick Verify in your DevRev app.\n\"\n\nQuestion: Is there a checklist feature?\nAnswer: Yes, there is a checklist feature in DevRev. You can create and manage checklists for your tickets.\n\nQuestion: Who are subscribers?\nAnswer: Subscribers in DevRev are team members or users who receive notifications and updates about tickets and issues.\n\nQuestion: Can I create tags?\nAnswer: Yes, you can create tags in DevRev. Tags help in organizing and categorizing your tickets and issues.\n\nQuestion: What is SLA in DevRev?\nAnswer: SLA (Service Level Agreement) in DevRev defines the agreed-upon response and resolution times for customer support tickets. It helps ensure timely and efficient support. You can find more information about SLA in our documentation: https://docs.devrev.ai/product/sla\n\nQuestion: How do I configure SLA?\nAnswer: To configure SLA (Service Level Agreement) in DevRev, you can follow the steps outlined in our documentation: https://docs.devrev.ai/product/sla#create-an-sla\n\n\nQuestion: what does email for conversations snap-ins do?\nAnswer: Connect your support email with DevRev and ensure that your support conversations remain in sync between email and the PLuG support widget. Email integration is a predefined automation that has been used by several organisations. It allows you to manage support conversations that come through email directly from the DevRev PLuG inbox, eliminating the need to manage two inboxes.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-23",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 11 QnAs",
        "content": "Question: What does 'Email for Conversations' snap-ins do?\nAnswer: 'Email Integration' snap-ins allows you to seamlessly integrate email communication into your DevRev conversations. It enables you to send and receive emails within the platform, keeping all communication in one place. The Email integration snap-in works with a variety of email providers, including Google Workspace, Microsoft Outlook, Yahoo Mail, Zoho Mail, and custom domain emails. Once configured, incoming support emails are automatically transformed into a conversation or a ticket, providing a centralized platform for handling, responding to, and tracking customer interactions.\n\nQuestion: How do I configure email forwarding?\nAnswer: To configure email forwarding, you can go to the settings menu and navigate to the 'Email Forwarding' section. From there, you can set up the desired email forwarding rules. For step-by-step instructions, please refer to our documentation provided in the link https://docs.devrev.ai/integrations/email\n\nQuestion: What is DMARC?\nAnswer: DMARC stands for Domain-based Message Authentication, Reporting, and Conformance. It is an email authentication protocol that helps protect against email spoofing and phishing attacks. DMARC allows domain owners to specify how email receivers should handle unauthenticated emails that claim to be from their domain. In DevRev, DMARC is implemented to ensure the security and authenticity of email communications.\n\n\nQuestion: How do I configure email forwarding?\nAnswer: To configure email forwarding in DevRev, you can go to the email settings section and set up the forwarding rules. For more information, please refer to our documentation.\nhttps://docs.devrev.ai/integrations/email#configure-email-forwarding\n\nQuestion: How can I export views?\nAnswer: \"To export views in the DevRev app, follow these steps:\n\n1. Go to the Build section in the app.\n2. Select the desired view (Now, Next, or Later) that you want to export.\n3. In the upper-right corner, click on the \"\"Actions\"\" button.\n4. From the dropdown menu, choose the format in which you want to export the view - either CSV or JSON.\n5. The view will be exported in the selected format, and you can save it to your device or use it as needed.\n\nPlease note that only admins have the ability to save changes to the sprint duration, as mentioned in the provided information.\"\n\nQuestion: How do i auto assign users to tickets?\nAnswer: It is based on the routing rule, at the moment it is configurable via the backend. We would need additional details to have this setup for you, please connect with the team to take it forward.\n\nQuestion: How do I install DevRev CLI in Windows?\nAnswer: You can find the Windows binary on the release page. For more information, please refer to the documentation.\nhttps://docs.devrev.ai/snap-ins/references/cli-install\n\nQuestion: Is this an app specific issue where the articles are just shown as article numbers?\nAnswer: We apologize for any inconvenience. This issue may be specific to the app. Please provide more details or contact our support team for further assistance.\n\nQuestion: I have set up the 'Email Integration with DMARC' but the emails aren't showing up in our DevRev inbox. What could be the issue?\nAnswer: Please make sure you've integrated your email with DMARC as per the instructions outlined in the documentation available at https://docs.devrev.ai/integrations/email#create-a-new-connection\n\nQuestion: Help me troubleshoot problem related to plug install\nAnswer: Please make sure you've installed the plug as per the instructions outlined in the documentation available at https://docs.devrev.ai/plug/install#setup-for-react.\n\nQuestion: How do I see the logs of a snap-in I've deployed in DevRev?\nAnswer: You can see the snap-in logs in the CLI using the command 'devrev snap_in_package logs'. For more information, please refer to the DevRev documentation.\nhttps://docs.devrev.ai/snap-ins/references/cli#logs-for-the-snapin-package\n\n"
    },
    {
        "id": "devrev-dev0-qnas-24",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 14 QnAs",
        "content": "Question: What is the purpose of the 'tags' attribute in the 'works-create' API call?\nAnswer: The 'tags' attribute is used to associate labels with tickets in DevRev. These labels can be any string and can be used to categorize and filter the works in a lightweight way. For more information, please refer to the DevRev API documentation.\nhttps://docs.devrev.ai/api#/operations/works-create\n\nQuestion: What is an artifact?\nAnswer: An artifact in DevRev refers to any item or object that is created or modified during the software development process. It can include source code files, documentation, test cases, design documents, and any other deliverables that are produced as part of the development process. Artifacts are typically stored and managed in a version control system, such as Git, and can be tracked and reviewed to ensure the quality and progress of the development work.\n\nQuestion: What are artifacts?\nAnswer: Artifacts are attached files in DevRev. To attach a file to a ticket, you can use the Artifacts API.\n\nQuestion: What services does DevRev offer?\nAnswer: \nDevRev offers a range of services including software development, product management, data analytics, and AI consulting. We specialize in building custom software solutions, developing AI-powered applications, and providing data-driven insights to help businesses make informed decisions.\n\nQuestion: How can I remove a user from the DevRev app?\nAnswer: To remove a user from the DevRev app, the user's account needs to be deactivated both in the Okta and the DevRev app. Once deactivated, the user should no longer have access.\n\nQuestion: How are sessions persisted on the mobile app?\nAnswer: Sessions on the mobile app are persisted using refresh tokens and access tokens. When the access token expires, it is refreshed. However, until the access is disabled on the backend, there is limited control over this on the mobile app.\n\nQuestion: Is there a security issue with the mobile app for DevRev workspace?\nAnswer: In case you identify any security issues with DevRev app, please report it to security@devrev.ai\n\nQuestion: Is DevRev free?\nAnswer: DevRev is free for a trial period of 45 days. For more information about pricing, please refer to: https://devrev.ai/pricing\n\nQuestion: What should I do if the sign-in button is not working?\nAnswer: If the sign-in button is not working, please try refreshing the page or clearing your browser cache. If the issue persists, please contact our support team for assistance.\n\nQuestion: I am facing problems with the API. How can you help?\nAnswer: You can refer to our API documentation at https://developer.devrev.ai/. If the documentation does not lead you to the solution for your problem, please provide more details about it. This will help us understand the issue better and provide you with the appropriate assistance.\n\nQuestion: How can I change the theme to black or dark in DevRev?\nAnswer: To change the theme to black or dark in DevRev, click on your profile icon on the top left and on the overlay, you will find the theme settings.\n\nQuestion: How can I unlink a ticket in DevRev?\nAnswer: To unlink a ticket in DevRev, go to the linked tickets on the Conversation and click on the 'x' button on the highlighted ticket.\n\nQuestion: What is trails for DevRev?\nAnswer: Trails is an extensible interface that allows you to view and manage your part hierarchy and related items. Think of it like a graph canvas that is rendering linkages between items making them easier to navigate and summarize. For more information, please refer to: https://docs.devrev.ai/product/parts\n\nQuestion: What is trails for DevRev?\nAnswer: Trails is a feature in DevRev that allows you to track and visualize the progress of work items, such as issues or tickets, as they move through different stages or states. It provides a visual representation of the workflow and helps teams stay organized and collaborate effectively. Trails can be customized to match your team's specific workflow and can be accessed from the Trails tab in DevRev.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-25",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 12 QnAs",
        "content": "Question: What is DevRev Slack integration?\nAnswer: With the Slack integration, you can create and view tickets in DevRev from Slack. It also keeps you up-to-date on the tickets progress. It is however currently in limited availability, but will be open broadly in about 4 weeks. For more information please refer to: https://devrev.ai/marketplace/slack-with-devrev\n\nQuestion: Can I create a Jira ticket using DevRev?\nAnswer: You can't directly create a Jira ticket from DevRev, but using the Jira Sync option, you can sync tickets created in DevRev and have them be created in Jira as well. For more information, please refer to: https://devrev.ai/docs/integrations/jira#sync-to-jira\n\nQuestion: Do you have any direct API to create a ticket in DevRev?\nAnswer: The API to create a ticket in DevRev is `works.create`. The description for the API is at https://developer.devrev.ai/api-reference/works/create.\n\nQuestion: What is Trails from DevRev?\nAnswer: Trails is an extensible interface that allows you to view and manage your part hierarchy and related items. Think of it like a graph canvas that is rendering linkages between items making them easier to navigate and summarize. For more information, please refer to: [link to trails documentation]\n\nQuestion: Is it possible to have multiple domains for mailing?\nAnswer: Currently, we do not support multiple domains for mailing. However, we can discuss possible workarounds and solutions. Please contact our support team for further assistance.\n\nQuestion: Can I customize the styling and layout of the PLuG widget?\nAnswer: Yes, you can customize the PLuG styling through our SDK. Please refer to our documentation for more information: [https://docs.devrev.ai/plug/sdk/customize](https://docs.devrev.ai/plug/sdk/customize)\n\nQuestion: Can I create multiple plugs in different websites?\nAnswer: Currently, we do not support multi-PLuG in the same org, but we can discuss alternative solutions to manage chat for different customers. Please contact our support team for more information.\n\nQuestion: How can I pass on authenticated user information to the PLuG widget?\nAnswer: To pass on authenticated user information to the PLuG widget, you can use the [specific method or API] mentioned in our documentation: [link to documentation]\n\nQuestion: How do I set up the PLuG widget on my website?\nAnswer: To set up the PLuG widget on your website, you can follow the instructions provided in our documentation: https://docs.devrev.ai/plug/install\n\nQuestion: How can I install the plug widget?\nAnswer: To set up the PLuG widget on your website, you can follow the instructions provided in our documentation: https://docs.devrev.ai/plug/install\n\nQuestion: How do I create a Sprint board in DevRev?\nAnswer: To create a Sprint Board in DevRev, you can follow these steps:\n\n1.Go to the DevRev app and navigate to the Product or Capability level where you want to create the Sprint Board.\n\n2.Once you are on the desired level, you can find the option to create a Sprint Board under the \"Related\" section.\n\n3.Click on \"Sprint boards\" to view the existing Sprint Boards for that level.\n\n4.If there are no Sprint Boards for the part, click on \"New sprint board\".\n\n5.Specify the name, duration of sprints, and the start date for the new Sprint Board.\n\n6.After providing the necessary details, the new Sprint Board will appear under \"Sprint boards\" in the left navigation bar.\n\n7.You can then click on the Sprint Board to access the Backlog tab, where you can see the issues assigned to the part but not to a sprint.\n\nPlease note that each product or capability can have a maximum of one Sprint Board. You can find more information in https://docs.devrev.ai/product/sprint#sprint-activities\n\n\nQuestion: What is a ticket?\nAnswer: A ticket is a record of a customer's request for assistance on a problem or information about the product. It is owned by a customer support person and describes the issue they are experiencing, and any actions taken to resolve it. A ticket could be a query, bug, feature request, or general request.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-26",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 9 QnAs",
        "content": "Question: What is triage?\nAnswer: Issues that are newly created. From here either a user or automation takes a look at the issue and makes a determination of where it should go. In certain cases it may be immediately closed as a duplicate if the reported concern already exists in another issue. In other cases, the owner may determine that the issue is invalid or cannot be fixed for other reasons and close the issue as won't fix.\n\nIf the issue is not a duplicate and is something that should be accepted, the dev determines how soon it should be addressed by moving into the backlog, prioritized stage.\n\nLink: https://docs.devrev.ai/product/issues#stages\n\n\nQuestion: what is Inbox?\nAnswer: In DevRev, the \"inbox\" refers to the central location where all your notifications, messages, and updates are received. It is similar to an email inbox, but specifically designed for DevRev activities and interactions. You can find all the important information and updates related to your work, such as new messages, comments, mentions, and notifications, in your inbox. It helps you stay organized and up-to-date with the latest happenings in your projects and collaborations.\n\nlink: https://docs.devrev.ai/product/inbox\n\n\nQuestion: Is there any PLuG for email integration?\nAnswer: Yes, there is a plug-in available for email integration in DevRev. The plug-in allows you to seamlessly connect your email account with DevRev, enabling you to manage and respond to emails directly within the DevRev platform. This integration helps streamline your communication and ensures that all customer interactions are centralized in one.\n\n\n\nQuestion: What if the Customer is not able to view the tickets they have created?\nAnswer: Verify that the customer is logged in with the correct account. Sometimes, customers may have multiple accounts or may be using a different email address to log in. Ask the customer to double-check their login credentials.\n\nQuestion: Is Traditional Scrum Outdated?\nAnswer: Yes, traditional scrum processes are considered outdated in many development environments. The fixed constructs of roles, sizing estimations, one-size fits all sprint durations, and recurring meetings have limitations that hinder adaptability and efficiency. Continuous planning, on the other hand, offers a more flexible and intuitive approach to development, allowing teams to prioritize work based on real-time relationships and customer impact. By embracing continuous planning, teams can overcome the limitations of traditional scrum and achieve better results.\n\nQuestion: Can multiple tickets be created?\nAnswer: Yes, you can create multiple tickets in DevRev. After creating a ticket, you will have the option to immediately create another ticket if needed. This can be useful if you have multiple issues or requests that you would like to submit separately. Simply select the \"Create multiple\" option after submitting a ticket, and you can proceed to create another ticket without having to navigate back to the ticket creation page.\n\nQuestion: What is Vistas?\nAnswer: Vistas are a powerful feature in DevRev that allow you to create custom views of your data. A vista is a combination of filters, groupings and sortings that you can apply to your data to get a specific view\n\nQuestion: What does smart cluster do?\nAnswer: Smart clustering is a feature in DevRev that groups similar issues together. It helps in organizing and categorizing the issues based on their similarities. Smart clustering can be used as a personal vista, where users can view and manage their own grouped issues. It also allows users to share the clustered issues with other DevUsers, enabling collaboration and efficient problem-solving.\n\nQuestion: What is Trails?\nAnswer: Trails is an extensible interface that allows you to view and manage your part hierarchy and related items. Think of it like a graph canvas that is rendering linkages between items making them easier to navigate and summarize.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-27",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 1 QnAs",
        "content": "Question: What is DevRev?\nAnswer: DevRev is a platform that connects the voice of the customer from the front office (sales, customer success, and support) with your product on one end and social, real-time work management on the other. It helps improve customer experience and team productivity by converging the front office with the back office (product management, engineering, and design). For more details, you can refer to the documentation at https://docs.devrev.ai/.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-3",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 3 QnAs",
        "content": "Question: what does this do?\nAnswer: DevRev PLuG empowers your customers and customer-facing teams with ready access to relevant information to enable more effective communication.\n\nPLuG refers to the part of the DevRev platform that directly enables communication with and understanding of your users, including your customer success and support teams.\n\nThe PLuG widget is an in-app engagement center that your customers use to interact with you. Conversations started in the PLuG widget are found in the Support Inbox.\n\nYou're currently interacting with our AI-based bot and DevRev personel (if necessary) via our PLuG widget which can be deployed on any website or app by adding a few lines of code.\n\nLearn more here: https://docs.devrev.ai/plug\n\nQuestion: How does this work?\nAnswer: DevRev PLuG empowers your customers and customer-facing teams with ready access to relevant information to enable more effective communication.\n\nPLuG refers to the part of the DevRev platform that directly enables communication with and understanding of your users, including your customer success and support teams.\n\nThe PLuG widget is an in-app engagement center that your customers use to interact with you. Conversations started in the PLuG widget are found in the Support Inbox.\n\nYou're currently interacting with our AI-based bot and DevRev personel (if necessary) via our PLuG widget which can be deployed on any website or app by adding a few lines of code.\n\nLearn more here: https://docs.devrev.ai/plug\n\nQuestion: Can we build prediction models or websites on DevRev?\nAnswer: Yes, you can use DevRev platform for building prediction models or websites  for task management and build/support management.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-4",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 2 QnAs",
        "content": "Question: What is the Pricing Plan?\nAnswer: DevRev provides a detailed and flexible pricing structure to cater to a variety of user needs. The pricing is structured into three main plans, each offering a different set of features and targeting specific user requirements:\n\n**1. Starter Plan:**\n   - **Ideal Audience:** Small teams of up to 15 users navigating product-market fit.\n   - **Offer:** Limited Time Offer includes $1,000 credits.\n   - **Platform License:** $9.99 per Monthly Active User (MAU).\n   - **Support License:** $9.99 per MAU.\n   - **Features:**\n     - Unlimited viewers.\n     - Converged Issue and Ticket Management.\n     - Feature mapping with Parts and Trails.\n     - Data customization with Vistas.\n     - Customer and user management.\n     - Live chat and deflection via PLuG widget.\n     - Omni-channel support through Customer Inbox.\n     - Marketplace integrations for workflow automation.\n     - Airdrop for data sync across apps.\n     - AI-assisted processes for increased productivity.\n\n**2. Pro Plan:**\n   - **Ideal Audience:** Growing teams seeking advanced features.\n   - **Features:** All features from the Starter plan, plus:\n     - Authorization roles and groups.\n     - Single Sign-On (SSO), SCIM, Active Directory Sync.\n     - Scheduled 2-way Jira Sync.\n     - Advanced customization (limited offer).\n     - Increased data storage and retention (limited offer).\n     - 24/5 customer support.\n   - **Pricing:** Platform License at $24.99 per MAU, Support License at $34.99 per MAU.\n\n**3. Ultimate Plan:**\n   - **Ideal Audience:** Complex organizations with strict requirements.\n   - **Features:** All features from the Pro plan, plus:\n     - Audit logging.\n     - Enhanced storage and retention.\n     - SLA-driven support response times.\n     - Advanced object, subtype, and attribute customization.\n     - Multi-region high availability.\n     - Live read replica sandboxes.\n     - Custom pricing based on specific needs.\n\n**Usage-Based Costs:**\n   - User and Customer Management: $0.20 per user, per month.\n   - Conversations:\n     - $0.01 per anonymous user conversation, per month.\n     - $0.45 per verified user conversation, per month.\n   - Storage:\n     - $2.00 per extra GB of file storage, per month.\n     - $25.00 per extra GB of base storage, per month.\n\n**Additional Considerations:**\n   - Authorization roles and profiles: $10.00 per MAU (optional add-on).\n   - Free tier: Limited functionality for individual users and small teams.\n\n**Summary:**\nDevRev's pricing model is designed for flexibility, offering a range of plans and add-ons to meet the specific needs of different teams and organizations. Users can choose the plan that aligns with their team size, usage patterns, and desired features, ensuring transparent and scalable pricing.\n\nFor more information read: https://devrev.ai/pricing\n\nQuestion: What is the Ultimate Pricing plan?\nAnswer: <https://devrev.ai/pricing>\nUltimate: Tailored for complex organizations with strict requirements.\n It encompasses all the features offered in the Pro plan and introduces additional capabilities such as:\n\nAudit logging.\nEnhanced storage and retention.\nSLA-driven support response times.\nAdvanced object, subtype, and attribute customization.\nMulti-region high availability.\nLive read replica sandboxes.\nMoreover, the Ultimate plan offers the flexibility of custom pricing based on specific needs, ensuring that organisations with unique and intricate requirements can tailor their subscription to align with their specific use cases and demands.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-5",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 9 QnAs",
        "content": "Question: What is the Pro Pricing Plan?\nAnswer: <https://devrev.ai/pricing>\nThe Pro plan is specifically tailored for growing teams in search of advanced features. It includes all the features offered in the Starter plan, and in addition, provides the following:\n\n- Authorization roles and groups.\n- Single Sign-On (SSO), SCIM, Active Directory Sync.\n- Scheduled 2-way Jira Sync.\n- Advanced customization (available for a limited time).\n- Increased data storage and retention (limited offer).\n- 24/5 customer support.\n\nThe pricing structure for the Pro plan includes a Platform License at $24.99 per Monthly Active User (MAU) and a Support License at $34.99 per MAU.\n\nConsumption Services for the Pro plan are as follows:\n- Per monthly active conversation (Anonymous User): $0.01\n- Per monthly active conversation (Verified User): $0.45\n- Additional File storage (per extra GB): $2.00\n- Additional Base storage (per extra GB): $25.00\n\nThese services provide flexibility and scalability, allowing teams to adapt to their usage needs.\n\nQuestion: What is the starter pricing plan?\nAnswer: <https://devrev.ai/pricing>\nThe Starter plan is specifically designed for small teams (up to 15 users) navigating product-market fit. It features a Limited Time Offer with $1,000 credits. The pricing structure includes a Platform License at $9.99 per Monthly Active User (MAU) and a Support License at $9.99 per MAU.\n\nKey features of the Starter plan encompass:\n- Unlimited viewers.\n- Converged Issue and Ticket Management.\n- Feature mapping with Parts and Trails.\n- Data customization with Vistas.\n- Customer and user management.\n- Live chat and deflection via the PLuG widget.\n- Omni-channel support through Customer Inbox.\n- Marketplace integrations for workflow automation.\n- Airdrop for data sync across apps.\n- AI-assisted processes for increased productivity.\n\nAdditionally, Consumption Services are offered with the following rates:\n- Per monthly active conversation (Anonymous User): $0.01\n- Per monthly active conversation (Verified User): $0.45\n- Additional File storage (per extra GB): $2.00\n- Additional Base storage (per extra GB): $25.00\n\nAs an optional add-on, Authorization roles and profiles can be included at a cost of $10.00 per MAU.\n\n\nQuestion: What is the file extension for a snap-in manifest?\nAnswer: The snap-in manifest is a YAML file, so the file extension is .yaml.\n\nFor more information on the manifest file, see https://docs.devrev.ai/snap-ins/references/manifest#version\n\n\n\nQuestion: How can I select multiple parts while planning a sprint?\nAnswer: Currently, only a single part can be selected while planning sprints. If you have tasks from different parts, you can select the parent part (capability) which includes all the parts you want to select. We are currently working on the very same ask of allowing issues from varying parts into a single sprint. We should have a usable version of this out in prod soon. \n\nQuestion: How to activate the free plan for startups?\nAnswer: You should visit <https://devrev.ai/startups> and signup to avail the plan. If you have already signed up from the startups page, you don't need to fill anything. Within few days someone from our team will reach out to you.\n\nQuestion: How can I reach the sales team?\nAnswer: You can reach the sales team by booking a demo at https://calendly.com/mdr-team/devrev-demo?month=2023-12\n\nQuestion: Can this integrate with Facebook messenger?\nAnswer: Currently, we are working on this feature. We will let you know once it's available.\n\nQuestion: Can you please tell more about the startup program?\nAnswer: You can find more information about the startup program at this link: https://devrev.ai/startups\n\nQuestion: Can I pay only for the build feature without the support?\nAnswer: Yes. You can pay only for the build side which would be the Platform Fee. If you require support, you can pay the additional Support license fee and get the support access.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-6",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 10 QnAs",
        "content": "Question: What is the difference between accounts-create API and rev-orgs-create?\nAnswer: The accounts-create API is used to create a new account and it automatically associates a default workspace with the account. The rev-orgs-create is used to create additional workspaces (revorgs) under an account.\n\nQuestion: Is it legal to record the user session?\nAnswer: As of this date, the legality of session replay technologies like DataDog RUM, Pendo, FullStory and others have been deemed legal.\n\nWith that said, DevRev's Session Replay masks all data on the client so not data or potentially sensitive information is sent to DevRev.  We take privacy and security very seriously at DevRev and will continually ensure all steps are done to ensure privacy for our users and their customers.\n\nHowever, it is recommended to consult with legal experts or review applicable laws and regulations in your region to ensure compliance.\n\n\n\nQuestion: What is session recording feature in DevRev plug widget and how is it useful?\nAnswer: The session recording feature in DevRev is designed with privacy and data masking in mind. It ensures that user privacy is protected and complies with applicable laws and regulations. DevRev's session recording feature does not capture any personally identifiable information (PII) or sensitive data. It focuses on recording user interactions and actions within the application or website, rather than capturing the actual content of the screen. Additionally, DevRev provides full privacy and data masking capabilities. This means that any sensitive information, such as passwords, credit card details, or other confidential data, is automatically masked or excluded from the session recording. Only the relevant user interactions and events are recorded. DevRev takes privacy and data protection seriously, and the session recording feature is designed to prioritize user privacy while providing valuable insights for support and troubleshooting purposes.\n\nQuestion: How are conversations persisted in DevRev?\nAnswer: Conversations in DevRev are persisted using a combination of real-time messaging and data storage. The platform captures and stores conversations between the front office (sales, customer success, and support) and the back office (product management, engineering, and design). This allows for seamless collaboration and knowledge sharing across teams. For more technical details on how conversations are persisted in DevRev, you can refer to the documentation at https://docs.devrev.ai/.\n\nQuestion: Book/Schedule a demo with DevRev\nAnswer: Thank you for reaching out, you can schedule a demo with our product reps by placing a request here - https://devrev.ai/request-a-demo. Our team will walk you through DevRev and answer any questions you may have.\n\nQuestion: What is the correct phone number format for the rev-users-create API?\nAnswer: For the rev-users-create API, the phone number needs to be in e164 format which prepends a `+` and country code.\n\nQuestion: What to do when a customer is seeing more workspaces than they should?\nAnswer: This issue can occur if there are multiple user ids associated with the customer's email. The solution is to merge the duplicate user entries.\n\nQuestion: Is there a feature to save notification preferences for the updates section?\nAnswer: An updated version of the Updates page is being developed which will feature two distinct sections: 'Important' and 'Others.' In the 'Important' section, users will find all mentions, assignments and reminders. By default, users will receive notifications only for items categorized as 'Important.' This enhancement is expected to be launched next month.\n\nQuestion: Can I configure the sprint to exclude weekends?\nAnswer: Currently, sprint insights include weekends and holidays. There is no specific setting to define and exclude non-working days.\n\nQuestion: Why am I not seeing Turing AI in my left menu?\nAnswer: Turing AI may not be visible in your left menu because it is not yet generally available for all internal users.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-7",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 13 QnAs",
        "content": "Question: Is there a way to open a new branch from within an issue so that it transitions automatically with the github snap in?\nAnswer: Including the  issue ID in the branch name, such as *ISS-1234_fix_unknown_user*, is the best way to establish a link between your branch and an issue. This will allow you to view the messages from the GitHub snap-in in the issue events, whenever a new commit is pushed to the branch.\n\nQuestion: Do you support localization?\nAnswer: We support Turing bot answering in multiple languages. The PLuG widget can be customized fully, but our DevRev UI and backend interface will remain in English.\n\nQuestion: Is there a way to import organization and customers from Jira?\nAnswer: Yes, There is a way to import data from Jira in DevRev. In addition, this capability allows continuous synchronization of Jira with DevRev as well as synchronization of DevRev organisation with the Jira project. \n\nIn order to start the import process, please select:\n\"Settings\" -> \"Integrations\" -> \"Imports\" and then click on the \"Import\" button in the top right corner. \n\nIn the first step, the user has to create a \"connection\". In the second step, the user has to select a Jira project from which import in DevRev will be executed and also a part to which issues will be associated. \n\nAfter that import will be started, and all information about the status of the import will be available in \"Ongoing imports\" tab. \n\nHope this helps.\n\nQuestion: What are the generated QAs used for?\nAnswer: Turing will refer to these QAs to answer similar questions in the future, thus reducing human effort to answer redundant questions!\n\nQuestion: Can Turing generate question answers on its own from a conversation?\nAnswer: Yes, Turing can generate question answers from the conversation that we are having right now, once the conversation is resolved.\n\nQuestion: What are the number of issues filed with the tag Digital Campaigns?\nAnswer: You can access this information by asking Turing within the app. It is available in the side navigation or with keyboard shortcuts Control+J/Cmd+J.\n\nQuestion: What is the number of users signed up after Nov 1?\nAnswer: You can access this information by asking Turing within the app. It is available in the side navigation or with keyboard shortcuts Control+J/Cmd+J.\n\nQuestion: What model does your chat bot use? Llama? ChatGPT 4?\nAnswer: We use a GPT model for our chatbot.\n\nQuestion: Can I use my own knowledge base?\nAnswer: Yes, you can use your own knowledge base.\n\nQuestion: Can I delete my account?\nAnswer: Yes, you can delete your account. However, please note that deleting your account will also delete all organizations associated with it. If you wish to proceed with deleting your account, please contact our support team for further assistance.\n\nQuestion: What is an enhancement?\nAnswer: Enhancements are improvements or additions made to a product or system to enhance its features, functionality, or performance. They are typically implemented to address user needs, improve user experience, or add new capabilities to the product. Enhancements can range from small updates to major changes and can be driven by customer feedback, market trends, or technological advancements.\n\nQuestion: What is a chat flow?\nAnswer: A chatflow is a structured sequence of interactions or messages within a chat interface designed to guide users through a conversation or process. It's a predefined series of steps or messages that a user interacts with, often in a conversational format, to accomplish a specific goal or task. Chatflows are commonly used in chatbots, customer support systems, and automated messaging platforms to streamline interactions, provide information, collect data, or assist users in achieving their objectives in a conversational manner. They help ensure a more guided and coherent experience for users interacting within a chat interface.\n\nQuestion: Is the roadmap intended for internal use only?\nAnswer: For now, the roadmap is shown internally by default.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-8",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 13 QnAs",
        "content": "Question: Is it possible to share the roadmap with users as a preview?\nAnswer: Regarding exposing roadmap to external audience it\u2019s on the roadmap for next year to allow for the sharing of roadmap via a plug and play portal.\n\nQuestion: Can the knowledge base be automatically created by scraping a separate domain?\nAnswer: Yes, the knowledge base can scrape a separate domain to automatically create articles and Q&A.\n\nQuestion: Can I create the knowledge base on a custom domain?\nAnswer: No, the knowledge base is inside of DevRev and cannot be hosted on a custom domain.\n\nQuestion: Does your system use GPT 4?\nAnswer: Yes, our system utilizes both GPT3.5 and GPT4 models provided by OpenAI.\n\nQuestion: Can I customize the domain for the customer portal?\nAnswer: No, it is not possible to move the customer portal to a custom domain.\n\nQuestion: What is an employee referral?\nAnswer: An employee referral is when a current employee of a company recommends someone they know for a job opening within the company.\n\nQuestion: Why is the AI suppressing data in my ticket description?\nAnswer: The AI should not be editing ticket descriptions in a way that suppresses valuable data. We apologize for any inconvenience caused. Please provide an example where our AI is suppressing pieces of your ticket descriptions so that we can investigate and resolve the issue.\n\nQuestion: How can I stop the AI from suppressing valuable data in the ticket description?\nAnswer: To stop the AI from suppressing valuable data in the ticket description, you can try adjusting certain settings or dials. Please provide an example where our AI is suppressing pieces of your ticket descriptions so that we can better understand the issue and provide a solution.\n\nQuestion: Why are some customers not populating when searching by name or email?\nAnswer: If customers are not showing up when searching by name or email, it could be due to a few reasons. First, make sure that the customer is listed as a contact or rev user. You can check this by searching for the account and looking at the details. If the customer is listed as a user in the customer account but still not showing up, try searching for their name using the global search feature (cmd+k). If the issue persists, it may be necessary to delete and recreate the contact to resolve the problem.\n\nQuestion: Why am I getting an error when trying to move a work in progress ticket to in development?\nAnswer: If you are getting an error when trying to move a work in progress ticket to in development, it could be due to a temporary system issue. Please try refreshing the page and attempting the change again. If the issue persists, please contact your support team for further assistance.\n\nQuestion: Why am I unable to change the stage of a ticket from Queued to Work in Progress?\nAnswer: If you are unable to change the stage of a ticket from Queued to Work in Progress, it could be due to a temporary system issue. Please try refreshing the page and attempting the change again. If the issue persists, please contact your support team for further assistance.\n\nQuestion: I am getting an error when I attempt to move a Queued ticket to Work in Progress. What should I do?\nAnswer: If you are getting an error when trying to change the stage of a ticket from Queued to Work in Progress, please try the following steps:\n1. Refresh the page and try again.\n2. Check if there are any system-wide issues or maintenance going on.\n3. Contact your support team for further assistance.\n\nQuestion: What happens when I do a new import after deleting the Hubspot snap-in?\nAnswer: Repeating the same import will not generate duplicated items. By clicking on \"-> From HubSpot to DevRev\", you will trigger resync, which means that only new items will be imported in DevRev.\n\n"
    },
    {
        "id": "devrev-dev0-qnas-9",
        "dataset_source": "devrev-dev0",
        "title": "Article created from 9 QnAs",
        "content": "Question: How do I confirm there are no duplicates when adding a connector back in and doing a new import?\nAnswer: When you remove the import from the \"Past imports\" by selecting \"Delete import\", all imported items were deleted. Upon new import, all these objects would be created once again, this time with different IDs, but there will be no duplicates.\n\nQuestion: If I reconnect Hubspot, will it duplicate all imports?\nAnswer: No, there should be no duplicates even if you reconnect Hubspot.\n\nQuestion: After logging in to DevRev, it redirects me to create a new organization. How can I access my account?\nAnswer: If you are being redirected to create a new organization after logging in to DevRev, please follow these steps:\n1. Make sure you are using the correct login credentials for your existing organization.\n2. If you have multiple organizations, ensure that you are selecting the correct one during the login process.\n3. If the issue persists, contact our support team for further assistance.\n\nQuestion: I got logged out of DevRev and can't log in again. What should I do?\nAnswer: If you are unable to log in to DevRev, please try the following steps:\n1. Double-check your login credentials to ensure they are correct.\n2. Clear your browser cache and cookies, then try logging in again.\n3. If the issue persists, reach out to our support team for further assistance.\n\nQuestion: I'm trying to log in as a customer to the customer portal, but I'm getting an error message. What should I do?\nAnswer: To log in as a customer to the customer portal, you need to make yourself a customer from the Customers section under Accounts. If an account already exists, you can follow the further steps given below, by creating a new contact. You can also create a new account if it hasn't been done already. Make sure that the URL you are using for the customer portal is the same as the app URL. If the app URL is something like `https://app.devrev.ai/[xyz]`, then the customer portal URL should be `https://support.devrev.ai/[xyz]/login`. You can log in with the same email that you used while adding yourself as a new contact. \n\nQuestion: How can I schedule a call with the support team?\nAnswer: You can schedule a call with our support team by reaching out to them via different channels and you'll be provided with a calendar link by our support engineer .They will be able to help you solve any problems you are encountering during the call.\n\nQuestion: I am receiving a 'something went wrong' error when attempting to delete an SLA policy. What should I do?\nAnswer: To troubleshoot the error, consider examining the network logs of API calls. Follow these steps:\n\nRight-click anywhere on the UI.\nSelect 'inspect'.\nNavigate to the network tab.\nLocate the failed API calls.\nChoose one of the failed calls to inspect its response.\nAfter identifying the issue, please reach out to our support team and provide the specific details for further assistance.\n\nQuestion: What is the difference between File Storage and Base Storage?\nAnswer: The distinction between \"base storage\" and \"file storage\" lies in their respective functionalities within a system. \"Base storage\" is associated with the core object model, encompassing fundamental elements such as work, parts, and identity. On the other hand, \"file storage\" is designed for handling various file types, including images and documents, often utilizing storage solutions like Amazon S3. While \"base storage\" deals with the foundational structure and entities of the system, \"file storage\" is dedicated to managing and storing files in a scalable and secure manner.\n\nQuestion: Is there a plan to host DevRev in Europe?\nAnswer: DevRev is a global product and there is a roll-out plan to cover all major regions, including the EU. It is planned to be available in the EU before the 1st of February 2024.\n\n"
    }
]